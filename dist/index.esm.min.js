class t extends Error{constructor(t,n){super(t),this.urlorname=n}}function n(t){if(""===t)throw new TypeError(k);if("string"!=typeof t)throw new TypeError(U)}const e={};function r(r){n(r);const o=J[r]||J[e[r]];if(o)return Object.freeze(o),o;throw new t(W+r,r)}function o(t){return"object"==typeof t&&"[object Object]"==={}.toString.call(t)&&t instanceof Object}async function i(t,n){return await Promise.all(t.map(t=>n(t)))}async function a(t,n){return await Promise.all(t.map(t=>n(t[0],t[1])))}const c={};function s(t){return Array.isArray(t)&&"[object Array]"==={}.toString.call(t)}function u(t){const n={}.toString.call(t);return"function"==typeof t&&"[object Function]"===n||"[object AsyncFunction]"===n}function f(t,n,e){return"string"!=typeof t&&(e=n,n=t,t=null),s(n)||(e=n,n=null),!n&&u(e)&&(n=[]),[t,n,e]}f.cmd=!0,f.amd=!0;const l=(()=>{let t;try{t=Function("u","return import(u)")}catch(e){t=async function(t){return n(t),t=new URL(t).href,await function(t){const n=Symbol.for("import-"+t);return new Promise((e,r)=>{const o=document.createElement("script");function i(){o.remove(),function(t){try{window.removeEventListener("error",t)}catch(t){}}(a),URL.revokeObjectURL(o.src),o.onload=o.onerror=null}function a(t){r(t.error),i()}window.addEventListener("error",a);const c=(s=`import*as m from'${t}';\nwindow[Symbol.for('${"import-"+t}')]=m`,URL.createObjectURL(new Blob([s],{type:"application/javascript"})));var s;o.type="module",o.src=c,o.async=!0,o.onload=()=>{if(Reflect.has(window,n)){const t=O(window,n);e(t),E(window,n,void 0),i()}},o.onerror=()=>{r(new Error("import load failed from network"+t)),i()},document.head.appendChild(o)})}(t)}}return t})();function y(t,n){n&&(u(n)||"object"==typeof n)&&Object.keys(n).forEach(e=>{try{R(t,e,{enumerable:!0,get:()=>O(n,e)})}catch(t){}})}const d=function(r){n(r);const o=J[r]||J[e[r]];if(o)return Object.freeze(o),o.default?o.default:o;throw new t(W+r,r)};function w(t,n){if(String(t).startsWith("./")||String(t).startsWith("../")){return function(t,n){return(String(n).startsWith("./")||String(n).startsWith("../"))&&(String(n).endsWith(".js")||n.endsWith(".mjs")||n.endsWith(".json")||n.endsWith(".css")||n.endsWith(".html")||(n+=".js"),n=new URL(t+n).href),n}(function(t){var n=new URL(t),e=n.pathname.split("/");return e[e.length-1]="",n.origin+e.join("/")}(n),t)}return t}function h(t){return!("object"==typeof t&&!Object.keys(t).length&&"{}"===JSON.stringify(t))}const p=Symbol("deps"),m=Symbol("type"),g=Symbol("url"),b=Symbol("source");var j;!function(t){t.amd="amd",t.cjs="cjs",t.esm="esm",t.json="json"}(j||(j={}));var S=/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'|\/\*[\S\s]*?\*\/|\/(?:\\\/|[^\/\r\n])+\/(?=[^\/])|\/\/.*|\.\s*require|(?:^|[^$])\brequire\s*\(\s*(["'])(.+?)\1\s*\)/g,v=/\\\\/g;const{get:O,set:E,defineProperty:R}=Reflect;var x=async(t,r)=>(r&&(e[r]=t),await new Promise((function(e,r){return((e,r)=>(async()=>{try{return await(async()=>{let i,a;try{try{[i,a]=await async function(t){let n;const e=O(c,t);if(e)return e;{const e=await fetch(t).then(async e=>{if(!e.ok)throw new Error("fetch failed "+t);const r=e.headers.get("content-type");if(null==r?void 0:r.includes("javascript"))n="js";else{if(null==r||!r.includes("json"))throw new Error("invalid content-type "+n);n="json"}return await e.text()});if(E(c,t,e),!n)throw new Error;return[e,n]}}(t)}catch(t){return void r(t)}const W=Object.create(null);let U;W[g]=t;const k=i;let P;if("undefined"!=typeof Symbol&&Symbol.toStringTag&&R(W,Symbol.toStringTag,{value:"Module"}),P=k,W[p]=[],W[b]=P,"json"===a){const n=JSON.parse(k);return U=j.json,y(W,n),W[m]=U,Object.freeze(W),J[t]=W,void e(W)}try{const i={[Symbol.toStringTag]:"Module"},a={exports:{[Symbol.toStringTag]:"Module"}};try{let e=!1;const r=new Function("require","define","module","exports",`\n                        "use strict";\n/* ${t} */;\n${k};\n/* ${t} */;\n\n                        `);W[p]=(L=k,T=[],L.replace(v,"").replace(S,(function(t,n,e,...r){return e&&T.push(e),""})),T).map(n=>w(n,t)),await N(W[p]);let c=()=>{};r.call(a.exports,e=>((t,e)=>{if(n(t),String(t).startsWith("./")||String(t).startsWith("../")){const n=w(t,e);return d(n)}return d(t)})(e,t),(n,r,o)=>{const i=f(n,r,o);e=!0,c=i[2],W[p]=i[1].map(n=>w(n,t))},a,i),e?(U=j.amd,await N(W[p]),a.exports=c.call(a.exports,...W[p].map(t=>d(t)))):U=j.cjs;const l=function(t){if(h(t[0])){return t[0]}if(h(t[1])){return t[1]}}([i||{},a.exports?a.exports:{}]);l&&(s=W,u=O(u=l,"default")?O(u,"default"):u,x=u,"[object Module]"==={}.toString.call(x)||o(u)||R(s,"default",{enumerable:!0,get:()=>u}),y(W,l))}catch(n){if(!(n instanceof SyntaxError))return void r(n);{const n=t;try{const t=await l(n);W[p]=[],U=j.esm,y(W,t)}catch(t){return void r(t)}}}return W[m]=U,J[t]=W,W.default&&y(W,W.default),Object.freeze(W),void e(W)}catch(t){return void r(t)}}catch(t){return void r(t)}var s,u,x,L,T})()}catch(t){return void r(t)}})())(e,r)})));const L="The argument passed in must be an object";async function T(t,e){if(o(t))return await(async t=>{const n=function(t){if("object"!=typeof t)throw new TypeError(L);return JSON.parse(JSON.stringify(t))}(t),e=Object.entries(n).map(([t,n])=>[n,t]);let r=[];try{r=await a(e,T)}catch(t){r=await a(e,T)}finally{r=await a(e,T)}let o={};return Object.keys(n).forEach((t,n)=>{o[t]=r[n]}),o})(t);if(s(t))return await(async(...t)=>{let n=[];const e=t;try{n=await i(e,T)}catch(t){n=await i(e,T)}finally{n=await i(e,T)}return n})(...t);if("string"==typeof t||"string"==typeof e)return n(t),await(async(t,n)=>(void 0===n&&(n=new URL(t).href),t=new URL(t).href,void 0!==J[n]&&void 0!==J[n].default&&O(J[n],g)===t?r(n):void 0!==J[t]&&void 0!==J[t].default&&O(J[t],g)===t?r(t):await x(t,n)))(t,e);throw new TypeError("The type entered is incorrect, the type entered must be a string or an array or an object")}const W="Cannot find module in packagestore, Not found in module repository, ",U="Parameter must be a string",k="String cannot be empty";async function N(e,r){let i=0;return await T(e,r).catch(c);async function a(t,n,e,r){try{return await T(t,n).catch(c),await T(e,r)}catch(t){return await T(e,r).catch(c)}}async function c(c){if(i>100)throw new Error("Try loading, too many failures, give up trying!"+JSON.stringify(e)+JSON.stringify(r));if(i++,c instanceof t){const t=c.urlorname;if(function(t){var e=!1;try{n(t),t=new URL(t).href,e=!0}catch(t){e=!1}return e}(t))return await a(t,void 0,e,r);if(o(e)&&Reflect.has(e,t))return await a(O(e,t),t,e,r);throw c}throw c}}const J={},P=r;export default N;export{J as PACKAGESTORE,P as REQUIREPACKAGE,N as importcjsamdumd,e as packagealias};
//# sourceMappingURL=index.esm.min.js.map
