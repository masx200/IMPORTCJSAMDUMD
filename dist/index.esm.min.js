var dynamicimportshim=(()=>{let e;try{e=Function("u","return import(u)")}catch(r){e=async function(e){if(""===e)throw new TypeError("字符串不能为空");if("string"!=typeof e)throw new TypeError("参数必须为字符串");return e=new URL(e).href,await new Promise((r,t)=>{function n(){!function(e){try{document.head.removeChild(e)}catch(e){}}(a),function(e){try{window.removeEventListener("error",e)}catch(e){}}(o),URL.revokeObjectURL(a.src)}function o(e){t(e.error),n()}window.addEventListener("error",o);const i=function(e){return URL.createObjectURL(new Blob([e],{type:"application/javascript"}))}(`import*as m from'${e}';\nwindow[Symbol.for('${"import-"+e}')]=m`),a=document.createElement("script");a.type="module",a.src=i,a.async=!0,document.head.appendChild(a),a.onload=()=>{r(window[Symbol.for("import-"+e)]),Reflect.deleteProperty(window,Symbol.for("import-"+e)),n()},a.onerror=e=>{t(e),n()}})}}return e})();const GLOBALPACKAGESTORE="PACKAGESTORE",字符串不能为空="字符串不能为空",加载的模块没有输出="加载的模块没有输出",namesymbol=Symbol.for("name"),urlsymbol=Symbol.for("url"),sourcesymbol=Symbol.for("source");var coreload=(e,r)=>{return t;function t(t,n){return((t,n)=>{(async()=>{try{await(async()=>{let o;try{try{o=await fetch(e).then(r=>{if(!r.ok)throw new Error("fetch failed "+e);return r.text()})}catch(e){return void n(e)}try{await(async o=>{const i={exports:{[Symbol.toStringTag]:"Module"}},a={exports:{}};var f;define.exports={};const c={default:void 0};try{!function(r,t,n,o,i){const a=new Function("require","define","module","exports",`"use strict";\n/* ${e} */;\n${i};\n/* ${e} */;\n`);f=a.toString(),a.call(n.exports,t=>{if(assertstring(t),""===(t=String(t)))throw new TypeError(字符串不能为空);return t=function(e,r){return(String(r).startsWith("./")||String(r).startsWith("../"))&&(String(r).endsWith(".js")||(r+=".js"),r=new URL(e+r).href),r}(function(e){var r=new URL(e),t=r.pathname.split("/");return t[t.length-1]="",r.origin+t.join("/")}(e),t),r(t)},t,n,o.exports)}(myrequirefun,define,a,i,o),function(t){void 0===t&&(t=[{},{},{}]);void 0===define.exports&&(define.exports={});function o(e){return"object"!=typeof e||Object.keys(e).length||"{}"!==JSON.stringify(e)}if(o(t[0])){const e=t[0];定义default(c,e)}else if(o(t[1])){const e=t[1];定义default(c,e)}else{if(!o(t[2]))return void n(Error(加载的模块没有输出+" "+r+" "+e));{const e=t[2];定义default(c,e)}}}([i.exports?i.exports:{},a.exports?a.exports:{},define.exports?define.exports:{}])}catch(t){if(!(t instanceof SyntaxError))return void n(t);{const t=e;f=t;try{const e=await dynamicimportshim(t);定义default(c,e.default?e.default:e)}catch(e){return void n(e)}if(void 0===c.default)return void n(Error(加载的模块没有输出+" "+r+" "+e))}}Object.defineProperties(c,{[namesymbol]:{value:r,writable:!0,enumerable:!1},[urlsymbol]:{value:e,writable:!0,enumerable:!1},[sourcesymbol]:{value:f,enumerable:!1}}),"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),void 0!==c.default&&void 0!==r&&(IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][r]=c),IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][e]=IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][r],c.default&&Object.keys(c.default).filter(e=>"default"!==e).forEach(e=>{Object.defineProperty(c,e,{enumerable:!0,get:()=>c.default[e]})}),t(c)})(o)}catch(e){return void n(e)}}catch(e){return void n(e)}})()}catch(e){return void n(e)}})()})(t,n)}};function isArray(e){return"object"==typeof e&&Array.isArray(e)&&"[object Array]"===Object.prototype.toString.call(e)}const 参数必须为字符串="参数必须为字符串",字符串不能为空$1="字符串不能为空";let myrequirefun;function define(e,r,t){define.exports={},define.amd=!0;const n=[],o=Object.prototype.toString;var i;"string"!=typeof e&&(t=r,r=e,e=null),isArray(r)||(t=r,r=null),r||(i=t,"[object Function]"!==o.call(i))||(r=[]),n.push([e,r,t]);const a=n[0][1].map(e=>myrequirefun(e));define.exports=n[0][2](...a)}function assertstring(e){if(""===e)throw new TypeError(字符串不能为空$1);if("string"!=typeof e)throw new TypeError(参数必须为字符串);return!0}function 定义default(e,r){"Module"===r[Symbol.toStringTag]&&r.default&&(r=r.default),Object.defineProperty(e,"default",{enumerable:!0,get:()=>r})}define.exports={},define.amd=!0;const IMPORTCJSAMDUMD=(()=>{const e="Cannot find module in packagestore, 模块仓库中没有找到, ",r="输入的类型错误,输入的类型必须是字符串或者数组或对象",t="输入的类型错误,输入的字符串不能为空,url不能为undefined",n="传入的参数必须是个object",o=Symbol.for("name"),i=Symbol.for("url"),a="PACKAGESTORE",f=async function(...e){const s=async function(e,s){async function y(e){return await Promise.all(Array.from(e).map(e=>f(e[0],e[1])))}if(u(e))return await(async e=>{e=function(e){if("object"!=typeof e)throw new TypeError(n);return JSON.parse(JSON.stringify(e))}(e);const r=Object.keys(e).map(r=>{const t=e[r],n=r;return[t,n]});let t=[];try{t=await y(r)}catch(e){t=await y(r)}finally{t=await y(r)}let i={};return t.forEach(e=>{i[e[o]]=e}),i})(e);if(isArray(e)&&"object"==typeof e||"object"==typeof s)return await(async()=>{let e=[];const r=Array(...arguments);try{e=await y(r)}catch(t){e=await y(r)}finally{e=await y(r)}return e})();if("string"==typeof e||"string"==typeof s)return assertstring(e),await(async(e,r)=>{if(void 0===e||""===e||""===r)throw new TypeError(t);if(void 0===r&&(r=new URL(e).href),e=new URL(e).href,void 0!==f[a][r]&&void 0!==f[a][r].default&&f[a][r][i]===e)return c(r);if(void 0!==f[a][e]&&void 0!==f[a][e].default&&f[a][e][i]===e)return f[a][r]=f[a][e],f[a][r][o]=r,c(e);{const t=coreload(e,r);return await new Promise(t)}})(e,s);throw new TypeError(r)}(...e);return await s.catch(async r=>{if(!r.urlorname)throw r;if(function(e){var r=!1;try{if(""===e)throw new TypeError(字符串不能为空$1);if("string"!=typeof e)throw new TypeError(参数必须为字符串);e=new URL(e).href,r=!0}catch(e){r=!1}return r}(r.urlorname))await y(r.urlorname);else{if(!u(e[0])||!Reflect.has(e[0],r.urlorname))throw r;try{await y(...e)}catch(e){throw r}}return await y(...e)})};function c(r){if(""===r)throw new TypeError(字符串不能为空$1);if("string"!=typeof r)throw new TypeError(参数必须为字符串);const t=f[a][r];if(t)return new Proxy(t,{set:()=>!1,deleteProperty:()=>!1});throw new Error(e+r)}function u(e){return"object"==typeof e&&"[object Object]"===Object.prototype.toString.call(e)&&e.__proto__===Object.prototype}function s(e){var r=false;try{if(e===""){throw new TypeError(字符串不能为空$1)}if(typeof e!=="string"){throw new TypeError(参数必须为字符串)}e=new URL(e).href;r=true}catch(e){r=false}return r}async function y(...e){const r=l(...e);const t=async r=>{if(r.urlorname){if(s(r.urlorname)){undefined;await y(r.urlorname)}else{if(u(e[0])&&Reflect.has(e[0],r.urlorname)){try{await y(...e)}catch(e){undefined;throw r}}else{throw r}}}else{throw r}return await y(...e)};return await r.catch(t)}async function l(e,s){function y(e){if(typeof e!=="object"){throw new TypeError(n)}return JSON.parse(JSON.stringify(e))}async function l(e){return await Promise.all(Array.from(e).map(e=>{return f(e[0],e[1])}))}if(u(e)){return await(async e=>{e=y(e);const r=Object.keys(e).map(r=>{const t=e[r];const n=r;return[t,n]});let t=[];try{t=await l(r)}catch(e){undefined;t=await l(r)}finally{t=await l(r)}let n={};t.forEach(e=>{n[e[o]]=e});return n})(e)}else if(isArray(e)&&typeof e==="object"||typeof s==="object"){return await(async()=>{let e=[];const r=Array(...arguments);try{e=await l(r)}catch(t){undefined;e=await l(r)}finally{e=await l(r)}return e})()}else if(typeof e==="string"||typeof s==="string"){assertstring(e);return await(async(e,r)=>{if(typeof e==="undefined"||e===""||r===""){throw new TypeError(t)}if(typeof r==="undefined"){r=new URL(e).href}e=new URL(e).href;if(typeof f[a][r]!=="undefined"&&typeof f[a][r].default!=="undefined"&&f[a][r][i]===e){return c(r)}else if(typeof f[a][e]!=="undefined"&&typeof f[a][e].default!=="undefined"&&f[a][e][i]===e){f[a][r]=f[a][e];f[a][r][o]=r;return c(e)}else{const t=coreload(e,r);return await new Promise(t)}})(e,s)}else{throw new TypeError(r)}}return f.REQUIREPACKAGE=c,f[a]=f[a]||{},myrequirefun=function(r){if(""===r)throw new TypeError(字符串不能为空$1);if("string"!=typeof r)throw new TypeError(参数必须为字符串);const t=f[a][r];if(t)return t.default;{let t=new Error(e+r);throw t.urlorname=r,t}},f})();export default IMPORTCJSAMDUMD;