{"version":3,"file":"index.js","sources":["../src/cantfindError.ts","../src/isplainobject.ts","../src/assertstring.ts","../src/dynamicimportshim.ts","../src/getbaseurl.ts","../src/formaturl.ts","../src/myrequirefun.ts","../src/formatedurlrequire.ts","../src/define-default.ts","../src/notemptyobj.ts","../src/isarray.ts","../src/isfunction.ts","../src/define.ts","../src/handlecjsmodule.ts","../src/coreload.ts","../src/newobjjson.ts","../src/arrayimportall.ts","../src/getmodule.ts","../src/oldimport.ts","../src/isurl.ts","../src/importcjsamdumd.ts"],"sourcesContent":["export class cantfindError extends Error {\r\n  urlorname: string;\r\n  constructor(message: string, urlorname: string) {\r\n    super(message);\r\n    this.urlorname = urlorname;\r\n  }\r\n}\r\n","import { PlainObj } from \"./oldimport\";\r\n\r\nexport function isplainobject(o: any): o is PlainObj {\r\n  return (\r\n    typeof o === \"object\" && {}.toString.call(o) === \"[object Object]\"\r\n    //&&\r\n    //   o.__proto__ === Object.prototype\r\n  );\r\n}\r\n","import { 参数必须为字符串, 字符串不能为空 } from './importcjsamdumd';\r\n\r\nexport function assertstring(s: string) :asserts s is string \r\n{\r\n    if (s === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof s !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n  //   return true;\r\n  }","/* eslint-disable no-empty */\r\n\"use strict\";\r\nexport { createBlob };\r\nfunction createBlob(source: string) {\r\n  return URL.createObjectURL(\r\n    new Blob([source], { type: \"application/javascript\" })\r\n  );\r\n}\r\nconst dynamicimportshimfun = (() => {\r\n  \"use strict\";\r\n  const 参数必须为字符串 = \"参数必须为字符串\";\r\n  const 字符串不能为空 = \"字符串不能为空\";\r\n  let dynamicimportshim: Function;\r\n  try {\r\n    dynamicimportshim = Function(\"u\", \"return import(u)\");\r\n  } catch (error) {\r\n    dynamicimportshim = async function(url: string) {\r\n      if (url === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      }\r\n      if (typeof url !== \"string\") {\r\n        throw new TypeError(参数必须为字符串);\r\n      }\r\n      url = new URL(url).href;\r\n\r\n      return await getnewimportpromise(url);\r\n    };\r\n  }\r\n  return dynamicimportshim;\r\n})();\r\nexport default dynamicimportshimfun;\r\nfunction getnewimportpromise(url: string) {\r\n  const symbolkey = Symbol.for(\"import-\" + url);\r\n  return new Promise((resolve, reject) => {\r\n    const s = document.createElement(\"script\");\r\n    function clearsideeffect() {\r\n      removescript(s);\r\n      removeerrorlisten(errorhandler);\r\n      URL.revokeObjectURL(s.src);\r\n      s.onload = s.onerror = null;\r\n    }\r\n    function removeerrorlisten(f: (evt: ErrorEvent) => void) {\r\n      try {\r\n        window.removeEventListener(\"error\", f);\r\n      } catch (error) {}\r\n    }\r\n    function removescript(e: HTMLScriptElement) {\r\n      e.remove();\r\n      //try {\r\n      //   document.head.removeChild(e);\r\n      //  } catch (error) {}\r\n    }\r\n    function errorhandler(e: ErrorEvent) {\r\n      console.warn(e.error);\r\n      reject(e.error);\r\n      clearsideeffect();\r\n    }\r\n    window.addEventListener(\"error\", errorhandler);\r\n    const topLevelBlobUrl = createBlob(\r\n      `import*as m from'${url}';\\nwindow[Symbol.for('${\"import-\" + url}')]=m`\r\n    );\r\n    s.type = \"module\";\r\n    s.src = topLevelBlobUrl;\r\n    s.async = true;\r\n    s.onload = () => {\r\n      if (\r\n        Reflect.has(window, symbolkey)\r\n        /* symbolkey in */\r\n      ) {\r\n        const moduleoutput = Reflect.get(window, symbolkey);\r\n        resolve(moduleoutput /* [Symbol.for(\"import-\" + url)] */);\r\n        Reflect.set(window, symbolkey, undefined);\r\n        clearsideeffect();\r\n      }\r\n    };\r\n    s.onerror = () => {\r\n      reject(new Error(\"import load failed from network\" + url));\r\n      clearsideeffect();\r\n    };\r\n    document.head.appendChild(s);\r\n  });\r\n}\r\n","export function getbaseurl(url: string) {\r\n  var objurl = new URL(url);\r\n  var a = objurl.pathname.split(\"/\");\r\n  a[a.length - 1] = \"\";\r\n  var path = objurl.origin + a.join(\"/\");\r\n  return path;\r\n}\r\n","export function 格式化url(baseurl: string, urlorname: string) {\r\n  if (\r\n    String(urlorname).startsWith(\"./\") ||\r\n    String(urlorname).startsWith(\"../\")\r\n  ) {\r\n    if (\r\n      !(\r\n        String(urlorname).endsWith(\".js\") ||\r\n        urlorname.endsWith(\".mjs\") ||\r\n        urlorname.endsWith(\".json\") ||\r\n        urlorname.endsWith(\".css\") ||\r\n        urlorname.endsWith(\".html\")\r\n      )\r\n    ) {\r\n      urlorname += \".js\";\r\n    }\r\n    urlorname = new URL(baseurl + urlorname).href;\r\n  }\r\n  return urlorname;\r\n}\r\n","import {\r\n  参数必须为字符串,\r\n  字符串不能为空,\r\n  PACKAGESTORE,\r\n  模块仓库中没有找到\r\n} from \"./importcjsamdumd\";\r\nimport { cantfindError } from \"./cantfindError\";\r\n\r\nexport const myrequirefun = function requireinstead(packagename: string) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    Object.freeze(findpackage);\r\n    return findpackage.default ? findpackage.default : findpackage;\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n};\r\n","import { getbaseurl } from \"./getbaseurl\";\r\nimport { assertstring } from \"./assertstring\";\r\n// import { myrequirefun } from \"./IMPORTCJSAMDUMD\";\r\nimport { 格式化url } from \"./formaturl\";\r\nimport { myrequirefun } from \"./myrequirefun\";\r\n\r\nexport const formatedurlrequire = (urlorname: string, url: string) => {\r\n  assertstring(urlorname);\r\n  // urlorname = String(urlorname);\r\n  /*   if (urlorname === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      } */\r\n\r\n  const baseurl = getbaseurl(url);\r\n  const formatedurl = 格式化url(baseurl, urlorname);\r\n  return myrequirefun(formatedurl);\r\n};\r\n","export function 定义default(\r\n  target: { default: undefined },\r\n  def: { [x: string]: string; default: any }\r\n) {\r\n  if (\r\n    Reflect.get(def, Symbol.toStringTag) ===\r\n      /* def[Symbol.toStringTag] */ \"Module\" &&\r\n    def.default\r\n  ) {\r\n    def = def.default;\r\n  }\r\n  Object.defineProperty(target, \"default\", {\r\n    enumerable: true,\r\n    get() {\r\n      return def;\r\n    }\r\n  });\r\n}\r\n","export function 非空对象(o: any) {\r\n  return !!(\r\n    typeof o !== \"object\" ||\r\n    Object.keys(o).length ||\r\n    JSON.stringify(o) !== \"{}\"\r\n  );\r\n}\r\n","export function isArray(a: any): a is Array<any> {\r\n  return (\r\n    // typeof a === \"object\" &&\r\n    Array.isArray(a) && {}.toString.call(a) === \"[object Array]\"\r\n  );\r\n}\r\n","export function isFunction(it: any): it is Function {\r\n  const op = {}; // Object.prototype;\r\n  const ostring = op.toString;\r\n  return \"function\" === typeof it && ostring.call(it) === \"[object Function]\";\r\n}\r\n","import { isArray } from \"./isarray\";\r\nimport { isFunction } from \"./isfunction\";\r\nimport { myrequirefun } from \"./myrequirefun\";\r\n\r\ndefine.exports = {};\r\n\r\ndefine.amd = true;\r\nfunction define(name: any, deps?: any, callback?: any) {\r\n  \"use strict\";\r\n  define.exports = {};\r\n  define.amd = true;\r\n  //   const defineglobalDefQueue = [];\r\n  if (typeof name !== \"string\") {\r\n    callback = deps;\r\n    deps = name;\r\n    name = null;\r\n  }\r\n  if (!isArray(deps)) {\r\n    callback = deps;\r\n    deps = null;\r\n  }\r\n  if (!deps && isFunction(callback)) {\r\n    deps = [];\r\n  }\r\n  const defineglobalDefQueue: [any, string[], Function] = [\r\n    name,\r\n    deps,\r\n    callback\r\n  ];\r\n  const canshu = defineglobalDefQueue[1].map((e: string) => myrequirefun(e));\r\n  define.exports = defineglobalDefQueue[2](...canshu);\r\n}\r\nexport { define };\r\n","// import { define } from \"./IMPORTCJSAMDUMD\";\r\nimport { 定义default } from \"./define-default\";\r\nimport { 非空对象 } from \"./notemptyobj\";\r\nimport { 加载的模块没有输出 } from \"./coreload\";\r\nimport { define } from \"./define\";\r\n\r\nexport function 处理非es模块(\r\n  moduleexport: { default: any },\r\n  exportmodule: any[],\r\n  url: string,\r\n  packagename: string | undefined\r\n) {\r\n  if (typeof exportmodule === \"undefined\") {\r\n    exportmodule = [{}, {}, {}];\r\n  }\r\n  if (typeof define.exports === \"undefined\") {\r\n    define.exports = {};\r\n  }\r\n\r\n  if (非空对象(exportmodule[0])) {\r\n    const exportdefault = exportmodule[0];\r\n    定义default(moduleexport, exportdefault);\r\n  } else if (非空对象(exportmodule[1])) {\r\n    const exportdefault = exportmodule[1];\r\n    定义default(moduleexport, exportdefault);\r\n  } else if (非空对象(exportmodule[2])) {\r\n    const exportdefault = exportmodule[2];\r\n    定义default(moduleexport, exportdefault);\r\n  } else {\r\n    console.warn(加载的模块没有输出, url, packagename);\r\n    /*   reject(\r\n          Error(\r\n            加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n          )\r\n        );\r\n        return;*/\r\n  }\r\n}\r\n","/* eslint-disable no-empty */\r\n// const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nimport dynamicimportshim from \"./dynamicimportshim.js\";\r\nimport { formatedurlrequire } from \"./formatedurlrequire.js\";\r\nimport { 处理非es模块 } from \"./handlecjsmodule.js\";\r\nimport {\r\n  //   assertstring,\r\n  //   define,\r\n  PACKAGESTORE\r\n  //   定义default\r\n} from \"./importcjsamdumd.js\";\r\nimport { define } from \"./define.js\";\r\n// const 字符串不能为空 = \"字符串不能为空\";\r\nexport const 加载的模块没有输出 = \"加载的模块没有输出\";\r\nexport const typesymbol = Symbol.for(\"type\");\r\nexport const namesymbol = Symbol.for(\"name\");\r\nexport const urlsymbol = Symbol.for(\"url\");\r\nexport const sourcesymbol = Symbol.for(\"source\");\r\nexport default async (url: string, packagename?: string) => {\r\n  return await new Promise(主核心加载模块函数);\r\n  function 主核心加载模块函数(\r\n    resolve: (value?: any) => void,\r\n    reject: (reason?: any) => void\r\n  ) {\r\n    return ((resolve, reject) => {\r\n      (async () => {\r\n        try {\r\n          await (async () => {\r\n            let fetchpromisetext;\r\n            try {\r\n              try {\r\n                fetchpromisetext = await fetch(url).then(response => {\r\n                  if (!response.ok) {\r\n                    throw new Error(\"fetch failed \" + url);\r\n                  }\r\n                  return response.text();\r\n                });\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n              try {\r\n                await (async scripttext => {\r\n                  let moduletype;\r\n                  const exports = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  const module = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  define.exports = {};\r\n                  var modulesrcfun;\r\n                  const moduleexport: { default: any; [k: string]: any } = {\r\n                    default: undefined\r\n                  };\r\n                  try {\r\n                    (function() //   myrequirefun,\r\n                    //  define,\r\n                    //  module,\r\n                    //   exports,\r\n                    //    scripttext\r\n                    {\r\n                      const 模块加载函数 = new Function(\r\n                        \"require\",\r\n                        \"define\",\r\n                        \"module\",\r\n                        \"exports\",\r\n                        `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\n`\r\n                      );\r\n                      modulesrcfun = 模块加载函数.toString();\r\n\r\n                      return 模块加载函数.call(\r\n                        module.exports,\r\n                        (name: string) => formatedurlrequire(name, url),\r\n                        define,\r\n                        module,\r\n                        exports.exports\r\n                      );\r\n                    })();\r\n                    //   /* myrequirefun,  */ define,\r\n                    //    module,\r\n                    //   exports,\r\n                    //    scripttext\r\n                    const exportmodule = [\r\n                      exports.exports ? exports.exports : {},\r\n                      module.exports ? module.exports : {},\r\n                      define.exports ? define.exports : {}\r\n                    ];\r\n                    处理非es模块(moduleexport, exportmodule, url, packagename);\r\n                    moduletype = \"cjs\";\r\n                  } catch (e) {\r\n                    console.warn(e);\r\n                    try {\r\n                      const moduleexportdefault = JSON.parse(scripttext);\r\n                      console.log(\"检测到json模块 \" + url);\r\n                      modulesrcfun = scripttext;\r\n                      moduletype = \"json\";\r\n\r\n                      Object.keys(moduleexportdefault)\r\n                        // .filter(t => t !== \"default\")\r\n                        .forEach(key => {\r\n                          Object.defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return moduleexportdefault[key];\r\n                            }\r\n                          });\r\n                        });\r\n                      try {\r\n                        Reflect.defineProperty(moduleexport, \"default\", {\r\n                          enumerable: false\r\n                        });\r\n                      } catch {}\r\n                    } catch (error) {\r\n                      console.warn(error);\r\n                      if (e instanceof SyntaxError) {\r\n                        const topLevelBlobUrl = url;\r\n                        modulesrcfun = scripttext;\r\n                        try {\r\n                          const exportdefault = await dynamicimportshim(\r\n                            topLevelBlobUrl\r\n                          );\r\n                          moduletype = \"esm\";\r\n                          Object.keys(exportdefault)\r\n                            // .filter(t => t !== \"default\")\r\n                            .forEach(key => {\r\n                              Object.defineProperty(moduleexport, key, {\r\n                                enumerable: true,\r\n                                get() {\r\n                                  return exportdefault[key];\r\n                                }\r\n                              });\r\n                            });\r\n                          /*  定义default(\r\n                            moduleexport,\r\n                            exportdefault.default\r\n                              ? exportdefault.default\r\n                              : exportdefault\r\n                          );*/\r\n                        } catch (e) {\r\n                          console.warn(e);\r\n                          reject(e);\r\n                          return;\r\n                        }\r\n                        if (typeof moduleexport.default === \"undefined\") {\r\n                          console.warn(加载的模块没有输出, packagename, url);\r\n                          try {\r\n                            Reflect.defineProperty(moduleexport, \"default\", {\r\n                              enumerable: false\r\n                            });\r\n                          } catch {}\r\n                          /*  reject(\r\n                            Error(\r\n                              加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                            )\r\n                          );\r\n                          return;*/\r\n                        }\r\n                      } else {\r\n                        console.warn(e);\r\n                        reject(e);\r\n                        return;\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  Object.defineProperties(moduleexport, {\r\n                    [namesymbol]: {\r\n                      value: packagename,\r\n                      writable: true,\r\n                      enumerable: false\r\n                    },\r\n                    [urlsymbol]: {\r\n                      value: url,\r\n                      enumerable: false\r\n                    },\r\n                    [sourcesymbol]: {\r\n                      value: modulesrcfun,\r\n                      enumerable: false\r\n                    },\r\n                    [typesymbol]: {\r\n                      value: moduletype,\r\n                      enumerable: false\r\n                    }\r\n                  });\r\n                  if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\r\n                    Object.defineProperty(moduleexport, Symbol.toStringTag, {\r\n                      value: \"Module\"\r\n                    });\r\n                  }\r\n                  if (typeof moduleexport.default !== \"undefined\") {\r\n                    if (typeof packagename !== \"undefined\") {\r\n                      PACKAGESTORE[packagename] = moduleexport;\r\n                    }\r\n                  }\r\n                  if (typeof packagename !== \"undefined\") {\r\n                    PACKAGESTORE[url] = PACKAGESTORE[packagename];\r\n                  }\r\n                  !!moduleexport.default &&\r\n                    Object.keys(moduleexport.default)\r\n                      .filter(t => t !== \"default\")\r\n                      .forEach(key => {\r\n                        const moduleexportdefault = moduleexport.default;\r\n                        try {\r\n                          Object.defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return Reflect.get(moduleexportdefault, key);\r\n                            }\r\n                          });\r\n                        } catch (error) {}\r\n                      });\r\n                  Object.freeze(moduleexport);\r\n                  resolve(moduleexport);\r\n                  return;\r\n                })(fetchpromisetext);\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              console.warn(e);\r\n              reject(e);\r\n              return;\r\n            }\r\n          })();\r\n        } catch (e) {\r\n          console.warn(e);\r\n          reject(e);\r\n          return;\r\n        }\r\n      })();\r\n    })(resolve, reject);\r\n  }\r\n};\r\n","import { PlainObj, 传入的参数必须是个object } from \"./oldimport\";\r\n\r\nexport function newobjjson(obj: PlainObj) {\r\n  if (typeof obj !== \"object\") {\r\n    throw new TypeError(传入的参数必须是个object);\r\n  }\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","export async function 同时发起多个字符串(\r\n  a: Array<string>,\r\n  importcjsamdumd: Function\r\n) {\r\n  return await Promise.all(\r\n    Array(...a).map(e => {\r\n      return importcjsamdumd(e);\r\n    })\r\n  );\r\n}\r\nexport async function 同时发起多个entries(\r\n  a: any[][],\r\n  importcjsamdumd: Function\r\n) {\r\n  return await Promise.all(\r\n    Array(...a).map(e => {\r\n      return importcjsamdumd(e[0], e[1]);\r\n    })\r\n  );\r\n}\r\n","import {\r\n  参数必须为字符串,\r\n  字符串不能为空,\r\n  PACKAGESTORE,\r\n  模块仓库中没有找到\r\n} from \"./importcjsamdumd\";\r\nimport { cantfindError } from \"./cantfindError\";\r\n\r\nexport function getmodule(packagename: string) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    Object.freeze(findpackage);\r\n    return findpackage;\r\n    /*new Proxy(findpackage, {\r\n        set() {\r\n          return false;\r\n        },\r\n        deleteProperty() {\r\n          return false;\r\n        }\r\n      });*/\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n}\r\n","// import { 同时发起多个entries } from \"./arrayimportall.js\";\r\nimport { assertstring } from \"./assertstring.js\";\r\nimport coreload, { namesymbol, urlsymbol } from \"./coreload.js\";\r\nimport importcjsamdumd, {\r\n  //   assertstring,\r\n  //   getmodule,\r\n  //   isArray,\r\n  //   isplainobject,\r\n  PACKAGESTORE\r\n} from \"./importcjsamdumd\";\r\nimport { isplainobject } from \"./isplainobject.js\";\r\nimport { newobjjson } from \"./newobjjson.js\";\r\nimport { 同时发起多个entries, 同时发起多个字符串 } from \"./arrayimportall.js\";\r\nimport { isArray } from \"./isarray.js\";\r\nimport { getmodule } from \"./getmodule.js\";\r\nconst 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\n// export const 非法字符串 = \"输入的类型错误,输入的字符串不能为空,不能为undefined\";\r\n// export const namesymbol = Symbol.for(\"name\");\r\n// export const urlsymbol = Symbol.for(\"url\");\r\nexport const 传入的参数必须是个object = \"传入的参数必须是个object\";\r\nexport type PlainObj = Record<any, any>;\r\n\r\nexport default (() => {\r\n  return async function oldimportcjsamdumd(\r\n    url: any,\r\n    packagename?: any\r\n  ): Promise<any> {\r\n    \"use strict\";\r\n    if (isplainobject(url)) {\r\n      return await (async url => {\r\n        url = newobjjson(url);\r\n        const 输入参数array = Object.entries(\r\n          url\r\n        ); /*  Object.keys(url).map(key => {\r\n          const packageurl = url[key];\r\n          const packagenm = key;\r\n          return [packageurl, packagenm];\r\n        }); */\r\n        let suoyouimportpromise = [];\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个entries(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个entries(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个entries(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        }\r\n        let objecttoreturn: PlainObj = {};\r\n        suoyouimportpromise.forEach(m => {\r\n          objecttoreturn[m[namesymbol]] = m;\r\n        });\r\n        return objecttoreturn;\r\n      })(url);\r\n    } else if (\r\n      (isArray(url) && typeof url === \"object\") ||\r\n      typeof packagename === \"object\"\r\n    ) {\r\n      return await (async (...args) => {\r\n        let suoyouimportpromise = [];\r\n        const 传入参数arr = Array(...args).flat(); //JSON.parse(JSON.stringify(Array(...args).flat()));\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        }\r\n        return suoyouimportpromise;\r\n      })(...[url, packagename].flat());\r\n    } else if (typeof url === \"string\" || typeof packagename === \"string\") {\r\n      assertstring(url);\r\n      return await (async (url: string, packagename?: string) => {\r\n        /*   if (typeof url === \"undefined\" || packagename === \"\") {\r\n          throw new TypeError(非法字符串);\r\n        } */\r\n        if (typeof packagename === \"undefined\") {\r\n          packagename = new URL(url).href;\r\n        }\r\n        url = new URL(url).href;\r\n        if (\r\n          typeof PACKAGESTORE[packagename] !== \"undefined\" &&\r\n          typeof PACKAGESTORE[packagename].default !== \"undefined\" &&\r\n          Reflect.get(PACKAGESTORE[packagename], urlsymbol) === url\r\n          //  [urlsymbol] === url\r\n        ) {\r\n          return getmodule(packagename);\r\n        } else if (\r\n          typeof PACKAGESTORE[url] !== \"undefined\" &&\r\n          typeof PACKAGESTORE[url].default !== \"undefined\" &&\r\n          Reflect.get(PACKAGESTORE[url], urlsymbol) === url\r\n          //   PACKAGESTORE[url][urlsymbol] === url\r\n        ) {\r\n          PACKAGESTORE[packagename] = PACKAGESTORE[url];\r\n          //   PACKAGESTORE[packagename][namesymbol] = packagename;\r\n          Reflect.set(PACKAGESTORE[packagename], namesymbol, packagename);\r\n          return getmodule(url);\r\n        } else {\r\n          return await coreload(url, packagename);\r\n        }\r\n      })(url, packagename);\r\n    } else {\r\n      throw new TypeError(输入的类型错误输入的类型必须是字符串或者数组或对象);\r\n    }\r\n  };\r\n})();\r\n","import { 参数必须为字符串, 字符串不能为空 } from \"./importcjsamdumd\";\r\n\r\nexport function isurl(url: string) {\r\n  var flag = false;\r\n  try {\r\n    if (url === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof url !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n    url = new URL(url).href;\r\n    flag = true;\r\n  } catch (error) {\r\n    flag = false;\r\n  }\r\n  return flag;\r\n}\r\n","/* const 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\nconst 非法字符串 = \"输入的类型错误,输入的字符串不能为空,url不能为undefined\";\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\"); */\r\nimport { cantfindError } from \"./cantfindError\";\r\nimport { isplainobject } from \"./isplainobject\";\r\nimport oldimportcjsamdumd from \"./oldimport\";\r\nimport { getmodule } from \"./getmodule\";\r\nimport { isurl } from \"./isurl\";\r\n\r\nexport const 模块仓库中没有找到 =\r\n  \"Cannot find module in packagestore, 模块仓库中没有找到, \";\r\n\r\n// export const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\n\r\nexport const 参数必须为字符串 = \"参数必须为字符串\";\r\n(\"use strict\");\r\nexport const 字符串不能为空 = \"字符串不能为空\";\r\n\r\n// const importcjsamdumd = (() => {\r\n(\"use strict\");\r\nexport const 补充加载依赖的模块网址 = \"补充加载依赖的模块网址\";\r\n\r\n// const importcjsamdumd = importcjsamdumd;\r\n\r\nasync function importcjsamdumd(url: any, packagename?: any): Promise<any> {\r\n  const inarguments: [any, any] = [url, packagename];\r\n  //   const importcjsamdumd = importcjsamdumd;\r\n  return await oldimportcjsamdumd(...inarguments).catch(handleerror);\r\n  async function handleerror(e: Error): Promise<any> {\r\n    console.warn(e);\r\n    if (e instanceof cantfindError && e.urlorname) {\r\n      if (isurl(e.urlorname)) {\r\n        console.log(补充加载依赖的模块网址, e.urlorname);\r\n        await importcjsamdumd(e.urlorname);\r\n        return await importcjsamdumd(...inarguments);\r\n      } else if (\r\n        isplainobject(inarguments[0]) &&\r\n        Reflect.has(inarguments[0], e.urlorname)\r\n      ) {\r\n        await oldimportcjsamdumd(...inarguments);\r\n        return await oldimportcjsamdumd(...inarguments);\r\n      } else {\r\n        throw e;\r\n      }\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n/* export interface IMPORTCJSAMDUMD {\r\n  (url: any, packagename?: any): Promise<any>;\r\n  PACKAGESTORE: Record<string, PlainObj>;\r\n  REQUIREPACKAGE: (packagename: string) => any;\r\n} */\r\n// /* importcjsamdumd.PACKAGESTORE = {} as Record<\r\n//   string|symbol,\r\n//   PlainObj\r\n// >; /* PACKAGESTORE ||  */\r\n// importcjsamdumd.REQUIREPACKAGE = getmodule; */\r\n//   return importcjsamdumd;\r\n// })();\r\n// const IMPORTcjsamdumd: IMPORTCJSAMDUMD = importcjsamdumd;\r\n\r\nexport default importcjsamdumd;\r\nconst PACKAGESTORE: Record<string, Record<string | symbol, any>> = {};\r\nconst REQUIREPACKAGE = getmodule;\r\n// export const { PACKAGESTORE, REQUIREPACKAGE } = importcjsamdumd;\r\nexport { PACKAGESTORE, REQUIREPACKAGE };\r\n"],"names":["cantfindError","Error","[object Object]","message","urlorname","super","this","isplainobject","o","toString","call","assertstring","s","TypeError","字符串不能为空","参数必须为字符串","createBlob","source","URL","createObjectURL","Blob","type","dynamicimportshimfun","dynamicimportshim","Function","error","async","url","href","getnewimportpromise","symbolkey","Symbol","for","Promise","resolve","reject","document","createElement","clearsideeffect","removescript","removeerrorlisten","errorhandler","revokeObjectURL","src","onload","onerror","f","window","removeEventListener","e","remove","console","warn","addEventListener","topLevelBlobUrl","Reflect","has","moduleoutput","get","set","undefined","head","appendChild","getbaseurl","objurl","a","pathname","split","length","path","origin","join","格式化url","baseurl","String","startsWith","endsWith","myrequirefun","requireinstead","packagename","findpackage","PACKAGESTORE","Object","freeze","default","模块仓库中没有找到","formatedurlrequire","formatedurl","定义default","target","def","toStringTag","defineProperty","enumerable","非空对象","keys","JSON","stringify","isArray","Array","isFunction","it","op","ostring","define","exports","amd","name","deps","callback","defineglobalDefQueue","canshu","map","处理非es模块","moduleexport","exportmodule","exportdefault","加载的模块没有输出","typesymbol","namesymbol","urlsymbol","sourcesymbol","主核心加载模块函数","fetchpromisetext","fetch","then","response","ok","text","scripttext","moduletype","module","modulesrcfun","模块加载函数","moduleexportdefault","parse","log","forEach","key","SyntaxError","defineProperties","value","writable","filter","t","newobjjson","obj","传入的参数必须是个object","同时发起多个字符串","importcjsamdumd","all","同时发起多个entries","getmodule","输入的类型错误输入的类型必须是字符串或者数组或对象","oldimportcjsamdumd","输入参数array","entries","suoyouimportpromise","objecttoreturn","m","args","传入参数arr","flat","coreload","isurl","flag","补充加载依赖的模块网址","inarguments","catch","handleerror","REQUIREPACKAGE"],"mappings":"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"}