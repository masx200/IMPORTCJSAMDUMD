{"version":3,"file":"index.js","sources":["../src/dynamicimportshim.ts","../src/IMPORTCJSAMDUMD.ts","../src/assertstring.ts","../src/coreload.ts","../src/oldimport.ts","../src/importcjsamdumd.ts"],"sourcesContent":["/* eslint-disable no-empty */\r\n\"use strict\";\r\nexport { createBlob };\r\nfunction createBlob(source: string) {\r\n  return URL.createObjectURL(\r\n    new Blob([source], { type: \"application/javascript\" })\r\n  );\r\n}\r\nconst dynamicimportshimfun = (() => {\r\n  \"use strict\";\r\n  const 参数必须为字符串 = \"参数必须为字符串\";\r\n  const 字符串不能为空 = \"字符串不能为空\";\r\n  let dynamicimportshim: Function;\r\n  try {\r\n    dynamicimportshim = Function(\"u\", \"return import(u)\");\r\n  } catch (error) {\r\n    dynamicimportshim = async function(url: string) {\r\n      if (url === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      }\r\n      if (typeof url !== \"string\") {\r\n        throw new TypeError(参数必须为字符串);\r\n      }\r\n      url = new URL(url).href;\r\n\r\n      return await getnewimportpromise(url);\r\n    };\r\n  }\r\n  return dynamicimportshim;\r\n})();\r\nexport default dynamicimportshimfun;\r\nfunction getnewimportpromise(url: string) {\r\n  return new Promise((resolve, reject) => {\r\n    const s = document.createElement(\"script\");\r\n    function clearsideeffect() {\r\n      removescript(s);\r\n      removeerrorlisten(errorhandler);\r\n      URL.revokeObjectURL(s.src);\r\n      s.onload = s.onerror = null;\r\n    }\r\n    function removeerrorlisten(f: (evt: ErrorEvent) => void) {\r\n      try {\r\n        window.removeEventListener(\"error\", f);\r\n      } catch (error) {}\r\n    }\r\n    function removescript(e: HTMLScriptElement) {\r\n      e.remove();\r\n      //try {\r\n      //   document.head.removeChild(e);\r\n      //  } catch (error) {}\r\n    }\r\n    function errorhandler(e: ErrorEvent) {\r\n      console.warn(e.error);\r\n      reject(e.error);\r\n      clearsideeffect();\r\n    }\r\n    window.addEventListener(\"error\", errorhandler);\r\n    const topLevelBlobUrl = createBlob(\r\n      `import*as m from'${url}';\\nwindow[Symbol.for('${\"import-\" + url}')]=m`\r\n    );\r\n    s.type = \"module\";\r\n    s.src = topLevelBlobUrl;\r\n    s.async = true;\r\n    s.onload = () => {\r\n      const symbolkey = Symbol.for(\"import-\" + url);\r\n      if (\r\n        Reflect.has(window, symbolkey)\r\n        /* symbolkey in */\r\n      ) {\r\n        const module = Reflect.get(window, symbolkey);\r\n        resolve(module /* [Symbol.for(\"import-\" + url)] */);\r\n        Reflect.set(window, symbolkey, undefined);\r\n        clearsideeffect();\r\n      }\r\n    };\r\n    s.onerror = () => {\r\n      reject(new Error(\"import load failed from network\" + url));\r\n      clearsideeffect();\r\n    };\r\n    document.head.appendChild(s);\r\n  });\r\n}\r\n","/* const 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\nconst 非法字符串 = \"输入的类型错误,输入的字符串不能为空,url不能为undefined\";\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\"); */\r\nimport oldimportcjsamdumd, { PlainObj } from \"./oldimport\";\r\nclass cantfindError extends Error {\r\n  urlorname: string;\r\n  constructor(message: string, urlorname: string) {\r\n    super(message);\r\n    this.urlorname = urlorname;\r\n  }\r\n}\r\n\r\nconst 模块仓库中没有找到 =\r\n  \"Cannot find module in packagestore, 模块仓库中没有找到, \";\r\n\r\nfunction isurl(url: string) {\r\n  var flag = false;\r\n  try {\r\n    if (url === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof url !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n    url = new URL(url).href;\r\n    flag = true;\r\n  } catch (error) {\r\n    flag = false;\r\n  }\r\n  return flag;\r\n}\r\nexport function isArray(a: any): a is Array<any> {\r\n  return (\r\n    // typeof a === \"object\" &&\r\n    Array.isArray(a) && {}.toString.call(a) === \"[object Array]\"\r\n  );\r\n}\r\nexport function getmodule(packagename: string) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    Object.freeze(findpackage);\r\n    return findpackage;\r\n    /*new Proxy(findpackage, {\r\n      set() {\r\n        return false;\r\n      },\r\n      deleteProperty() {\r\n        return false;\r\n      }\r\n    });*/\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n}\r\n// export const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nexport function isplainobject(o: any): o is PlainObj {\r\n  return (\r\n    typeof o === \"object\" && {}.toString.call(o) === \"[object Object]\"\r\n    //&&\r\n    //   o.__proto__ === Object.prototype\r\n  );\r\n}\r\nexport const 参数必须为字符串 = \"参数必须为字符串\";\r\n(\"use strict\");\r\nexport const 字符串不能为空 = \"字符串不能为空\";\r\n\r\nexport const myrequirefun = function requireinstead(packagename: string) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    return Object.freeze(\r\n      findpackage.default ? findpackage.default : findpackage\r\n    );\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n};\r\nexport { define };\r\ndefine.exports = {};\r\nfunction isFunction(it: any): it is Function {\r\n  const op = {}; // Object.prototype;\r\n  const ostring = op.toString;\r\n  return \"function\" === typeof it && ostring.call(it) === \"[object Function]\";\r\n}\r\nfunction define(name: any, deps?: any, callback?: any) {\r\n  \"use strict\";\r\n  define.exports = {};\r\n  define.amd = true;\r\n  //   const defineglobalDefQueue = [];\r\n  if (typeof name !== \"string\") {\r\n    callback = deps;\r\n    deps = name;\r\n    name = null;\r\n  }\r\n  if (!isArray(deps)) {\r\n    callback = deps;\r\n    deps = null;\r\n  }\r\n  if (!deps && isFunction(callback)) {\r\n    deps = [];\r\n  }\r\n  const defineglobalDefQueue: [any, string[], Function] = [\r\n    name,\r\n    deps,\r\n    callback\r\n  ];\r\n  const canshu = defineglobalDefQueue[1].map((e: string) => myrequirefun(e));\r\n  define.exports = defineglobalDefQueue[2](...canshu);\r\n}\r\ndefine.amd = true;\r\n\r\nexport function 定义default(\r\n  target: { default: undefined },\r\n  def: { [x: string]: string; default: any }\r\n) {\r\n  if (\r\n    Reflect.get(def, Symbol.toStringTag) ===\r\n      /* def[Symbol.toStringTag] */ \"Module\" &&\r\n    def.default\r\n  ) {\r\n    def = def.default;\r\n  }\r\n  Object.defineProperty(target, \"default\", {\r\n    enumerable: true,\r\n    get() {\r\n      return def;\r\n    }\r\n  });\r\n}\r\n// const importcjsamdumd = (() => {\r\n(\"use strict\");\r\nconst 补充加载依赖的模块网址 = \"补充加载依赖的模块网址\";\r\n\r\n// const importcjsamdumd = importcjsamdumd;\r\n\r\nasync function importcjsamdumd(url: any, packagename?: any): Promise<any> {\r\n  const inarguments: [any, any] = [url, packagename];\r\n  //   const importcjsamdumd = importcjsamdumd;\r\n  return await oldimportcjsamdumd(...inarguments).catch(handleerror);\r\n  async function handleerror(e: Error): Promise<any> {\r\n    console.warn(e);\r\n    if (e instanceof cantfindError && e.urlorname) {\r\n      if (isurl(e.urlorname)) {\r\n        console.log(补充加载依赖的模块网址, e.urlorname);\r\n        await importcjsamdumd(e.urlorname);\r\n        return await importcjsamdumd(...inarguments);\r\n      } else if (\r\n        isplainobject(inarguments[0]) &&\r\n        Reflect.has(inarguments[0], e.urlorname)\r\n      ) {\r\n        await oldimportcjsamdumd(...inarguments);\r\n        return await oldimportcjsamdumd(...inarguments);\r\n      } else {\r\n        throw e;\r\n      }\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n/* export interface IMPORTCJSAMDUMD {\r\n  (url: any, packagename?: any): Promise<any>;\r\n  PACKAGESTORE: Record<string, PlainObj>;\r\n  REQUIREPACKAGE: (packagename: string) => any;\r\n} */\r\n// /* importcjsamdumd.PACKAGESTORE = {} as Record<\r\n//   string|symbol,\r\n//   PlainObj\r\n// >; /* PACKAGESTORE ||  */\r\n// importcjsamdumd.REQUIREPACKAGE = getmodule; */\r\n//   return importcjsamdumd;\r\n// })();\r\n// const IMPORTcjsamdumd: IMPORTCJSAMDUMD = importcjsamdumd;\r\n\r\nexport default importcjsamdumd;\r\nconst PACKAGESTORE: Record<string, Record<string | symbol, any>> = {};\r\nconst REQUIREPACKAGE = getmodule;\r\nexport { PACKAGESTORE, REQUIREPACKAGE };\r\n// export const { PACKAGESTORE, REQUIREPACKAGE } = importcjsamdumd;\r\n","import { 字符串不能为空, 参数必须为字符串 } from './IMPORTCJSAMDUMD';\r\n\r\nexport function assertstring(s: string) :asserts s is string \r\n\r\n{\r\n    if (s === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof s !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n  //   return true;\r\n  }","const formatedurlrequire = (urlorname: string, url: string) => {\r\n  assertstring(urlorname);\r\n  // urlorname = String(urlorname);\r\n  /*   if (urlorname === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    } */\r\n\r\n  const baseurl = getbaseurl(url);\r\n  const formatedurl = 格式化url(baseurl, urlorname);\r\n  return myrequirefun(formatedurl);\r\n};\r\nfunction 非空对象(o: any) {\r\n  return !!(\r\n    typeof o !== \"object\" ||\r\n    Object.keys(o).length ||\r\n    JSON.stringify(o) !== \"{}\"\r\n  );\r\n}\r\n/* eslint-disable no-empty */\r\n// const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nimport dynamicimportshim from \"./dynamicimportshim.js\";\r\nimport {\r\n  //   assertstring,\r\n  define,\r\n  myrequirefun,\r\n  PACKAGESTORE,\r\n  定义default\r\n} from \"./importcjsamdumd.js\";\r\nimport { assertstring } from \"./assertstring.js\";\r\n// const 字符串不能为空 = \"字符串不能为空\";\r\nconst 加载的模块没有输出 = \"加载的模块没有输出\";\r\nconst typesymbol = Symbol.for(\"type\");\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\");\r\nconst sourcesymbol = Symbol.for(\"source\");\r\nexport default async (url: string, packagename?: string) => {\r\n  return await new Promise(主核心加载模块函数);\r\n  function 主核心加载模块函数(\r\n    resolve: (value?: any) => void,\r\n    reject: (reason?: any) => void\r\n  ) {\r\n    return ((resolve, reject) => {\r\n      (async () => {\r\n        try {\r\n          await (async () => {\r\n            let fetchpromisetext;\r\n            try {\r\n              try {\r\n                fetchpromisetext = await fetch(url).then(response => {\r\n                  if (!response.ok) {\r\n                    throw new Error(\"fetch failed \" + url);\r\n                  }\r\n                  return response.text();\r\n                });\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n              try {\r\n                await (async scripttext => {\r\n                  let moduletype;\r\n                  const exports = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  const module = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  define.exports = {};\r\n                  var modulesrcfun;\r\n                  const moduleexport: { default: any; [k: string]: any } = {\r\n                    default: undefined\r\n                  };\r\n                  try {\r\n                    (function(\r\n                      //   myrequirefun,\r\n                      define,\r\n                      module,\r\n                      exports,\r\n                      scripttext\r\n                    ) {\r\n                      const 模块加载函数 = new Function(\r\n                        \"require\",\r\n                        \"define\",\r\n                        \"module\",\r\n                        \"exports\",\r\n                        `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\n`\r\n                      );\r\n                      modulesrcfun = 模块加载函数.toString();\r\n\r\n                      return 模块加载函数.call(\r\n                        module.exports,\r\n                        (name: string) => formatedurlrequire(name, url),\r\n                        define,\r\n                        module,\r\n                        exports.exports\r\n                      );\r\n                    })(\r\n                      /* myrequirefun,  */ define,\r\n                      module,\r\n                      exports,\r\n                      scripttext\r\n                    );\r\n                    const exportmodule = [\r\n                      exports.exports ? exports.exports : {},\r\n                      module.exports ? module.exports : {},\r\n                      define.exports ? define.exports : {}\r\n                    ];\r\n                    处理非es模块(moduleexport, exportmodule, url, packagename);\r\n                    moduletype = \"cjs\";\r\n                  } catch (e) {\r\n                    console.warn(e);\r\n                    try {\r\n                      moduleexport.default = JSON.parse(scripttext);\r\n                      console.log(\"检测到json模块 \" + url);\r\n                      modulesrcfun = scripttext;\r\n                      moduletype = \"json\";\r\n                    } catch (error) {\r\n                      console.warn(error);\r\n                      if (e instanceof SyntaxError) {\r\n                        const topLevelBlobUrl = url;\r\n                        modulesrcfun = scripttext;\r\n                        try {\r\n                          const exportdefault = await dynamicimportshim(\r\n                            topLevelBlobUrl\r\n                          );\r\n                          moduletype = \"esm\";\r\n                          Object.keys(exportdefault)\r\n                            .filter(t => t !== \"default\")\r\n                            .forEach(key => {\r\n                              Object.defineProperty(moduleexport, key, {\r\n                                enumerable: true,\r\n                                get() {\r\n                                  return exportdefault[key];\r\n                                }\r\n                              });\r\n                            });\r\n                          定义default(\r\n                            moduleexport,\r\n                            exportdefault.default\r\n                              ? exportdefault.default\r\n                              : exportdefault\r\n                          );\r\n                        } catch (e) {\r\n                          console.warn(e);\r\n                          reject(e);\r\n                          return;\r\n                        }\r\n                        if (typeof moduleexport.default === \"undefined\") {\r\n                          console.warn(加载的模块没有输出, packagename, url);\r\n                          /*  reject(\r\n                            Error(\r\n                              加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                            )\r\n                          );\r\n                          return;*/\r\n                        }\r\n                      } else {\r\n                        console.warn(e);\r\n                        reject(e);\r\n                        return;\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  Object.defineProperties(moduleexport, {\r\n                    [namesymbol]: {\r\n                      value: packagename,\r\n                      writable: true,\r\n                      enumerable: false\r\n                    },\r\n                    [urlsymbol]: {\r\n                      value: url,\r\n                      enumerable: false\r\n                    },\r\n                    [sourcesymbol]: {\r\n                      value: modulesrcfun,\r\n                      enumerable: false\r\n                    },\r\n                    [typesymbol]: {\r\n                      value: moduletype,\r\n                      enumerable: false\r\n                    }\r\n                  });\r\n                  if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\r\n                    Object.defineProperty(moduleexport, Symbol.toStringTag, {\r\n                      value: \"Module\"\r\n                    });\r\n                  }\r\n                  if (typeof moduleexport.default !== \"undefined\") {\r\n                    if (typeof packagename !== \"undefined\") {\r\n                      PACKAGESTORE[packagename] = moduleexport;\r\n                    }\r\n                  }\r\n                  if (typeof packagename !== \"undefined\") {\r\n                    PACKAGESTORE[url] = PACKAGESTORE[packagename];\r\n                  }\r\n                  !!moduleexport.default &&\r\n                    Object.keys(moduleexport.default)\r\n                      .filter(t => t !== \"default\")\r\n                      .forEach(key => {\r\n                        try {\r\n                          Object.defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return moduleexport.default[key];\r\n                            }\r\n                          });\r\n                        } catch (error) {}\r\n                      });\r\n                  resolve(moduleexport);\r\n                  return;\r\n                })(fetchpromisetext);\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              console.warn(e);\r\n              reject(e);\r\n              return;\r\n            }\r\n          })();\r\n        } catch (e) {\r\n          console.warn(e);\r\n          reject(e);\r\n          return;\r\n        }\r\n      })();\r\n    })(resolve, reject);\r\n  }\r\n};\r\nfunction getbaseurl(url: string) {\r\n  var objurl = new URL(url);\r\n  var a = objurl.pathname.split(\"/\");\r\n  a[a.length - 1] = \"\";\r\n  var path = objurl.origin + a.join(\"/\");\r\n  return path;\r\n}\r\nfunction 处理非es模块(\r\n  moduleexport: { default: any },\r\n  exportmodule: any[],\r\n  url: string,\r\n  packagename: string | undefined\r\n) {\r\n  if (typeof exportmodule === \"undefined\") {\r\n    exportmodule = [{}, {}, {}];\r\n  }\r\n  if (typeof define.exports === \"undefined\") {\r\n    define.exports = {};\r\n  }\r\n\r\n  if (非空对象(exportmodule[0])) {\r\n    const exportdefault = exportmodule[0];\r\n    定义default(moduleexport, exportdefault);\r\n  } else if (非空对象(exportmodule[1])) {\r\n    const exportdefault = exportmodule[1];\r\n    定义default(moduleexport, exportdefault);\r\n  } else if (非空对象(exportmodule[2])) {\r\n    const exportdefault = exportmodule[2];\r\n    定义default(moduleexport, exportdefault);\r\n  } else {\r\n    console.warn(加载的模块没有输出, url, packagename);\r\n    /*   reject(\r\n        Error(\r\n          加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n        )\r\n      );\r\n      return;*/\r\n  }\r\n}\r\nfunction 格式化url(baseurl: string, urlorname: string) {\r\n  if (\r\n    String(urlorname).startsWith(\"./\") ||\r\n    String(urlorname).startsWith(\"../\")\r\n  ) {\r\n    if (\r\n      !(\r\n        String(urlorname).endsWith(\".js\") ||\r\n        urlorname.endsWith(\".mjs\") ||\r\n        urlorname.endsWith(\".json\") ||\r\n        urlorname.endsWith(\".css\") ||\r\n        urlorname.endsWith(\".html\")\r\n      )\r\n    ) {\r\n      urlorname += \".js\";\r\n    }\r\n    urlorname = new URL(baseurl + urlorname).href;\r\n  }\r\n  return urlorname;\r\n}\r\n","async function 同时发起多个字符串(a: Array<string>, importcjsamdumd: Function) {\r\n  return await Promise.all(\r\n    Array(...a).map(e => {\r\n      return importcjsamdumd(e);\r\n    })\r\n  );\r\n}\r\nimport coreload from \"./coreload.js\";\r\nimport importcjsamdumd, {\r\n  //   assertstring,\r\n  getmodule,\r\n  isArray,\r\n  isplainobject,\r\n  PACKAGESTORE\r\n} from \"./importcjsamdumd\";\r\nimport { assertstring } from \"./assertstring.js\";\r\nconst 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\n// export const 非法字符串 = \"输入的类型错误,输入的字符串不能为空,不能为undefined\";\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\");\r\nconst 传入的参数必须是个object = \"传入的参数必须是个object\";\r\nexport type PlainObj = Record<any, any>;\r\nfunction newobjjson(obj: PlainObj) {\r\n  if (typeof obj !== \"object\") {\r\n    throw new TypeError(传入的参数必须是个object);\r\n  }\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\nasync function 同时发起多个(a: any[][], importcjsamdumd: Function) {\r\n  return await Promise.all(\r\n    Array(...a).map(e => {\r\n      return importcjsamdumd(e[0], e[1]);\r\n    })\r\n  );\r\n}\r\nexport default (() => {\r\n  return async function oldimportcjsamdumd(\r\n    url: any,\r\n    packagename?: any\r\n  ): Promise<any> {\r\n    \"use strict\";\r\n    if (isplainobject(url)) {\r\n      return await (async url => {\r\n        url = newobjjson(url);\r\n        const 输入参数array = Object.keys(url).map(key => {\r\n          const packageurl = url[key];\r\n          const packagenm = key;\r\n          return [packageurl, packagenm];\r\n        });\r\n        let suoyouimportpromise = [];\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        }\r\n        let objecttoreturn: PlainObj = {};\r\n        suoyouimportpromise.forEach(m => {\r\n          objecttoreturn[m[namesymbol]] = m;\r\n        });\r\n        return objecttoreturn;\r\n      })(url);\r\n    } else if (\r\n      (isArray(url) && typeof url === \"object\") ||\r\n      typeof packagename === \"object\"\r\n    ) {\r\n      return await (async (...args) => {\r\n        let suoyouimportpromise = [];\r\n        const 传入参数arr = Array(...args).flat(); //JSON.parse(JSON.stringify(Array(...args).flat()));\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        }\r\n        return suoyouimportpromise;\r\n      })(...[url, packagename].flat());\r\n    } else if (typeof url === \"string\" || typeof packagename === \"string\") {\r\n      assertstring(url);\r\n      return await (async (url: string, packagename?: string) => {\r\n        /*   if (typeof url === \"undefined\" || packagename === \"\") {\r\n          throw new TypeError(非法字符串);\r\n        } */\r\n        if (typeof packagename === \"undefined\") {\r\n          packagename = new URL(url).href;\r\n        }\r\n        url = new URL(url).href;\r\n        if (\r\n          typeof PACKAGESTORE[packagename] !== \"undefined\" &&\r\n          typeof PACKAGESTORE[packagename].default !== \"undefined\" &&\r\n          Reflect.get(PACKAGESTORE[packagename], urlsymbol) === url\r\n          //  [urlsymbol] === url\r\n        ) {\r\n          return getmodule(packagename);\r\n        } else if (\r\n          typeof PACKAGESTORE[url] !== \"undefined\" &&\r\n          typeof PACKAGESTORE[url].default !== \"undefined\" &&\r\n          Reflect.get(PACKAGESTORE[url], urlsymbol) === url\r\n          //   PACKAGESTORE[url][urlsymbol] === url\r\n        ) {\r\n          PACKAGESTORE[packagename] = PACKAGESTORE[url];\r\n          //   PACKAGESTORE[packagename][namesymbol] = packagename;\r\n          Reflect.set(PACKAGESTORE[packagename], namesymbol, packagename);\r\n          return getmodule(url);\r\n        } else {\r\n          return await coreload(url, packagename);\r\n        }\r\n      })(url, packagename);\r\n    } else {\r\n      throw new TypeError(输入的类型错误输入的类型必须是字符串或者数组或对象);\r\n    }\r\n  };\r\n})();\r\n","/* const 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\nconst 非法字符串 = \"输入的类型错误,输入的字符串不能为空,url不能为undefined\";\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\"); */\r\nimport oldimportcjsamdumd, { PlainObj } from \"./oldimport\";\r\nclass cantfindError extends Error {\r\n  urlorname: string;\r\n  constructor(message: string, urlorname: string) {\r\n    super(message);\r\n    this.urlorname = urlorname;\r\n  }\r\n}\r\n\r\nconst 模块仓库中没有找到 =\r\n  \"Cannot find module in packagestore, 模块仓库中没有找到, \";\r\n\r\nfunction isurl(url: string) {\r\n  var flag = false;\r\n  try {\r\n    if (url === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof url !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n    url = new URL(url).href;\r\n    flag = true;\r\n  } catch (error) {\r\n    flag = false;\r\n  }\r\n  return flag;\r\n}\r\nexport function isArray(a: any): a is Array<any> {\r\n  return (\r\n    // typeof a === \"object\" &&\r\n    Array.isArray(a) && {}.toString.call(a) === \"[object Array]\"\r\n  );\r\n}\r\nexport function getmodule(packagename: string) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    Object.freeze(findpackage);\r\n    return findpackage;\r\n    /*new Proxy(findpackage, {\r\n      set() {\r\n        return false;\r\n      },\r\n      deleteProperty() {\r\n        return false;\r\n      }\r\n    });*/\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n}\r\n// export const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nexport function isplainobject(o: any): o is PlainObj {\r\n  return (\r\n    typeof o === \"object\" && {}.toString.call(o) === \"[object Object]\"\r\n    //&&\r\n    //   o.__proto__ === Object.prototype\r\n  );\r\n}\r\nexport const 参数必须为字符串 = \"参数必须为字符串\";\r\n(\"use strict\");\r\nexport const 字符串不能为空 = \"字符串不能为空\";\r\n\r\nexport const myrequirefun = function requireinstead(packagename: string) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    return Object.freeze(\r\n      findpackage.default ? findpackage.default : findpackage\r\n    );\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n};\r\nexport { define };\r\ndefine.exports = {};\r\nfunction isFunction(it: any): it is Function {\r\n  const op = {}; // Object.prototype;\r\n  const ostring = op.toString;\r\n  return \"function\" === typeof it && ostring.call(it) === \"[object Function]\";\r\n}\r\nfunction define(name: any, deps?: any, callback?: any) {\r\n  \"use strict\";\r\n  define.exports = {};\r\n  define.amd = true;\r\n  //   const defineglobalDefQueue = [];\r\n  if (typeof name !== \"string\") {\r\n    callback = deps;\r\n    deps = name;\r\n    name = null;\r\n  }\r\n  if (!isArray(deps)) {\r\n    callback = deps;\r\n    deps = null;\r\n  }\r\n  if (!deps && isFunction(callback)) {\r\n    deps = [];\r\n  }\r\n  const defineglobalDefQueue: [any, string[], Function] = [\r\n    name,\r\n    deps,\r\n    callback\r\n  ];\r\n  const canshu = defineglobalDefQueue[1].map((e: string) => myrequirefun(e));\r\n  define.exports = defineglobalDefQueue[2](...canshu);\r\n}\r\ndefine.amd = true;\r\n\r\nexport function 定义default(\r\n  target: { default: undefined },\r\n  def: { [x: string]: string; default: any }\r\n) {\r\n  if (\r\n    Reflect.get(def, Symbol.toStringTag) ===\r\n      /* def[Symbol.toStringTag] */ \"Module\" &&\r\n    def.default\r\n  ) {\r\n    def = def.default;\r\n  }\r\n  Object.defineProperty(target, \"default\", {\r\n    enumerable: true,\r\n    get() {\r\n      return def;\r\n    }\r\n  });\r\n}\r\n// const importcjsamdumd = (() => {\r\n(\"use strict\");\r\nconst 补充加载依赖的模块网址 = \"补充加载依赖的模块网址\";\r\n\r\n// const importcjsamdumd = importcjsamdumd;\r\n\r\nasync function importcjsamdumd(url: any, packagename?: any): Promise<any> {\r\n  const inarguments: [any, any] = [url, packagename];\r\n  //   const importcjsamdumd = importcjsamdumd;\r\n  return await oldimportcjsamdumd(...inarguments).catch(handleerror);\r\n  async function handleerror(e: Error): Promise<any> {\r\n    console.warn(e);\r\n    if (e instanceof cantfindError && e.urlorname) {\r\n      if (isurl(e.urlorname)) {\r\n        console.log(补充加载依赖的模块网址, e.urlorname);\r\n        await importcjsamdumd(e.urlorname);\r\n        return await importcjsamdumd(...inarguments);\r\n      } else if (\r\n        isplainobject(inarguments[0]) &&\r\n        Reflect.has(inarguments[0], e.urlorname)\r\n      ) {\r\n        await oldimportcjsamdumd(...inarguments);\r\n        return await oldimportcjsamdumd(...inarguments);\r\n      } else {\r\n        throw e;\r\n      }\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n/* export interface IMPORTCJSAMDUMD {\r\n  (url: any, packagename?: any): Promise<any>;\r\n  PACKAGESTORE: Record<string, PlainObj>;\r\n  REQUIREPACKAGE: (packagename: string) => any;\r\n} */\r\n// /* importcjsamdumd.PACKAGESTORE = {} as Record<\r\n//   string|symbol,\r\n//   PlainObj\r\n// >; /* PACKAGESTORE ||  */\r\n// importcjsamdumd.REQUIREPACKAGE = getmodule; */\r\n//   return importcjsamdumd;\r\n// })();\r\n// const IMPORTcjsamdumd: IMPORTCJSAMDUMD = importcjsamdumd;\r\n\r\nexport default importcjsamdumd;\r\nconst PACKAGESTORE: Record<string, Record<string | symbol, any>> = {};\r\nconst REQUIREPACKAGE = getmodule;\r\nexport { PACKAGESTORE, REQUIREPACKAGE };\r\n// export const { PACKAGESTORE, REQUIREPACKAGE } = importcjsamdumd;\r\n"],"names":["createBlob","source","URL","createObjectURL","Blob","type","dynamicimportshimfun","参数必须为字符串","字符串不能为空","dynamicimportshim","Function","error","async","url","TypeError","href","getnewimportpromise","Promise","resolve","reject","s","document","createElement","clearsideeffect","removescript","removeerrorlisten","errorhandler","revokeObjectURL","src","onload","onerror","f","window","removeEventListener","e","remove","console","warn","addEventListener","topLevelBlobUrl","symbolkey","Symbol","for","Reflect","has","module","get","set","undefined","Error","head","appendChild","assertstring","formatedurlrequire","urlorname","baseurl","getbaseurl","formatedurl","格式化url","myrequirefun","非空对象","o","Object","keys","length","JSON","stringify","加载的模块没有输出","typesymbol","namesymbol","urlsymbol","sourcesymbol","packagename","主核心加载模块函数","fetchpromisetext","fetch","then","response","ok","text","scripttext","moduletype","exports","[object Object]","toStringTag","define","modulesrcfun","moduleexport","default","模块加载函数","toString","call","name","exportmodule","处理非es模块","parse","log","SyntaxError","exportdefault","filter","t","forEach","key","defineProperty","enumerable","定义default","defineProperties","value","writable","PACKAGESTORE","objurl","a","pathname","split","path","origin","join","String","startsWith","endsWith","同时发起多个字符串","importcjsamdumd","all","Array","map","输入的类型错误输入的类型必须是字符串或者数组或对象","传入的参数必须是个object","newobjjson","obj","同时发起多个","oldimportcjsamdumd","isplainobject","输入参数array","packageurl","packagenm","suoyouimportpromise","objecttoreturn","m","isArray","args","传入参数arr","flat","getmodule","coreload","cantfindError","message","super","this","模块仓库中没有找到","isurl","flag","findpackage","freeze","requireinstead","isFunction","it","op","ostring","deps","callback","amd","defineglobalDefQueue","canshu","target","def","补充加载依赖的模块网址","inarguments","catch","handleerror","REQUIREPACKAGE"],"mappings":"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"}