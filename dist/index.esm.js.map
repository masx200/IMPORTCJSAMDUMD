{"version":3,"file":"index.esm.js","sources":["../src/dynamicimportshim.js","../src/coreload.js","../src/IMPORTCJSAMDUMD.js"],"sourcesContent":["\"use strict\";\r\n// import { createBlob } from \"./createblob.js\";\r\nexport { createBlob };\r\n\r\nfunction createBlob(source) {\r\n  return URL.createObjectURL(\r\n    new Blob([source], { type: \"application/javascript\" })\r\n  );\r\n}\r\n//\r\n/*  */\r\nlet dynamicimportshimfun = (() => {\r\n  \"use strict\";\r\n  const 参数必须为字符串 = \"参数必须为字符串\";\r\n  const 字符串不能为空 = \"字符串不能为空\";\r\n\r\n  let dynamicimportshim;\r\n  try {\r\n    dynamicimportshim = Function(\"u\", \"return import(u)\");\r\n    // throw Error();\r\n  } catch (error) {\r\n    dynamicimportshim = async function(url) {\r\n      if (url === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      }\r\n      if (typeof url !== \"string\") {\r\n        throw new TypeError(参数必须为字符串);\r\n      }\r\n      url = new URL(url).href;\r\n      function getnewimportpromise() {\r\n        return new Promise((resolve, reject) => {\r\n          const s = document.createElement(\"script\");\r\n          function clearsideeffect() {\r\n            removescript(s);\r\n            removeerrorlisten(errorhandler);\r\n            // window.removeEventListener(\"error\", errorhandler);\r\n            URL.revokeObjectURL(s.src);\r\n          }\r\n          function removeerrorlisten(f) {\r\n            try {\r\n              window.removeEventListener(\"error\", f);\r\n            } catch (error) {\r\n              //\r\n            }\r\n          }\r\n          function removescript(e) {\r\n            try {\r\n              document.head.removeChild(e);\r\n            } catch (error) {\r\n              //\r\n            }\r\n          }\r\n          function errorhandler(e) {\r\n            /*\r\n              edge中第二次加载输出这个错误\r\n              Error: fetch import module failed */\r\n            console.warn(e.error);\r\n            reject(e.error);\r\n            /*\r\n            removescript(s);\r\n            removeerrorlisten(errorhandler);\r\n            // window.removeEventListener(\"error\", errorhandler);\r\n    URL.revokeObjectURL(s.src)      \r\n    */\r\n            clearsideeffect();\r\n          }\r\n          window.addEventListener(\"error\", errorhandler);\r\n          const topLevelBlobUrl = createBlob(\r\n            `import*as m from'${url}';\\nwindow[Symbol.for('${\"import-\" +\r\n              url}')]=m`\r\n            /* TypeError: Unable to set property 'Symbol(import-https://cdn.staticfile.org/vue/2.6.10/vue.esm.browser.min.js)' of undefined or null reference at Anonymous function (blob:http://127.0.0.1:8080/4f31c6d8-3282-4466-b04b-9952068d51e0:2:1) at module (blob:http://127.0.0.1:8080/4f31c6d8-3282-4466-b04b-9952068d51e0:1:1) */\r\n            // `import*as m from'${url}';\\ndocument.currentScript[Symbol.for('${\"import-\" +\r\n            //   url}')]=m`\r\n          );\r\n\r\n          s.type = \"module\";\r\n          s.src = topLevelBlobUrl;\r\n          s.async = true;\r\n\r\n          // const\r\n          s.onload = () => {\r\n            // resolve(s[Symbol.for(\"import-\" + url)]);\r\n            // Reflect.deleteProperty(s, Symbol.for(\"import-\" + url));\r\n            resolve(window[Symbol.for(\"import-\" + url)]);\r\n            Reflect.deleteProperty(window, Symbol.for(\"import-\" + url));\r\n            // document.head.removeChild(s);\r\n            // try {\r\n            //   document.head.removeChild(s);\r\n            // } catch (error) {\r\n            //   //\r\n            // }\r\n            /* removescript(s);\r\n            removeerrorlisten(errorhandler);\r\n            // window.removeEventListener(\"error\", errorhandler);\r\n       \r\n    URL.revokeObjectURL(s.src)\r\n    */\r\n            clearsideeffect();\r\n          };\r\n          s.onerror = () => {\r\n            /* 网络错误触发这个error */\r\n            /* TypeError: Failed to fetch dynamically imported module\r\n            TypeError: error loading dynamically imported module */\r\n            // edge中第1次加载输出这个错误\r\n            //e是EVENT!\r\n            // console.warn(e);\r\n            reject(new Error(\"import load failed from network\" + url));\r\n            /* EDGE浏览器中先触发onerror事件! */\r\n            /* 在chrome和firefox中则不是 */\r\n            /* TypeError: Failed to resolve module specifier \"vue\". Relative references must start with either \"/\", \"./\", or \"../\". */\r\n            /* TypeError: \"Error resolving module specifier: vue\" */\r\n            // document.head.removeChild(s);\r\n            // window.removeEventListener(\"error\", errorhandler);\r\n            /*  removeerrorlisten(errorhandler);\r\n            // try {\r\n            //   document.head.removeChild(s);\r\n            // } catch (error) {\r\n            //   //\r\n            // }\r\n            removescript(s);\r\n        \r\n    URL.revokeObjectURL(s.src)\r\n    */\r\n            clearsideeffect();\r\n          };\r\n          document.head.appendChild(s);\r\n        });\r\n      }\r\n      return await getnewimportpromise();\r\n    };\r\n  }\r\n\r\n  return dynamicimportshim;\r\n})();\r\n\r\n//export default dynamicimportshim;\r\nexport default dynamicimportshimfun;\r\n","const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nimport IMPORTCJSAMDUMD, {\r\n  //   IMPORTCJSAMDUMD,\r\n  定义default,\r\n  assertstring,\r\n  define,\r\n  myrequirefun //as require\r\n} from \"./IMPORTCJSAMDUMD.js\";\r\nconst 字符串不能为空 = \"字符串不能为空\";\r\nconst 加载的模块没有输出 = \"加载的模块没有输出\";\r\nconst namesymbol = Symbol.for(\"name\");\r\n\r\nconst urlsymbol = Symbol.for(\"url\");\r\n\r\nconst sourcesymbol = Symbol.for(\"source\");\r\nimport dynamicimportshim from \"./dynamicimportshim.js\";\r\nexport default //\r\n\r\n/*  */\r\n\r\n//\r\n(url, packagename) => {\r\n  //   return (function() {\r\n  return new Promise(主核心加载模块函数);\r\n  //   })();\r\n\r\n  function 主核心加载模块函数(resolve, reject) {\r\n    return ((resolve, reject) => {\r\n      (async () => {\r\n        try {\r\n          await (async () => {\r\n            let fetchpromisetext;\r\n            try {\r\n              try {\r\n                fetchpromisetext = await fetch(url).then(response => {\r\n                  if (!response.ok) {\r\n                    throw new Error(\"fetch failed \" + url);\r\n                  }\r\n                  return response.text();\r\n                });\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n              try {\r\n                await (async scripttext => {\r\n                  let moduletype;\r\n                  const exports = {\r\n                    exports: {\r\n                      [Symbol.toStringTag]: \"Module\"\r\n                    }\r\n                  };\r\n                  const module = {\r\n                    exports: {}\r\n                  };\r\n                  define.exports = {};\r\n                  //   let exportmodule = [{}, {}, {}];\r\n                  var modulesrcfun;\r\n                  const moduleexport = {\r\n                    // [namesymbol]: packagename,\r\n                    default: undefined\r\n                    // [urlsymbol]: url,\r\n                    // [sourcesymbol]: modulesrcfun\r\n                  };\r\n\r\n                  try {\r\n                    // exportmodule =\r\n\r\n                    (function(\r\n                      myrequirefun,\r\n                      define,\r\n                      module,\r\n                      exports,\r\n                      scripttext\r\n                    ) {\r\n                      const 模块加载函数 = new Function(\r\n                        \"require\",\r\n                        \"define\",\r\n                        \"module\",\r\n                        \"exports\",\r\n                        `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\n`\r\n                        // `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\nreturn [exports, module.exports, define.exports]; `\r\n                      );\r\n                      modulesrcfun = 模块加载函数.toString();\r\n                      return 模块加载函数.call(\r\n                        module.exports,\r\n\r\n                        urlorname => {\r\n                          assertstring(urlorname);\r\n                          urlorname = String(urlorname);\r\n                          if (urlorname === \"\") {\r\n                            throw new TypeError(字符串不能为空);\r\n                          }\r\n                          function getbaseurl(url) {\r\n                            var objurl = new URL(url);\r\n                            var a = objurl.pathname.split(\"/\");\r\n                            a[a.length - 1] = \"\";\r\n                            var path = objurl.origin + a.join(\"/\");\r\n                            return path;\r\n                          }\r\n\r\n                          function 格式化url(baseurl, urlorname) {\r\n                            if (\r\n                              String(urlorname).startsWith(\"./\") ||\r\n                              String(urlorname).startsWith(\"../\")\r\n                            ) {\r\n                              if (\r\n                                !(\r\n                                  String(urlorname).endsWith(\".js\") ||\r\n                                  urlorname.endsWith(\".mjs\") ||\r\n                                  urlorname.endsWith(\".json\") ||\r\n                                  urlorname.endsWith(\".css\") ||\r\n                                  urlorname.endsWith(\".html\")\r\n                                )\r\n                              ) {\r\n                                urlorname += \".js\";\r\n                              }\r\n                              urlorname = new URL(baseurl + urlorname).href;\r\n                            }\r\n\r\n                            return urlorname;\r\n                          }\r\n                          const baseurl = getbaseurl(url);\r\n\r\n                          urlorname = 格式化url(baseurl, urlorname);\r\n\r\n                          return myrequirefun(urlorname);\r\n                        },\r\n\r\n                        // require\r\n\r\n                        define,\r\n                        module,\r\n                        exports.exports\r\n                        /* 如果在函数内修改exports的值,则无法获取输出,只能在修改exports的属性的时候,获取到 */\r\n                      );\r\n                    })(myrequirefun, define, module, exports, scripttext);\r\n                    const exportmodule = [\r\n                      exports.exports ? exports.exports : {},\r\n                      module.exports ? module.exports : {},\r\n                      define.exports ? define.exports : {}\r\n                    ];\r\n                    处理非es模块(moduleexport, exportmodule);\r\n                    moduletype = \"cjs\";\r\n                  } catch (e) {\r\n                    console.warn(e);\r\n                    try {\r\n                      moduleexport.default = JSON.parse(scripttext);\r\n                      console.log(\"检测到json模块 \" + url);\r\n                      modulesrcfun = scripttext;\r\n                      moduletype = \"json\";\r\n                    } catch (error) {\r\n                      console.warn(error);\r\n                      if (\r\n                        // (\r\n                        e instanceof SyntaxError\r\n\r\n                        //   &&\r\n                        //   /* chrome浏览器报错信息 */\r\n                        //   e.message === \"Unexpected token export\") ||\r\n                        // /* edge浏览器报错不同 */\r\n                        // \"Syntax error\" === e.message ||\r\n                        // /* 火狐浏览器报错不同 */\r\n                        // \"export declarations may only appear at top level of a module\" ===\r\n                        //   e.message\r\n                      ) {\r\n                        // const topLevelBlobUrl = createBlob(\r\n                        //   `\"use strict\";\\n/* ${url} */;\\nexport*as default from'${url}';\\n/* ${url} */;\\n `\r\n                        // );\r\n                        const topLevelBlobUrl = url;\r\n                        //   modulesrcfun = topLevelBlobUrl;\r\n                        modulesrcfun = scripttext;\r\n                        try {\r\n                          const exportdefault = await dynamicimportshim(\r\n                            topLevelBlobUrl\r\n                          );\r\n                          moduletype = \"esm\";\r\n                          // var module__exportdefault = exportdefault.default;\r\n\r\n                          Object.keys(exportdefault)\r\n                            .filter(t => t !== \"default\")\r\n                            .forEach(key => {\r\n                              Object.defineProperty(moduleexport, key, {\r\n                                enumerable: true,\r\n                                get() {\r\n                                  return exportdefault[key];\r\n                                }\r\n                              });\r\n                            });\r\n\r\n                          定义default(\r\n                            moduleexport,\r\n                            exportdefault.default\r\n                              ? exportdefault.default\r\n                              : exportdefault\r\n                          );\r\n                        } catch (e) {\r\n                          console.warn(e);\r\n                          reject(e);\r\n                          return;\r\n                        }\r\n                        if (typeof moduleexport.default === \"undefined\") {\r\n                          //   moduleexport[urlsymbol] = url;\r\n                          console.warn(加载的模块没有输出, packagename, url);\r\n                          // resolve(moduleexport);\r\n                          reject(\r\n                            Error(\r\n                              加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                            )\r\n                          );\r\n                          return;\r\n                        }\r\n                      } else {\r\n                        console.warn(e);\r\n                        reject(e);\r\n                        return;\r\n                      }\r\n                    }\r\n                    /* 如果是个json的话,也会报错 SyntaxError*/\r\n                    /*  如果是es模块,则使用dynamicimportshim加载*/\r\n\r\n                    // reject(e);\r\n                    // return;\r\n                  }\r\n                  function 处理非es模块(moduleexport, exportmodule) {\r\n                    if (typeof exportmodule === \"undefined\") {\r\n                      exportmodule = [{}, {}, {}];\r\n                    }\r\n                    if (typeof define.exports === \"undefined\") {\r\n                      define.exports = {};\r\n                    }\r\n                    function 非空对象(o) {\r\n                      return (\r\n                        typeof o !== \"object\" ||\r\n                        Object.keys(o).length ||\r\n                        JSON.stringify(o) !== \"{}\"\r\n                      );\r\n                    }\r\n                    if (\r\n                      非空对象(exportmodule[0])\r\n                      //   typeof exportmodule[0] !== \"object\" ||\r\n                      //   Object.keys(exportmodule[0]).length ||\r\n                      //   JSON.stringify(exportmodule[0]) !== \"{}\"\r\n                    ) {\r\n                      // console.log(\"检测到umd模块\", url, packagename);\r\n\r\n                      const exportdefault = exportmodule[0];\r\n                      定义default(moduleexport, exportdefault);\r\n                      // Object.defineProperty(moduleexport, \"default\", {\r\n                      //   enumerable: true,\r\n\r\n                      //   get() {\r\n                      //     return exportdefault;\r\n                      //   }\r\n                      // });\r\n                      // moduleexport.default = exportmodule[0];\r\n                    } else if (\r\n                      非空对象(exportmodule[1])\r\n                      //   typeof exportmodule[1] !== \"object\" ||\r\n                      //   Object.keys(exportmodule[1]).length ||\r\n                      //   JSON.stringify(exportmodule[1]) !== \"{}\"\r\n                    ) {\r\n                      // console.log(\"检测到cjs模块\", url, packagename);\r\n                      // moduleexport.default = exportmodule[1];\r\n                      const exportdefault = exportmodule[1];\r\n\r\n                      定义default(moduleexport, exportdefault);\r\n                      // Object.defineProperty(moduleexport, \"default\", {\r\n                      //   enumerable: true,\r\n\r\n                      //   get() {\r\n                      //     return exportdefault;\r\n                      //   }\r\n                      // });\r\n                    } else if (\r\n                      非空对象(exportmodule[2])\r\n                      //   typeof exportmodule[2] !== \"object\" ||\r\n                      //   Object.keys(exportmodule[2]).length ||\r\n                      //   JSON.stringify(exportmodule[2]) !== \"{}\"\r\n                    ) {\r\n                      // console.log(\"检测到amd模块\", url, packagename);\r\n                      // moduleexport.default = exportmodule[2];\r\n                      const exportdefault = exportmodule[2];\r\n                      // Object.defineProperty(moduleexport, \"default\", {\r\n                      //   enumerable: true,\r\n\r\n                      //   get() {\r\n                      //     return exportdefault;\r\n                      //   }\r\n                      // });\r\n                      定义default(moduleexport, exportdefault);\r\n                    } else {\r\n                      //   moduleexport[urlsymbol] = url;\r\n                      console.warn(加载的模块没有输出, url, packagename);\r\n                      // resolve(moduleexport);\r\n                      reject(\r\n                        Error(\r\n                          加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                        )\r\n                      );\r\n                      return;\r\n                    }\r\n                  }\r\n                  // const moduleexport = {\r\n                  //   // [namesymbol]: packagename,\r\n                  //   default: undefined\r\n                  //   // [urlsymbol]: url,\r\n                  //   // [sourcesymbol]: modulesrcfun\r\n                  // };\r\n\r\n                  Object.defineProperties(moduleexport, {\r\n                    [namesymbol]: {\r\n                      value: packagename,\r\n                      // configurable: true,\r\n                      writable: true,\r\n                      enumerable: false\r\n                    },\r\n                    [urlsymbol]: {\r\n                      value: url,\r\n                      // configurable: true,\r\n                      //   writable: true,\r\n                      enumerable: false\r\n                    },\r\n                    [sourcesymbol]: {\r\n                      //   value: packagename,\r\n                      //   get() {\r\n                      //     return modulesrcfun;\r\n                      //   },\r\n                      value: modulesrcfun,\r\n                      //   configurable: true,\r\n                      //   writable: true,\r\n                      enumerable: false\r\n                    },\r\n                    [Symbol.for(\"type\")]: {\r\n                      value: moduletype,\r\n                      enumerable: false\r\n                    }\r\n                  });\r\n                  if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\r\n                    Object.defineProperty(moduleexport, Symbol.toStringTag, {\r\n                      //   enumerable:t,\r\n                      value: \"Module\"\r\n                    });\r\n                  }\r\n\r\n                  if (typeof moduleexport.default !== \"undefined\") {\r\n                    if (typeof packagename !== \"undefined\") {\r\n                      // moduleexport[namesymbol] = packagename;\r\n                      IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][\r\n                        packagename\r\n                      ] = moduleexport;\r\n                    }\r\n                    // else {\r\n                    //   packagename = url;\r\n                    //   IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][\r\n                    //     packagename\r\n                    //   ] = moduleexport;\r\n                    // }\r\n                  }\r\n                  // moduleexport[urlsymbol] = url;\r\n\r\n                  /*\r\n                      if (typeof moduleexport.default !== \"undefined\") {\r\n                        // if (typeof moduleexport[namesymbol] !== \"undefined\") {\r\n                        // }\r\n                      }\r\n      \r\n      */\r\n                  /*\r\n      else \r\n      {\r\n                        //   moduleexport[urlsymbol] = url;\r\n                        console.warn(加载的模块没有输出, packagename, url);\r\n                        // resolve(moduleexport);\r\n                        reject(Error(加载的模块没有输出 + packagename + url));\r\n                        return;\r\n                      }\r\n                      */\r\n\r\n                  /* 加载完成之后， IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][                            url]*/\r\n                  /* 复制一份 */\r\n                  IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url] =\r\n                    IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n                  // IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url][namesymbol] = url;\r\n                  !!moduleexport.default &&\r\n                    Object.keys(moduleexport.default)\r\n                      .filter(t => t !== \"default\")\r\n                      .forEach(key => {\r\n                        /* TypeError: Cannot redefine property: md5 */\r\n                        try {\r\n                          Object.defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return moduleexport.default[key];\r\n                            }\r\n                          });\r\n                        } catch (error) {\r\n                          //\r\n                        }\r\n                      });\r\n\r\n                  resolve(moduleexport);\r\n                  return;\r\n                })(fetchpromisetext);\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              console.warn(e);\r\n              reject(e);\r\n              return;\r\n            }\r\n          })();\r\n        } catch (e) {\r\n          console.warn(e);\r\n          reject(e);\r\n          return;\r\n        }\r\n      })();\r\n    })(resolve, reject);\r\n  }\r\n};\r\n","const 传入的参数必须是个object = \"传入的参数必须是个object\";\r\nconst 模块仓库中没有找到 =\r\n  \"Cannot find module in packagestore, 模块仓库中没有找到, \";\r\nfunction newobjjson(obj) {\r\n  if (typeof obj !== \"object\") {\r\n    throw new TypeError(\r\n      // \"传入的参数必须是个object!\"\r\n      传入的参数必须是个object\r\n    );\r\n  }\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\nasync function 同时发起多个(a) {\r\n  return await Promise.all(\r\n    Array.from(a).map(e => {\r\n      return IMPORTCJSAMDUMD(e[0], e[1]);\r\n    })\r\n  );\r\n}\r\nfunction isurl(url) {\r\n  var flag = false;\r\n  try {\r\n    if (url === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof url !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n\r\n    url = new URL(url).href;\r\n    flag = true;\r\n  } catch (error) {\r\n    flag = false;\r\n  }\r\n  return flag;\r\n}\r\nfunction isArray(a) {\r\n  return (\r\n    typeof a === \"object\" &&\r\n    Array.isArray(a) &&\r\n    Object.prototype.toString.call(a) === \"[object Array]\"\r\n  );\r\n}\r\n\r\nfunction getmodule(packagename) {\r\n  \"use strict\";\r\n\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n  if (findpackage) {\r\n    // console.log(\"在模块仓库中找到了\", packagename, findpackage[urlsymbol]);\r\n    //   return { ...findpackage };\r\n\r\n    return new Proxy(findpackage, {\r\n      // ownKeys(target) {\r\n      //   return [...Object.keys(target), Symbol.toStringTag];\r\n      // },\r\n      // has(target, name) {\r\n      //   // console.log('has' + name);\r\n\r\n      //   if (typeof name === \"symbol\") {\r\n      //     return false;\r\n      //   }\r\n      //   return Reflect.has(target, name);\r\n      // },\r\n      // get(target, propertyKey) {\r\n      //   //   if (typeof propertyKey === \"symbol\") {\r\n      //   //     return;\r\n      //   //   }\r\n      //   // console.log('GET ' + propertyKey);\r\n      //   return Reflect.get(target, propertyKey); // [propertyKey];\r\n      // },\r\n      set() {\r\n        return false;\r\n      },\r\n      deleteProperty() {\r\n        // console.log('delete' + name);\r\n        // return Reflect.deleteProperty(target, name);\r\n        return false;\r\n      }\r\n    });\r\n  } else {\r\n    throw new Error(模块仓库中没有找到 + packagename);\r\n  }\r\n}\r\nconst GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nfunction isobject(o) {\r\n  return (\r\n    typeof o === \"object\" &&\r\n    Object.prototype.toString.call(o) === \"[object Object]\" &&\r\n    o.__proto__ === Object.prototype\r\n  );\r\n}\r\nconst 参数必须为字符串 = \"参数必须为字符串\";\r\n(\"use strict\");\r\nconst 字符串不能为空 = \"字符串不能为空\";\r\n// import dynamicimportshim from \"./dynamicimportshim.js\";\r\n// import { createBlob } from \"./createblob.js\";\r\nimport coreload from \"./coreload.js\";\r\nexport let myrequirefun = function requireinstead(packagename) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n\r\n  const findpackage = IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n  if (findpackage) {\r\n    // console.log(\"在模块仓库中找到了\", packagename, findpackage[urlsymbol]);\r\n    return findpackage.default;\r\n  } else {\r\n    let errormes = new Error(模块仓库中没有找到 + packagename);\r\n\r\n    errormes.urlorname = packagename;\r\n    throw errormes;\r\n    // throw new Error(\r\n    //   `Cannot find module in packagestore, 模块仓库中没有找到, ` + packagename\r\n    // );\r\n  }\r\n};\r\n\r\n// export define(a,b,c){\r\nexport { define };\r\ndefine.exports = {};\r\nfunction isFunction(it) {\r\n  const op = Object.prototype;\r\n  const ostring = op.toString;\r\n  return \"function\" === typeof it && ostring.call(it) === \"[object Function]\";\r\n}\r\nfunction define(name, deps, callback) {\r\n  \"use strict\";\r\n  define.exports = {};\r\n\r\n  define.amd = true;\r\n  const defineglobalDefQueue = [];\r\n  /*\r\n  const op = Object.prototype;\r\n  const ostring = op.toString;\r\n*/\r\n  // function isArray(it) {\r\n  //   const a = it;\r\n  //   return Array.isArray(a) && ostring.call(it) === \"[object Array]\";\r\n  // }\r\n\r\n  if (typeof name !== \"string\") {\r\n    callback = deps;\r\n    deps = name;\r\n    name = null;\r\n  }\r\n  if (!isArray(deps)) {\r\n    callback = deps;\r\n    deps = null;\r\n  }\r\n  if (!deps && isFunction(callback)) {\r\n    deps = [];\r\n  }\r\n\r\n  // if (0) {\r\n  //   //\r\n  // } else\r\n\r\n  //   {\r\n  defineglobalDefQueue.push([name, deps, callback]);\r\n  //   }\r\n  // console.log(\"检测到amd模块\", defineglobalDefQueue[0]);\r\n  const canshu = defineglobalDefQueue[0][1].map(e => myrequirefun(e));\r\n  define.exports = defineglobalDefQueue[0][2](...canshu);\r\n}\r\ndefine.amd = true;\r\n// }\r\nexport function assertstring(s) {\r\n  if (s === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof s !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  return true;\r\n}\r\nexport function 定义default(target, def) {\r\n  /* 如果模块的输出是一个模块 */\r\n  if (def[Symbol.toStringTag] === \"Module\" && def.default) {\r\n    def = def.default;\r\n  }\r\n  // def[Symbol.toStringTag]===\"Module\"?\r\n  // def=def.default\r\n  // :;\r\n\r\n  Object.defineProperty(target, \"default\", {\r\n    enumerable: true,\r\n    // writable: true,\r\n    // configurable: true,\r\n    get() {\r\n      return def;\r\n    }\r\n  });\r\n}\r\n// export default IMPORTCJSAMDUMD; /* global  */\r\nconst IMPORTCJSAMDUMD = (() => {\r\n  \"use strict\";\r\n\r\n  const 补充加载依赖的模块网址 = \"补充加载依赖的模块网址\";\r\n\r\n  //   const 加载的模块没有输出 = \"加载的模块没有输出\";\r\n\r\n  const 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n    \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\n  const 非法字符串 = \"输入的类型错误,输入的字符串不能为空,url不能为undefined\";\r\n\r\n  const namesymbol = Symbol.for(\"name\");\r\n\r\n  const urlsymbol = Symbol.for(\"url\");\r\n\r\n  //   const sourcesymbol = Symbol.for(\"source\");\r\n\r\n  // const globalDefQueue = \"globalDefQueue\";\r\n  const IMPORTCJSAMDUMD = importcjsamdumd;\r\n  // if (\"object\" == typeof exports && \"undefined\" != typeof module) {\r\n  //   module.exports = importcjsamdumd;\r\n  // } else {\r\n  //   // global.IMPORTCJSAMDUMD = importcjsamdumd;\r\n  // }\r\n\r\n  IMPORTCJSAMDUMD[GLOBALPACKAGESTORE] =\r\n    IMPORTCJSAMDUMD[GLOBALPACKAGESTORE] || {};\r\n  //  myrequirefun = requireinstead;\r\n\r\n  //   define.exports = {};\r\n  //   function define(name, deps, callback) {\r\n  //     \"use strict\";\r\n  //     define.exports = {};\r\n\r\n  //     define.amd = true;\r\n  //     const defineglobalDefQueue = [];\r\n  //     const op = Object.prototype;\r\n  //     const ostring = op.toString;\r\n  //     // function isArray(it) {\r\n  //     //   const a = it;\r\n  //     //   return Array.isArray(a) && ostring.call(it) === \"[object Array]\";\r\n  //     // }\r\n  //     function isFunction(it) {\r\n  //       return ostring.call(it) === \"[object Function]\";\r\n  //     }\r\n  //     if (typeof name !== \"string\") {\r\n  //       callback = deps;\r\n  //       deps = name;\r\n  //       name = null;\r\n  //     }\r\n  //     if (!isArray(deps)) {\r\n  //       callback = deps;\r\n  //       deps = null;\r\n  //     }\r\n  //     if (!deps && isFunction(callback)) {\r\n  //       deps = [];\r\n  //     }\r\n\r\n  //     // if (0) {\r\n  //     //   //\r\n  //     // } else\r\n\r\n  //     {\r\n  //       defineglobalDefQueue.push([name, deps, callback]);\r\n  //     }\r\n  //     // console.log(\"检测到amd模块\", defineglobalDefQueue[0]);\r\n  //     const canshu = defineglobalDefQueue[0][1].map(e => require(e));\r\n  //     define.exports = defineglobalDefQueue[0][2](...canshu);\r\n  //   }\r\n  //   define.amd = true;\r\n\r\n  async function importcjsamdumd(...inarguments /* url */) {\r\n    const initialtry = oldimportcjsamdumd(...inarguments);\r\n    // async function handleerror(e){\r\n\r\n    // }\r\n    const handleerror = async e => {\r\n      console.warn(e);\r\n      if (e.urlorname) {\r\n        if (isurl(e.urlorname)) {\r\n          console.log(补充加载依赖的模块网址, e.urlorname);\r\n\r\n          // initialtry.catch(handleerror);\r\n          await importcjsamdumd(e.urlorname);\r\n          // initialtry.catch(handleerror);\r\n        } else {\r\n          if (\r\n            isobject(inarguments[0]) &&\r\n            Reflect.has(inarguments[0], e.urlorname)\r\n          ) {\r\n            try {\r\n              await importcjsamdumd(...inarguments);\r\n            } catch (error) {\r\n              console.warn(error);\r\n              throw e;\r\n            }\r\n          } else {\r\n            throw e;\r\n          }\r\n\r\n          // return await importcjsamdumd(...inarguments);\r\n        }\r\n      } else {\r\n        throw e;\r\n      }\r\n      return await importcjsamdumd(...inarguments);\r\n    };\r\n\r\n    // return await oldimportcjsamdumd(...inarguments)\r\n    return await initialtry.catch(\r\n      //   async e => {\r\n      //   console.warn(e);\r\n\r\n      //   if (isurl(e.urlorname)) {\r\n      //     console.log(\"补充加载依赖的模块网址\", e.urlorname);\r\n      //     await importcjsamdumd(e.urlorname);\r\n      //   }\r\n      //   return await oldimportcjsamdumd(...arguments);\r\n      // }\r\n      handleerror\r\n    );\r\n  }\r\n\r\n  async function oldimportcjsamdumd(url, packagename) {\r\n    (\"use strict\");\r\n\r\n    if (isobject(url)) {\r\n      return await (async url => {\r\n        url = newobjjson(url);\r\n        const 输入参数array = Object.keys(url).map(key => {\r\n          const packageurl = url[key];\r\n          const packagenm = key;\r\n          return [packageurl, packagenm];\r\n        });\r\n        let suoyouimportpromise = [];\r\n\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n          // suoyouimportpromise = await Promise.all(\r\n          //   输入参数array.map(e => {\r\n          //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n          //   })\r\n          // );\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n          // suoyouimportpromise = await Promise.all(\r\n          //   输入参数array.map(e => {\r\n          //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n          //   })\r\n          // );\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n          // suoyouimportpromise = await Promise.all(\r\n          //   输入参数array.map(e => {\r\n          //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n          //   })\r\n          // );\r\n        }\r\n        let objecttoreturn = {};\r\n        suoyouimportpromise.forEach(m => {\r\n          objecttoreturn[m[namesymbol]] = m;\r\n        });\r\n        return objecttoreturn;\r\n      })(url);\r\n    } else if (\r\n      (isArray(url) && typeof url === \"object\") ||\r\n      typeof packagename === \"object\"\r\n    ) {\r\n      /*\r\n  \r\n  \r\n  \r\n  \r\n        Array(...arguments).forEach(e => {\r\n          const url = e[0];\r\n          let packagename = e[1];\r\n          if (typeof url === \"undefined\" || url === \"\" || packagename === \"\") {\r\n            throw new Error(\r\n              \"输入的类型错误,输入的字符串不能为空,url不能为undefined\"\r\n            );\r\n          }\r\n          if (typeof packagename === \"undefined\") {\r\n            packagename = new URL(url).href;\r\n          }\r\n        });\r\n  \r\n  \r\n  \r\n  */\r\n\r\n      return await (async (...args) => {\r\n        async function 同时发起多个字符串(a) {\r\n          return await Promise.all(\r\n            Array.from(a).map(e => {\r\n              return IMPORTCJSAMDUMD(e);\r\n            })\r\n          );\r\n        }\r\n        let suoyouimportpromise = [];\r\n        const 传入参数arr = JSON.parse(JSON.stringify(Array(...args).flat()));\r\n        // async function 同时发起多个(a) {\r\n        //   return await Promise.all(\r\n        //     a.map(e => {\r\n        //       return IMPORTCJSAMDUMD(e[0], e[1]);\r\n        //     })\r\n        //   );\r\n        // }\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n          // suoyouimportpromise = await Promise.all(\r\n          //   Array(...arguments).map(e => {\r\n          //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n          //   })\r\n          // );\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n          // suoyouimportpromise = await Promise.all(\r\n          //   Array(...arguments).map(e => {\r\n          //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n          //   })\r\n          // );\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n          // suoyouimportpromise = await Promise.all(\r\n          //   Array(...arguments).map(e => {\r\n          //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n          //   })\r\n          // );\r\n        }\r\n        return suoyouimportpromise;\r\n      })(...arguments);\r\n    } else if (typeof url === \"string\" || typeof packagename === \"string\") {\r\n      assertstring(url);\r\n      // assertstring(packagename);\r\n      return await (async (url, packagename) => {\r\n        if (typeof url === \"undefined\" || url === \"\" || packagename === \"\") {\r\n          throw new TypeError(\r\n            // \"输入的类型错误,输入的字符串不能为空,url不能为undefined\"\r\n            非法字符串\r\n          );\r\n        }\r\n        if (typeof packagename === \"undefined\") {\r\n          packagename = new URL(url).href;\r\n        }\r\n        url = new URL(url).href;\r\n\r\n        if (\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename] !==\r\n            \"undefined\" &&\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename].default !==\r\n            \"undefined\" &&\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename][urlsymbol] === url\r\n        ) {\r\n          // return IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n          // return await new Promise(resolve => {\r\n          //   resolve(IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename]);\r\n          // });\r\n          return getmodule(packagename);\r\n        } else if (\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url] !== \"undefined\" &&\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url].default !==\r\n            \"undefined\" &&\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url][urlsymbol] === url\r\n        ) {\r\n          /* 如果先用url作为名称加载，后用packagename加载，则复制一份 */\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename] =\r\n            IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url];\r\n\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename][\r\n            namesymbol\r\n          ] = packagename;\r\n          // return IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url];\r\n          return getmodule(url);\r\n        } else {\r\n          return await coreload(url, packagename);\r\n          /* \r\n     const 主核心加载模块函数 = coreload(url, packagename);\r\n          return await new Promise(\r\n            主核心加载模块函数\r\n*/\r\n          //             (resolve, reject) => {\r\n          //             (async () => {\r\n          //               try {\r\n          //                 await (async () => {\r\n          //                   let fetchpromisetext;\r\n          //                   try {\r\n          //                     try {\r\n          //                       fetchpromisetext = await fetch(url).then(response => {\r\n          //                         if (!response.ok) {\r\n          //                           throw new Error(\"fetch failed \" + url);\r\n          //                         }\r\n          //                         return response.text();\r\n          //                       });\r\n          //                     } catch (e) {\r\n          //                       console.warn(e);\r\n          //                       reject(e);\r\n          //                       return;\r\n          //                     }\r\n          //                     try {\r\n          //                       await (async scripttext => {\r\n          //                         const exports = {\r\n          //                           exports: {\r\n          //                             [Symbol.toStringTag]: \"Module\"\r\n          //                           }\r\n          //                         };\r\n          //                         const module = {\r\n          //                           exports: {}\r\n          //                         };\r\n          //                         define.exports = {};\r\n          //                         //   let exportmodule = [{}, {}, {}];\r\n          //                         var modulesrcfun;\r\n          //                         const moduleexport = {\r\n          //                           // [namesymbol]: packagename,\r\n          //                           default: undefined\r\n          //                           // [urlsymbol]: url,\r\n          //                           // [sourcesymbol]: modulesrcfun\r\n          //                         };\r\n          //                         try {\r\n          //                           // exportmodule =\r\n\r\n          //                           (function(\r\n          //                             require,\r\n          //                             define,\r\n          //                             module,\r\n          //                             exports,\r\n          //                             scripttext\r\n          //                           ) {\r\n          //                             const 模块加载函数 = new Function(\r\n          //                               \"require\",\r\n          //                               \"define\",\r\n          //                               \"module\",\r\n          //                               \"exports\",\r\n          //                               `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\n`\r\n          //                               // `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\nreturn [exports, module.exports, define.exports]; `\r\n          //                             );\r\n          //                             modulesrcfun = 模块加载函数;\r\n          //                             return 模块加载函数.call(\r\n          //                               module.exports,\r\n\r\n          //                               urlorname => {\r\n          //                                 assertstring(urlorname);\r\n          //                                 urlorname = String(urlorname);\r\n          //                                 if (urlorname === \"\") {\r\n          //                                   throw new TypeError(字符串不能为空);\r\n          //                                 }\r\n          //                                 function getbaseurl(url) {\r\n          //                                   var objurl = new URL(url);\r\n          //                                   var a = objurl.pathname.split(\"/\");\r\n          //                                   a[a.length - 1] = \"\";\r\n          //                                   var path = objurl.origin + a.join(\"/\");\r\n          //                                   return path;\r\n          //                                 }\r\n\r\n          //                                 function 格式化url(baseurl, urlorname) {\r\n          //                                   if (\r\n          //                                     String(urlorname).startsWith(\"./\") ||\r\n          //                                     String(urlorname).startsWith(\"../\")\r\n          //                                   ) {\r\n          //                                     if (!String(urlorname).endsWith(\".js\")) {\r\n          //                                       urlorname += \".js\";\r\n          //                                     }\r\n          //                                     urlorname = new URL(baseurl + urlorname)\r\n          //                                       .href;\r\n          //                                   }\r\n\r\n          //                                   return urlorname;\r\n          //                                 }\r\n          //                                 const baseurl = getbaseurl(url);\r\n\r\n          //                                 urlorname = 格式化url(baseurl, urlorname);\r\n\r\n          //                                 return require(urlorname);\r\n          //                               },\r\n\r\n          //                               // require\r\n\r\n          //                               define,\r\n          //                               module,\r\n          //                               exports.exports\r\n          //                               /* 如果在函数内修改exports的值,则无法获取输出,只能在修改exports的属性的时候,获取到 */\r\n          //                             );\r\n          //                           })(require, define, module, exports, scripttext);\r\n          //                           const exportmodule = [\r\n          //                             exports.exports ? exports.exports : {},\r\n          //                             module.exports ? module.exports : {},\r\n          //                             define.exports ? define.exports : {}\r\n          //                           ];\r\n          //                           处理非es模块(exportmodule);\r\n          //                         } catch (e) {\r\n          //                           /*  如果是es模块,则使用dynamicimportshim加载*/\r\n          //                           if (\r\n          //                             // (\r\n          //                             e instanceof SyntaxError\r\n\r\n          //                             //   &&\r\n          //                             //   /* chrome浏览器报错信息 */\r\n          //                             //   e.message === \"Unexpected token export\") ||\r\n          //                             // /* edge浏览器报错不同 */\r\n          //                             // \"Syntax error\" === e.message ||\r\n          //                             // /* 火狐浏览器报错不同 */\r\n          //                             // \"export declarations may only appear at top level of a module\" ===\r\n          //                             //   e.message\r\n          //                           ) {\r\n          //                             // const topLevelBlobUrl = createBlob(\r\n          //                             //   `\"use strict\";\\n/* ${url} */;\\nexport*as default from'${url}';\\n/* ${url} */;\\n `\r\n          //                             // );\r\n          //                             const topLevelBlobUrl = url;\r\n          //                             modulesrcfun = topLevelBlobUrl;\r\n          //                             try {\r\n          //                               const exportdefault = await dynamicimportshim(\r\n          //                                 topLevelBlobUrl\r\n          //                               );\r\n          //                               // var module__exportdefault = exportdefault.default;\r\n          //                               定义default(\r\n          //                                 moduleexport,\r\n          //                                 exportdefault.default\r\n          //                                   ? exportdefault.default\r\n          //                                   : exportdefault\r\n          //                               );\r\n          //                             } catch (e) {\r\n          //                               console.warn(e);\r\n          //                               reject(e);\r\n          //                               return;\r\n          //                             }\r\n          //                             if (typeof moduleexport.default === \"undefined\") {\r\n          //                               //   moduleexport[urlsymbol] = url;\r\n          //                               console.warn(\r\n          //                                 加载的模块没有输出,\r\n          //                                 packagename,\r\n          //                                 url\r\n          //                               );\r\n          //                               // resolve(moduleexport);\r\n          //                               reject(\r\n          //                                 Error(\r\n          //                                   加载的模块没有输出 +\r\n          //                                     \" \" +\r\n          //                                     packagename +\r\n          //                                     \" \" +\r\n          //                                     url\r\n          //                                 )\r\n          //                               );\r\n          //                               return;\r\n          //                             }\r\n          //                           } else {\r\n          //                             console.warn(e);\r\n          //                             reject(e);\r\n          //                             return;\r\n          //                           }\r\n          //                           // reject(e);\r\n          //                           // return;\r\n          //                         }\r\n          //                         function 处理非es模块(exportmodule) {\r\n          //                           if (typeof exportmodule === \"undefined\") {\r\n          //                             exportmodule = [{}, {}, {}];\r\n          //                           }\r\n          //                           if (typeof define.exports === \"undefined\") {\r\n          //                             define.exports = {};\r\n          //                           }\r\n          //                           function 非空对象(o) {\r\n          //                             return (\r\n          //                               typeof o !== \"object\" ||\r\n          //                               Object.keys(o).length ||\r\n          //                               JSON.stringify(o) !== \"{}\"\r\n          //                             );\r\n          //                           }\r\n          //                           if (\r\n          //                             非空对象(exportmodule[0])\r\n          //                             //   typeof exportmodule[0] !== \"object\" ||\r\n          //                             //   Object.keys(exportmodule[0]).length ||\r\n          //                             //   JSON.stringify(exportmodule[0]) !== \"{}\"\r\n          //                           ) {\r\n          //                             // console.log(\"检测到umd模块\", url, packagename);\r\n\r\n          //                             const exportdefault = exportmodule[0];\r\n          //                             定义default(moduleexport, exportdefault);\r\n          //                             // Object.defineProperty(moduleexport, \"default\", {\r\n          //                             //   enumerable: true,\r\n\r\n          //                             //   get() {\r\n          //                             //     return exportdefault;\r\n          //                             //   }\r\n          //                             // });\r\n          //                             // moduleexport.default = exportmodule[0];\r\n          //                           } else if (\r\n          //                             非空对象(exportmodule[1])\r\n          //                             //   typeof exportmodule[1] !== \"object\" ||\r\n          //                             //   Object.keys(exportmodule[1]).length ||\r\n          //                             //   JSON.stringify(exportmodule[1]) !== \"{}\"\r\n          //                           ) {\r\n          //                             // console.log(\"检测到cjs模块\", url, packagename);\r\n          //                             // moduleexport.default = exportmodule[1];\r\n          //                             const exportdefault = exportmodule[1];\r\n\r\n          //                             定义default(moduleexport, exportdefault);\r\n          //                             // Object.defineProperty(moduleexport, \"default\", {\r\n          //                             //   enumerable: true,\r\n\r\n          //                             //   get() {\r\n          //                             //     return exportdefault;\r\n          //                             //   }\r\n          //                             // });\r\n          //                           } else if (\r\n          //                             非空对象(exportmodule[2])\r\n          //                             //   typeof exportmodule[2] !== \"object\" ||\r\n          //                             //   Object.keys(exportmodule[2]).length ||\r\n          //                             //   JSON.stringify(exportmodule[2]) !== \"{}\"\r\n          //                           ) {\r\n          //                             // console.log(\"检测到amd模块\", url, packagename);\r\n          //                             // moduleexport.default = exportmodule[2];\r\n          //                             const exportdefault = exportmodule[2];\r\n          //                             // Object.defineProperty(moduleexport, \"default\", {\r\n          //                             //   enumerable: true,\r\n\r\n          //                             //   get() {\r\n          //                             //     return exportdefault;\r\n          //                             //   }\r\n          //                             // });\r\n          //                             定义default(moduleexport, exportdefault);\r\n          //                           } else {\r\n          //                             //   moduleexport[urlsymbol] = url;\r\n          //                             console.warn(加载的模块没有输出, url, packagename);\r\n          //                             // resolve(moduleexport);\r\n          //                             reject(\r\n          //                               Error(\r\n          //                                 加载的模块没有输出 +\r\n          //                                   \" \" +\r\n          //                                   packagename +\r\n          //                                   \" \" +\r\n          //                                   url\r\n          //                               )\r\n          //                             );\r\n          //                             return;\r\n          //                           }\r\n          //                         }\r\n          //                         // const moduleexport = {\r\n          //                         //   // [namesymbol]: packagename,\r\n          //                         //   default: undefined\r\n          //                         //   // [urlsymbol]: url,\r\n          //                         //   // [sourcesymbol]: modulesrcfun\r\n          //                         // };\r\n\r\n          //                         Object.defineProperties(moduleexport, {\r\n          //                           [namesymbol]: {\r\n          //                             value: packagename,\r\n          //                             // configurable: true,\r\n          //                             writable: true,\r\n          //                             enumerable: false\r\n          //                           },\r\n          //                           [urlsymbol]: {\r\n          //                             value: url,\r\n          //                             // configurable: true,\r\n          //                             writable: true,\r\n          //                             enumerable: false\r\n          //                           },\r\n          //                           [sourcesymbol]: {\r\n          //                             //   value: packagename,\r\n          //                             //   get() {\r\n          //                             //     return modulesrcfun;\r\n          //                             //   },\r\n          //                             value: modulesrcfun,\r\n          //                             //   configurable: true,\r\n          //                             //   writable: true,\r\n          //                             enumerable: false\r\n          //                           }\r\n          //                         });\r\n          //                         if (\r\n          //                           typeof Symbol !== \"undefined\" &&\r\n          //                           Symbol.toStringTag\r\n          //                         ) {\r\n          //                           Object.defineProperty(\r\n          //                             moduleexport,\r\n          //                             Symbol.toStringTag,\r\n          //                             {\r\n          //                               //   enumerable:t,\r\n          //                               value: \"Module\"\r\n          //                             }\r\n          //                           );\r\n          //                         }\r\n\r\n          //                         if (typeof moduleexport.default !== \"undefined\") {\r\n          //                           if (typeof packagename !== \"undefined\") {\r\n          //                             // moduleexport[namesymbol] = packagename;\r\n          //                             IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][\r\n          //                               packagename\r\n          //                             ] = moduleexport;\r\n          //                           }\r\n          //                           // else {\r\n          //                           //   packagename = url;\r\n          //                           //   IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][\r\n          //                           //     packagename\r\n          //                           //   ] = moduleexport;\r\n          //                           // }\r\n          //                         }\r\n          //                         // moduleexport[urlsymbol] = url;\r\n\r\n          //                         /*\r\n          //                         if (typeof moduleexport.default !== \"undefined\") {\r\n          //                           // if (typeof moduleexport[namesymbol] !== \"undefined\") {\r\n          //                           // }\r\n          //                         }\r\n\r\n          //   */\r\n          //                         /*\r\n          //    else\r\n          //   {\r\n          //                           //   moduleexport[urlsymbol] = url;\r\n          //                           console.warn(加载的模块没有输出, packagename, url);\r\n          //                           // resolve(moduleexport);\r\n          //                           reject(Error(加载的模块没有输出 + packagename + url));\r\n          //                           return;\r\n          //                         }\r\n          //                         */\r\n\r\n          //                         /* 加载完成之后， IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][                            url]*/\r\n          //                         /* 复制一份 */\r\n          //                         IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url] =\r\n          //                           IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n          //                         // IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url][namesymbol] = url;\r\n          //                         !!moduleexport.default &&\r\n          //                           Object.keys(moduleexport.default)\r\n          //                             .filter(t => t !== \"default\")\r\n          //                             .forEach(key => {\r\n          //                               Object.defineProperty(moduleexport, key, {\r\n          //                                 enumerable: true,\r\n          //                                 get() {\r\n          //                                   return moduleexport.default[key];\r\n          //                                 }\r\n          //                               });\r\n          //                             });\r\n\r\n          //                         resolve(moduleexport);\r\n          //                         return;\r\n          //                       })(fetchpromisetext);\r\n          //                     } catch (e) {\r\n          //                       console.warn(e);\r\n          //                       reject(e);\r\n          //                       return;\r\n          //                     }\r\n          //                   } catch (e) {\r\n          //                     console.warn(e);\r\n          //                     reject(e);\r\n          //                     return;\r\n          //                   }\r\n          //                 })();\r\n          //               } catch (e) {\r\n          //                 console.warn(e);\r\n          //                 reject(e);\r\n          //                 return;\r\n          //               }\r\n          //             })();\r\n          //           }\r\n          //c);\r\n        }\r\n      })(url, packagename);\r\n    } else {\r\n      throw new TypeError(\r\n        // \"输入的类型错误,输入的类型必须是字符串或者数组或对象\"\r\n        输入的类型错误输入的类型必须是字符串或者数组或对象\r\n      );\r\n    }\r\n  }\r\n  IMPORTCJSAMDUMD.REQUIREPACKAGE = getmodule;\r\n  return IMPORTCJSAMDUMD;\r\n})();\r\n// eslint-disable-next-line no-undef\r\n/*   (typeof globalThis !== \"undefined\" ? globalThis : false) ||\r\n    (typeof window !== \"undefined\" ? window : false) ||\r\n    (typeof WorkerGlobalScope !== \"undefined\" ? WorkerGlobalScope : false) ||\r\n    // eslint-disable-next-line no-undef\r\n    this */\r\nexport default IMPORTCJSAMDUMD;\r\n"],"names":["dynamicimportshim","字符串不能为空","GLOBALPACKAGESTORE"],"mappings":"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"}