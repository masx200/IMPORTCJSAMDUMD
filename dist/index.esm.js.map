{"version":3,"file":"index.esm.js","sources":["../src/dynamicimportshim.js","../src/coreload.js","../src/IMPORTCJSAMDUMD.js"],"sourcesContent":["/* eslint-disable no-empty */\r\n\"use strict\";\r\nexport { createBlob };\r\nfunction createBlob(source) {\r\n  return URL.createObjectURL(\r\n    new Blob([source], { type: \"application/javascript\" })\r\n  );\r\n}\r\nlet dynamicimportshimfun = (() => {\r\n  \"use strict\";\r\n  const 参数必须为字符串 = \"参数必须为字符串\";\r\n  const 字符串不能为空 = \"字符串不能为空\";\r\n  let dynamicimportshim;\r\n  try {\r\n    dynamicimportshim = Function(\"u\", \"return import(u)\");\r\n  } catch (error) {\r\n    dynamicimportshim = async function(url) {\r\n      if (url === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      }\r\n      if (typeof url !== \"string\") {\r\n        throw new TypeError(参数必须为字符串);\r\n      }\r\n      url = new URL(url).href;\r\n      function getnewimportpromise() {\r\n        return new Promise((resolve, reject) => {\r\n          const s = document.createElement(\"script\");\r\n          function clearsideeffect() {\r\n            removescript(s);\r\n            removeerrorlisten(errorhandler);\r\n            URL.revokeObjectURL(s.src);\r\n          }\r\n          function removeerrorlisten(f) {\r\n            try {\r\n              window.removeEventListener(\"error\", f);\r\n            } catch (error) {}\r\n          }\r\n          function removescript(e) {\r\n            try {\r\n              document.head.removeChild(e);\r\n            } catch (error) {}\r\n          }\r\n          function errorhandler(e) {\r\n            console.warn(e.error);\r\n            reject(e.error);\r\n            clearsideeffect();\r\n          }\r\n          window.addEventListener(\"error\", errorhandler);\r\n          const topLevelBlobUrl = createBlob(\r\n            `import*as m from'${url}';\\nwindow[Symbol.for('${\"import-\" +\r\n              url}')]=m`\r\n          );\r\n          s.type = \"module\";\r\n          s.src = topLevelBlobUrl;\r\n          s.async = true;\r\n          s.onload = () => {\r\n            resolve(window[Symbol.for(\"import-\" + url)]);\r\n            Reflect.deleteProperty(window, Symbol.for(\"import-\" + url));\r\n            clearsideeffect();\r\n          };\r\n          s.onerror = () => {\r\n            reject(new Error(\"import load failed from network\" + url));\r\n            clearsideeffect();\r\n          };\r\n          document.head.appendChild(s);\r\n        });\r\n      }\r\n      return await getnewimportpromise();\r\n    };\r\n  }\r\n  return dynamicimportshim;\r\n})();\r\nexport default dynamicimportshimfun;\r\n","/* eslint-disable no-empty */\r\nconst GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nimport IMPORTCJSAMDUMD, {\r\n  定义default,\r\n  assertstring,\r\n  define,\r\n  myrequirefun\r\n} from \"./IMPORTCJSAMDUMD.js\";\r\nconst 字符串不能为空 = \"字符串不能为空\";\r\nconst 加载的模块没有输出 = \"加载的模块没有输出\";\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\");\r\nconst sourcesymbol = Symbol.for(\"source\");\r\nimport dynamicimportshim from \"./dynamicimportshim.js\";\r\nexport default (url, packagename) => {\r\n  return new Promise(主核心加载模块函数);\r\n  function 主核心加载模块函数(resolve, reject) {\r\n    return ((resolve, reject) => {\r\n      (async () => {\r\n        try {\r\n          await (async () => {\r\n            let fetchpromisetext;\r\n            try {\r\n              try {\r\n                fetchpromisetext = await fetch(url).then(response => {\r\n                  if (!response.ok) {\r\n                    throw new Error(\"fetch failed \" + url);\r\n                  }\r\n                  return response.text();\r\n                });\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n              try {\r\n                await (async scripttext => {\r\n                  let moduletype;\r\n                  const exports = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  const module = { exports: {} };\r\n                  define.exports = {};\r\n                  var modulesrcfun;\r\n                  const moduleexport = { default: undefined };\r\n                  try {\r\n                    (function(\r\n                      myrequirefun,\r\n                      define,\r\n                      module,\r\n                      exports,\r\n                      scripttext\r\n                    ) {\r\n                      const 模块加载函数 = new Function(\r\n                        \"require\",\r\n                        \"define\",\r\n                        \"module\",\r\n                        \"exports\",\r\n                        `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\n`\r\n                      );\r\n                      modulesrcfun = 模块加载函数.toString();\r\n                      return 模块加载函数.call(\r\n                        module.exports,\r\n                        urlorname => {\r\n                          assertstring(urlorname);\r\n                          urlorname = String(urlorname);\r\n                          if (urlorname === \"\") {\r\n                            throw new TypeError(字符串不能为空);\r\n                          }\r\n                          function getbaseurl(url) {\r\n                            var objurl = new URL(url);\r\n                            var a = objurl.pathname.split(\"/\");\r\n                            a[a.length - 1] = \"\";\r\n                            var path = objurl.origin + a.join(\"/\");\r\n                            return path;\r\n                          }\r\n                          function 格式化url(baseurl, urlorname) {\r\n                            if (\r\n                              String(urlorname).startsWith(\"./\") ||\r\n                              String(urlorname).startsWith(\"../\")\r\n                            ) {\r\n                              if (\r\n                                !(\r\n                                  String(urlorname).endsWith(\".js\") ||\r\n                                  urlorname.endsWith(\".mjs\") ||\r\n                                  urlorname.endsWith(\".json\") ||\r\n                                  urlorname.endsWith(\".css\") ||\r\n                                  urlorname.endsWith(\".html\")\r\n                                )\r\n                              ) {\r\n                                urlorname += \".js\";\r\n                              }\r\n                              urlorname = new URL(baseurl + urlorname).href;\r\n                            }\r\n                            return urlorname;\r\n                          }\r\n                          const baseurl = getbaseurl(url);\r\n                          urlorname = 格式化url(baseurl, urlorname);\r\n                          return myrequirefun(urlorname);\r\n                        },\r\n                        define,\r\n                        module,\r\n                        exports.exports\r\n                      );\r\n                    })(myrequirefun, define, module, exports, scripttext);\r\n                    const exportmodule = [\r\n                      exports.exports ? exports.exports : {},\r\n                      module.exports ? module.exports : {},\r\n                      define.exports ? define.exports : {}\r\n                    ];\r\n                    处理非es模块(moduleexport, exportmodule);\r\n                    moduletype = \"cjs\";\r\n                  } catch (e) {\r\n                    console.warn(e);\r\n                    try {\r\n                      moduleexport.default = JSON.parse(scripttext);\r\n                      console.log(\"检测到json模块 \" + url);\r\n                      modulesrcfun = scripttext;\r\n                      moduletype = \"json\";\r\n                    } catch (error) {\r\n                      console.warn(error);\r\n                      if (e instanceof SyntaxError) {\r\n                        const topLevelBlobUrl = url;\r\n                        modulesrcfun = scripttext;\r\n                        try {\r\n                          const exportdefault = await dynamicimportshim(\r\n                            topLevelBlobUrl\r\n                          );\r\n                          moduletype = \"esm\";\r\n                          Object.keys(exportdefault)\r\n                            .filter(t => t !== \"default\")\r\n                            .forEach(key => {\r\n                              Object.defineProperty(moduleexport, key, {\r\n                                enumerable: true,\r\n                                get() {\r\n                                  return exportdefault[key];\r\n                                }\r\n                              });\r\n                            });\r\n                          定义default(\r\n                            moduleexport,\r\n                            exportdefault.default\r\n                              ? exportdefault.default\r\n                              : exportdefault\r\n                          );\r\n                        } catch (e) {\r\n                          console.warn(e);\r\n                          reject(e);\r\n                          return;\r\n                        }\r\n                        if (typeof moduleexport.default === \"undefined\") {\r\n                          console.warn(加载的模块没有输出, packagename, url);\r\n                          reject(\r\n                            Error(\r\n                              加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                            )\r\n                          );\r\n                          return;\r\n                        }\r\n                      } else {\r\n                        console.warn(e);\r\n                        reject(e);\r\n                        return;\r\n                      }\r\n                    }\r\n                  }\r\n                  function 处理非es模块(moduleexport, exportmodule) {\r\n                    if (typeof exportmodule === \"undefined\") {\r\n                      exportmodule = [{}, {}, {}];\r\n                    }\r\n                    if (typeof define.exports === \"undefined\") {\r\n                      define.exports = {};\r\n                    }\r\n                    function 非空对象(o) {\r\n                      return (\r\n                        typeof o !== \"object\" ||\r\n                        Object.keys(o).length ||\r\n                        JSON.stringify(o) !== \"{}\"\r\n                      );\r\n                    }\r\n                    if (非空对象(exportmodule[0])) {\r\n                      const exportdefault = exportmodule[0];\r\n                      定义default(moduleexport, exportdefault);\r\n                    } else if (非空对象(exportmodule[1])) {\r\n                      const exportdefault = exportmodule[1];\r\n                      定义default(moduleexport, exportdefault);\r\n                    } else if (非空对象(exportmodule[2])) {\r\n                      const exportdefault = exportmodule[2];\r\n                      定义default(moduleexport, exportdefault);\r\n                    } else {\r\n                      console.warn(加载的模块没有输出, url, packagename);\r\n                      reject(\r\n                        Error(\r\n                          加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                        )\r\n                      );\r\n                      return;\r\n                    }\r\n                  }\r\n                  Object.defineProperties(moduleexport, {\r\n                    [namesymbol]: {\r\n                      value: packagename,\r\n                      writable: true,\r\n                      enumerable: false\r\n                    },\r\n                    [urlsymbol]: {\r\n                      value: url,\r\n                      enumerable: false\r\n                    },\r\n                    [sourcesymbol]: {\r\n                      value: modulesrcfun,\r\n                      enumerable: false\r\n                    },\r\n                    [Symbol.for(\"type\")]: {\r\n                      value: moduletype,\r\n                      enumerable: false\r\n                    }\r\n                  });\r\n                  if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\r\n                    Object.defineProperty(moduleexport, Symbol.toStringTag, {\r\n                      value: \"Module\"\r\n                    });\r\n                  }\r\n                  if (typeof moduleexport.default !== \"undefined\") {\r\n                    if (typeof packagename !== \"undefined\") {\r\n                      IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][\r\n                        packagename\r\n                      ] = moduleexport;\r\n                    }\r\n                  }\r\n                  IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url] =\r\n                    IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n                  !!moduleexport.default &&\r\n                    Object.keys(moduleexport.default)\r\n                      .filter(t => t !== \"default\")\r\n                      .forEach(key => {\r\n                        try {\r\n                          Object.defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return moduleexport.default[key];\r\n                            }\r\n                          });\r\n                        } catch (error) {}\r\n                      });\r\n                  resolve(moduleexport);\r\n                  return;\r\n                })(fetchpromisetext);\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              console.warn(e);\r\n              reject(e);\r\n              return;\r\n            }\r\n          })();\r\n        } catch (e) {\r\n          console.warn(e);\r\n          reject(e);\r\n          return;\r\n        }\r\n      })();\r\n    })(resolve, reject);\r\n  }\r\n};\r\n","class cantfindError extends Error {\r\n  constructor(message, urlorname) {\r\n    super(message);\r\n    this.urlorname = urlorname;\r\n  }\r\n}\r\nconst 传入的参数必须是个object = \"传入的参数必须是个object\";\r\nconst 模块仓库中没有找到 =\r\n  \"Cannot find module in packagestore, 模块仓库中没有找到, \";\r\nfunction newobjjson(obj) {\r\n  if (typeof obj !== \"object\") {\r\n    throw new TypeError(传入的参数必须是个object);\r\n  }\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\nasync function 同时发起多个(a) {\r\n  return await Promise.all(\r\n    Array.from(a).map(e => {\r\n      return IMPORTCJSAMDUMD(e[0], e[1]);\r\n    })\r\n  );\r\n}\r\nfunction isurl(url) {\r\n  var flag = false;\r\n  try {\r\n    if (url === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof url !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n    url = new URL(url).href;\r\n    flag = true;\r\n  } catch (error) {\r\n    flag = false;\r\n  }\r\n  return flag;\r\n}\r\nfunction isArray(a) {\r\n  return (\r\n    typeof a === \"object\" &&\r\n    Array.isArray(a) &&\r\n    Object.prototype.toString.call(a) === \"[object Array]\"\r\n  );\r\n}\r\nfunction getmodule(packagename) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n  if (findpackage) {\r\n    return new Proxy(findpackage, {\r\n      set() {\r\n        return false;\r\n      },\r\n      deleteProperty() {\r\n        return false;\r\n      }\r\n    });\r\n  } else {\r\n    throw new Error(模块仓库中没有找到 + packagename);\r\n  }\r\n}\r\nconst GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nfunction isplainobject(o) {\r\n  return (\r\n    typeof o === \"object\" &&\r\n    Object.prototype.toString.call(o) === \"[object Object]\" &&\r\n    o.__proto__ === Object.prototype\r\n  );\r\n}\r\nconst 参数必须为字符串 = \"参数必须为字符串\";\r\n(\"use strict\");\r\nconst 字符串不能为空 = \"字符串不能为空\";\r\nimport coreload from \"./coreload.js\";\r\nexport let myrequirefun = function requireinstead(packagename) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n  if (findpackage) {\r\n    return findpackage.default;\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n};\r\nexport { define };\r\ndefine.exports = {};\r\nfunction isFunction(it) {\r\n  const op = Object.prototype;\r\n  const ostring = op.toString;\r\n  return \"function\" === typeof it && ostring.call(it) === \"[object Function]\";\r\n}\r\nfunction define(name, deps, callback) {\r\n  \"use strict\";\r\n  define.exports = {};\r\n  define.amd = true;\r\n  const defineglobalDefQueue = [];\r\n  if (typeof name !== \"string\") {\r\n    callback = deps;\r\n    deps = name;\r\n    name = null;\r\n  }\r\n  if (!isArray(deps)) {\r\n    callback = deps;\r\n    deps = null;\r\n  }\r\n  if (!deps && isFunction(callback)) {\r\n    deps = [];\r\n  }\r\n  defineglobalDefQueue.push([name, deps, callback]);\r\n  const canshu = defineglobalDefQueue[0][1].map(e => myrequirefun(e));\r\n  define.exports = defineglobalDefQueue[0][2](...canshu);\r\n}\r\ndefine.amd = true;\r\nexport function assertstring(s) {\r\n  if (s === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof s !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  return true;\r\n}\r\nexport function 定义default(target, def) {\r\n  if (def[Symbol.toStringTag] === \"Module\" && def.default) {\r\n    def = def.default;\r\n  }\r\n  Object.defineProperty(target, \"default\", {\r\n    enumerable: true,\r\n    get() {\r\n      return def;\r\n    }\r\n  });\r\n}\r\nconst IMPORTCJSAMDUMD = (() => {\r\n  \"use strict\";\r\n  const 补充加载依赖的模块网址 = \"补充加载依赖的模块网址\";\r\n  const 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n    \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\n  const 非法字符串 = \"输入的类型错误,输入的字符串不能为空,url不能为undefined\";\r\n  const namesymbol = Symbol.for(\"name\");\r\n  const urlsymbol = Symbol.for(\"url\");\r\n  const IMPORTCJSAMDUMD = importcjsamdumd;\r\n  IMPORTCJSAMDUMD[GLOBALPACKAGESTORE] =\r\n    IMPORTCJSAMDUMD[GLOBALPACKAGESTORE] || {};\r\n  async function importcjsamdumd(...inarguments) {\r\n    return await oldimportcjsamdumd(...inarguments).catch(handleerror);\r\n    async function handleerror(e) {\r\n      console.warn(e);\r\n      if (e instanceof cantfindError && e.urlorname) {\r\n        if (isurl(e.urlorname)) {\r\n          console.log(补充加载依赖的模块网址, e.urlorname);\r\n          await importcjsamdumd(e.urlorname);\r\n          return await importcjsamdumd(...inarguments);\r\n        } else {\r\n          if (\r\n            isplainobject(inarguments[0]) &&\r\n            Reflect.has(inarguments[0], e.urlorname)\r\n          ) {\r\n            await oldimportcjsamdumd(...inarguments);\r\n            return await oldimportcjsamdumd(...inarguments);\r\n          } else {\r\n            throw e;\r\n          }\r\n        }\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n  async function oldimportcjsamdumd(url, packagename) {\r\n    \"use strict\";\r\n    if (isplainobject(url)) {\r\n      return await (async url => {\r\n        url = newobjjson(url);\r\n        const 输入参数array = Object.keys(url).map(key => {\r\n          const packageurl = url[key];\r\n          const packagenm = key;\r\n          return [packageurl, packagenm];\r\n        });\r\n        let suoyouimportpromise = [];\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n        }\r\n        let objecttoreturn = {};\r\n        suoyouimportpromise.forEach(m => {\r\n          objecttoreturn[m[namesymbol]] = m;\r\n        });\r\n        return objecttoreturn;\r\n      })(url);\r\n    } else if (\r\n      (isArray(url) && typeof url === \"object\") ||\r\n      typeof packagename === \"object\"\r\n    ) {\r\n      return await (async (...args) => {\r\n        async function 同时发起多个字符串(a) {\r\n          return await Promise.all(\r\n            Array.from(a).map(e => {\r\n              return IMPORTCJSAMDUMD(e);\r\n            })\r\n          );\r\n        }\r\n        let suoyouimportpromise = [];\r\n        const 传入参数arr = JSON.parse(JSON.stringify(Array(...args).flat()));\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n        }\r\n        return suoyouimportpromise;\r\n      })(...arguments);\r\n    } else if (typeof url === \"string\" || typeof packagename === \"string\") {\r\n      assertstring(url);\r\n      return await (async (url, packagename) => {\r\n        if (typeof url === \"undefined\" || url === \"\" || packagename === \"\") {\r\n          throw new TypeError(非法字符串);\r\n        }\r\n        if (typeof packagename === \"undefined\") {\r\n          packagename = new URL(url).href;\r\n        }\r\n        url = new URL(url).href;\r\n        if (\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename] !==\r\n            \"undefined\" &&\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename].default !==\r\n            \"undefined\" &&\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename][urlsymbol] === url\r\n        ) {\r\n          return getmodule(packagename);\r\n        } else if (\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url] !== \"undefined\" &&\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url].default !==\r\n            \"undefined\" &&\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url][urlsymbol] === url\r\n        ) {\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename] =\r\n            IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url];\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename][\r\n            namesymbol\r\n          ] = packagename;\r\n          return getmodule(url);\r\n        } else {\r\n          return await coreload(url, packagename);\r\n        }\r\n      })(url, packagename);\r\n    } else {\r\n      throw new TypeError(输入的类型错误输入的类型必须是字符串或者数组或对象);\r\n    }\r\n  }\r\n  IMPORTCJSAMDUMD.REQUIREPACKAGE = getmodule;\r\n  return IMPORTCJSAMDUMD;\r\n})();\r\nexport default IMPORTCJSAMDUMD;\r\n"],"names":["createBlob","source","URL","createObjectURL","Blob","type","dynamicimportshimfun","参数必须为字符串","字符串不能为空","dynamicimportshim","Function","error","async","url","TypeError","href","getnewimportpromise","Promise","resolve","reject","s","document","createElement","clearsideeffect","removescript","removeerrorlisten","errorhandler","revokeObjectURL","src","f","window","removeEventListener","e","head","removeChild","console","warn","addEventListener","topLevelBlobUrl","onload","Symbol","for","Reflect","deleteProperty","onerror","Error","appendChild","GLOBALPACKAGESTORE","加载的模块没有输出","namesymbol","urlsymbol","sourcesymbol","packagename","主核心加载模块函数","fetchpromisetext","fetch","then","response","ok","text","moduletype","exports","[object Object]","toStringTag","module","define","modulesrcfun","moduleexport","default","undefined","myrequirefun","scripttext","模块加载函数","toString","call","urlorname","assertstring","String","getbaseurl","objurl","a","pathname","split","length","path","origin","join","格式化url","baseurl","startsWith","endsWith","exportmodule","处理非es模块","JSON","parse","log","SyntaxError","exportdefault","Object","keys","filter","t","forEach","key","defineProperty","enumerable","定义default","非空对象","o","stringify","defineProperties","value","writable","IMPORTCJSAMDUMD","cantfindError","message","super","this","传入的参数必须是个object","模块仓库中没有找到","newobjjson","obj","同时发起多个","all","Array","from","map","isurl","flag","isArray","prototype","getmodule","findpackage","Proxy","isplainobject","__proto__","requireinstead","isFunction","it","op","ostring","name","deps","callback","amd","defineglobalDefQueue","push","canshu","target","def","补充加载依赖的模块网址","输入的类型错误输入的类型必须是字符串或者数组或对象","非法字符串","importcjsamdumd","inarguments","oldimportcjsamdumd","catch","handleerror","has","输入参数array","packageurl","packagenm","suoyouimportpromise","objecttoreturn","m","args","同时发起多个字符串","传入参数arr","flat","arguments","coreload","REQUIREPACKAGE"],"mappings":"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"}