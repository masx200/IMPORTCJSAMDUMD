{"version":3,"sources":["IMPORTCJSAMDUMD.js"],"names":["global","require","packagename","undefined","findpackage","IMPORTCJSAMDUMD","GLOBALPACKAGESTORE","console","log","default","Error","importcjsamdumd","url","Array","arguments","define","name","deps","callback","amd","globalDefQueue","op","context","it","ostring","Object","prototype","toString","call","isFunction","length","replace","commentRegExp","commentReplace","cjsRequireRegExp","match","dep","push","concat","defQueue","defQueueMap","canshu","map","e","exports","URL","href","Promise","resolve","reject","fetchpromise","fetch","then","response","ok","text","error","scripttext","exportmodule","module","Function","moduleexport","keys","JSON","stringify","warn","Symbol","toStringTag","defineProperty","value","已经加载过的模块数量","canshuinput","inputpackagename","inputurl","all","inputarray","forEach","suoyouimportpromise","REQUIREPACKAGE","window","WorkerGlobalScope"],"mappings":"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","file":"IMPORTCJSAMDUMD.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\r\n// import sha256 from \"./sha256.min\";\r\n/*\r\n更新:\r\n1.可以在一句IMPORTCJSAMDUMD语句中,传入多个模块的url的name了,返回一个数组,相当于promise.all的语法糖,\r\n2.可以尝试乱序加载有依赖更新的模块包了,加载之前,先把模块的url和name信息存入模块配置列表,如果依赖的包还没有加载完成,则多次尝试加载,最终可以加载完成\r\n\r\n甚至是这么变态的依赖关系,这么乱序加载,都可以!\r\n\r\nIMPORTCJSAMDUMD([\"https://cdn.staticfile.org/twitter-bootstrap/4.3.1/js/bootstrap.min.js\",\"bootstrap\"],[\"https://cdn.staticfile.org/jquery/3.4.1/jquery.min.js\",\"jquery\"],[\"https://cdn.staticfile.org/mui/3.7.1/js/mui.min.js\",\"mui\"],[\"https://cdn.staticfile.org/clipboard.js/2.0.4/clipboard.min.js\",\"clipboard\"],[\"https://cdn.staticfile.org/popper.js/1.15.0/umd/popper.min.js\",\"popper.js\"],[\"https://cdn.staticfile.org/react-dom/16.8.6/umd/react-dom.production.min.js\",\"react-dom\"],[\"https://cdn.staticfile.org/react-router-dom/5.0.0/react-router-dom.min.js\",\"react-router-dom\"],[\"https://cdn.staticfile.org/react/16.9.0-alpha.0/umd/react.production.min.js\",\"react\"]).then(console.log).catch(console.warn)\r\n\r\n\r\n\r\n */\r\n//由于使用了async函数所以需要regeneratorRuntime//\r\n// import regeneratorRuntime from \"regenerator-runtime\";\r\n\r\n//包装cjs和amd和umd模块为异步加载promise方法\r\n/**\r\n *动态异步加载commonjs和umd和amd模块\r\n *\r\n *动态异步加载 commonjs 和 umd 和 amd 模块 ,包装 cjs 和 amd 和 umd 模块为异步加载 promise 方法,使用 fetch 方法来获取指定的模块包源代码 ， 可以把模块放入模块仓库中，\r\n\r\n并且解决了包之间的依赖关系，如果依赖包当中的 require 函数需要，则在模块仓库中引入需要的模块包\r\n\r\n定义了模块包的 define 方法，require 方法，module.exports 对象和 exports 对象\r\n\r\n加载有依赖关系的模块包的方法\r\n\r\n(async () => {\r\n\r\n  const [jquery, popper] = await Promise.all([\r\n\r\n    IMPORTCJSAMDUMD(\"https://cdn.bootcss.com/jquery/3.4.1/jquery.js\", \"jquery\"),\r\n\r\n    IMPORTCJSAMDUMD(\r\n\r\n      \"https://cdn.staticfile.org/popper.js/1.15.0/umd/popper.min.js\",\r\n\r\n      \"popper.js\"\r\n\r\n    )\r\n\r\n  ]);\r\n\r\n  const bootstrap = await IMPORTCJSAMDUMD(\r\n\r\n    \"https://cdn.staticfile.org/twitter-bootstrap/4.3.1/js/bootstrap.js\",\r\n\r\n    \"bootstrap\"\r\n\r\n  );\r\n\r\n  console.log(jquery, popper, bootstrap);\r\n\r\n})();\r\n\r\n如果要动态异步加载 es6 模块,加载 es6 模块的方法:\r\n\r\nimport(url).then(console.log);\r\n\r\n动态异步加载 cjs,amd,umd 模块用法:\r\n\r\n主函数,IMPORTCJSAMDUMD,返回一个 promise 对象,参数 url 和 name 都是字符串，把通过 url 加载的依赖包放入模块仓库中，命名为 name，promise 之后的.then 函数的回调函数的参数是 module，module.default 的模块的默认输出\r\n\r\nIMPORTCJSAMDUMD(url, name);\r\n\r\nIMPORTCJSAMDUMD(url).then(m => console.log(m.default));\r\n\r\n次对象,IMPORTCJSAMDUMD.GLOBALPACKAGESTORE,是所有加载过的模块的存储仓库对象\r\n\r\nIMPORTCJSAMDUMD.GLOBALPACKAGESTORE[name];\r\n\r\n次函数,IMPORTCJSAMDUMD.REQUIREPACKAGE,返回模块仓库中的模块,参数 name 是字符串\r\n\r\nIMPORTCJSAMDUMD.REQUIREPACKAGE(name);\r\n\r\nIMPORTCJSAMDUMD.GLOBALPACKAGESTORE[name]和 IMPORTCJSAMDUMD.REQUIREPACKAGE(name)是相等的\r\n\r\n示例\r\n *\r\n * 用法:\r\n *\r\n * IMPORTCJSAMDUMD('https://cdn.staticfile.org/jquery/3.4.1/jquery.js').then((m)=>{console.log(m.default.fn.jquery)})\r\n *\r\n * var jquery=IMPORTCJSAMDUMD.GLOBALPACKAGESTORE.jquery\r\n *\r\n *  Promise.all([IMPORTCJSAMDUMD(\"https://cdn.bootcss.com/jquery/3.4.1/jquery.js\"),IMPORTCJSAMDUMD(\"https://cdn.staticfile.org/react/16.9.0-alpha.0/umd/react.production.min.js\"),IMPORTCJSAMDUMD(\"https://cdn.staticfile.org/vue/2.6.10/vue.min.js\")]).then(console.log)\r\n *\r\n * IMPORTCJSAMDUMD(\"https://cdn.bootcss.com/Chart.js/2.8.0-rc.1/Chart.bundle.js\").then(console.log)\r\n *\r\n *\r\n *\r\n * IMPORTCJSAMDUMD(\"https://cdn.bootcss.com/underscore.js/1.9.1/underscore-min.js\",\"underscore\").then(console.log).catch(console.error)\r\n *\r\n *\r\n * IMPORTCJSAMDUMD(\"https://cdn.bootcss.com/jquery/3.4.1/jquery.js\",).then(console.log).catch(console.error)\r\n *\r\n *var jquery= IMPORTCJSAMDUMD.REQUIREPACKAGE(\"jquery\")\r\n *\r\n *\r\n * var underscore=IMPORTCJSAMDUMD.REQUIREPACKAGE(\"underscore\")\r\n *\r\n * Promise.all([IMPORTCJSAMDUMD(\"https://cdn.bootcss.com/jquery/3.4.1/jquery.js\",\"jquery\"),IMPORTCJSAMDUMD(\"https://cdn.staticfile.org/react/16.9.0-alpha.0/umd/react.production.min.js\",\"react\"),IMPORTCJSAMDUMD(\"https://cdn.staticfile.org/vue/2.6.10/vue.min.js\",\"vue\")]).then(console.log)\r\n *\r\n *\r\n * 如果要加载es6模块\r\n * import(\"https://cdn.staticfile.org/vue/2.6.10/vue.esm.browser.min.js\").then(console.log)\r\n *\r\n *  */\r\n//就像es6模块的import函数返回promise对象一样\r\n// window . importcjsamdumd= importcjsamdumd\r\n(global => {\r\n  \"use strict\";\r\n  if (\"object\" == typeof exports && \"undefined\" != typeof module) {\r\n    module.exports = importcjsamdumd;\r\n  }\r\n  //   try {\r\n  //     console.log(global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE);\r\n  //   } catch (error) {}\r\n\r\n  global.IMPORTCJSAMDUMD = global.IMPORTCJSAMDUMD || importcjsamdumd;\r\n  global.IMPORTCJSAMDUMD.REQUIREPACKAGE =\r\n    global.IMPORTCJSAMDUMD.REQUIREPACKAGE || require;\r\n  global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE =\r\n    global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE || {};\r\n  //   global.IMPORTCJSAMDUMD.PACKAGECONFIGLIST =\r\n  //     global.IMPORTCJSAMDUMD.PACKAGECONFIGLIST || {};\r\n\r\n  // console.log(eval(`(async function(){return await})`))\r\n  /* 为了不要把全局的模块仓库覆盖 */\r\n  //   try {\r\n  //     console.log(global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE);\r\n  //   } catch (error) {}\r\n  //   if (typeof global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE.sha256 === \"undefined\") {\r\n  //     importcjsamdumd(\r\n  //       \"https://cdn.staticfile.org/js-sha256/0.9.0/sha256.min.js\",\r\n  //       \"sha256\"\r\n  //     );\r\n  //   }\r\n  // reqiregenerator=require()\r\n  function require(packagename = undefined) {\r\n    var findpackage = global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[packagename];\r\n    if (findpackage) {\r\n      console.log(\"在模块仓库中找到了\", packagename);\r\n      return findpackage.default;\r\n    }\r\n    // else if (global.IMPORTCJSAMDUMD.PACKAGECONFIGLIST[packagename]) {\r\n    //   //  sleep(50)\r\n    //   //   console.warn(\"模块仓库中没有找到,但是模块列表中存在\" + packagename);\r\n    // //   throw new Error(\"模块仓库中没有找到,但是模块列表中存在  \" + packagename);\r\n    //   /*  //   console.log(global.IMPORTCJSAMDUMD.PACKAGECONFIGLIST[packagename].url);\r\n    // //   var urltoload = global.IMPORTCJSAMDUMD.PACKAGECONFIGLIST[packagename].url;\r\n    // //   var stingtoeval = `(async ()=>{moduletoload=(await window.IMPORTCJSAMDUMD('${urltoload}'))})()`;\r\n    // //   //   console.log(stingtoeval);\r\n    // //   var moduletoload;\r\n    // //   eval(stingtoeval);\r\n    // //   //   (async () => {\r\n    // //   //     moduletoload = await window.IMPORTCJSAMDUMD(urltoload);\r\n    // //   //   })()\r\n    // //   //   yield\r\n    // //   /* 如果不存在则多次尝试 */\r\n    //   //   try {\r\n    //   //     return moduletoload.default;\r\n    //   //   } catch (error) {\r\n    //   //     return moduletoload.default;\r\n    //   //   } finally {\r\n    //   //     return moduletoload.default;\r\n    //   //   }\r\n    //   //   // return moduletoload.default;\r\n    //   //   //   throw new Error(\"模块仓库中没有找到,但是模块列表中存在\");\r\n    //   //   //   return  require(packagename) */\r\n    // }\r\n    else {\r\n      throw new Error(\r\n        \"Cannot find module in packagestore, 模块仓库中没有找到,  \" +\r\n          packagename\r\n      );\r\n    }\r\n  }\r\n  /* 同步等待函数 */\r\n  //导致浏览器卡死\r\n  // function sleep(ms) {\r\n  //     var start = Date.now();\r\n  //     while ((Date.now() - start) < ms) {\r\n  //     }\r\n  //   }\r\n\r\n  //   }\r\n\r\n  function importcjsamdumd(url, packagename = undefined) {\r\n    console.log(\"输入的参数为\", Array(...arguments));\r\n    if (typeof url === \"object\" || typeof packagename === \"object\") {\r\n      var 已经加载过的模块数量 = 0;\r\n      for (var canshuinput of Array(...arguments)) {\r\n        var inputpackagename = canshuinput[1];\r\n        var inputurl = canshuinput[0];\r\n\r\n        if (\r\n          typeof global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[inputpackagename] !==\r\n            \"undefined\" &&\r\n          typeof global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[inputpackagename]\r\n            .default !== \"undefined\" &&\r\n          global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[inputpackagename].url ===\r\n            inputurl\r\n        ) {\r\n          console.log(\r\n            \"模块仓库中已经存在模块,不会重新加载\",\r\n            inputurl,\r\n            inputpackagename\r\n          );\r\n          已经加载过的模块数量++;\r\n        }\r\n      }\r\n      if (已经加载过的模块数量 >= Array(...arguments).length) {\r\n        console.log(\"输入的所有模块都已经加载过了,不会再次加载\");\r\n        return Promise.all(\r\n          Array(...arguments).map(inputarray => {\r\n            var packagename = inputarray[1];\r\n            return new Promise(resolve => {\r\n              resolve(\r\n                /* 返回的是模块不是模块的默认输出 */\r\n\r\n                global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[packagename]\r\n              );\r\n            });\r\n          })\r\n        );\r\n      }\r\n      /*新的写法,同时加载多个 ([\"\",\"\"],[\"\",\"\"]) */\r\n      //   console.log(\r\n      //     Array(...arguments).map(e => {\r\n      //       e[0]+ e[1];\r\n      //     })\r\n      //   );\r\n      /* IMPORTCJSAMDUMD([\"https://cdn.staticfile.org/jquery/3.4.1/jquery.min.js\",\"jquery\"],[\"https://cdn.staticfile.org/mui/3.7.1/js/mui.min.js\",\"mui\"],[\"https://cdn.staticfile.org/clipboard.js/2.0.4/clipboard.min.js\",\"clipboard\"]) */\r\n      /* 先把传入的模块列表信息放到 IMPORTCJSAMDUMD.PACKAGECONFIGLIST中*/\r\n      Array(...arguments).forEach(e => {\r\n        var url = e[0],\r\n          packagename = e[1];\r\n        if (typeof url === \"undefined\" || url === \"\" || packagename === \"\") {\r\n          throw new Error(\r\n            \"输入的类型错误,输入的字符串不能为空,url不能为undefined\"\r\n          );\r\n        }\r\n        if (typeof packagename === \"undefined\") {\r\n          packagename = new URL(url).href;\r\n        }\r\n        // global.IMPORTCJSAMDUMD.PACKAGECONFIGLIST[packagename] = {\r\n        //   name: packagename,\r\n        // //   sha256: sha256(url),\r\n        //   url: url\r\n        // };\r\n      });\r\n\r\n      /* 如果不存在则多次尝试 */\r\n      var suoyouimportpromise;\r\n      try {\r\n        // console.log(\"第一次尝试批量加载模块\");\r\n        suoyouimportpromise = Promise.all(\r\n          Array(...arguments).map(e => {\r\n            //   try {\r\n            return IMPORTCJSAMDUMD(e[0], e[1]);\r\n            //   } catch (error) {\r\n            //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n            //   }finally{\r\n            //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n            //   }\r\n          })\r\n        );\r\n        // return suoyouimportpromise;\r\n        /* 这里return无效,因为有finally */\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        suoyouimportpromise = Promise.all(\r\n          Array(...arguments).map(e => {\r\n            //   try {\r\n            return IMPORTCJSAMDUMD(e[0], e[1]);\r\n            //   } catch (error) {\r\n            //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n            //   }finally{\r\n            //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n            //   }\r\n          })\r\n        );\r\n        return suoyouimportpromise;\r\n      }\r\n\r\n      /* 尝试第二次 */\r\n      //   try {\r\n      //     // console.log(\"第一次尝试批量加载模块\");\r\n      //     suoyouimportpromise = Promise.all(\r\n      //       Array(...arguments).map(e => {\r\n      //         //   try {\r\n      //         return IMPORTCJSAMDUMD(e[0], e[1]);\r\n      //         //   } catch (error) {\r\n      //         //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n      //         //   }finally{\r\n      //         //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n      //         //   }\r\n      //       })\r\n      //     );\r\n      //     return suoyouimportpromise;\r\n      //   } catch (error) {\r\n      //     console.error(error);\r\n      //   }\r\n      // suoyouimportpromise = Promise.all(\r\n      //   Array(...arguments).map(e => {\r\n      //     // try {\r\n      //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n      //     // } catch (error) {\r\n      //     //   return IMPORTCJSAMDUMD(e[0], e[1]);\r\n      //     // }finally{\r\n      //     //   return IMPORTCJSAMDUMD(e[0], e[1]);\r\n      //     // }\r\n      //   })\r\n      // );\r\n      // return suoyouimportpromise;\r\n      // console.log(\"第二次尝试批量加载模块\");\r\n      // suoyouimportpromise = Promise.all(\r\n      //   Array(...arguments).map(e => {\r\n      //     return IMPORTCJSAMDUMD(e[0], e[1]);\r\n      //   })\r\n      // );\r\n      // return suoyouimportpromise;\r\n      //   }\r\n      //   finally {\r\n      //     // console.log(\"最后一次尝试批量加载模块\");\r\n      //     suoyouimportpromise = Promise.all(\r\n      //       Array(...arguments).map(e => {\r\n      //         return IMPORTCJSAMDUMD(e[0], e[1]);\r\n      //       })\r\n      //     );\r\n      //     return suoyouimportpromise;\r\n      //   }\r\n\r\n      //   suoyouimportpromise.then(console.log)\r\n      //   console.log(\"suoyouimportpromise\",suoyouimportpromise);\r\n    } else if (typeof url === \"string\" || typeof packagename === \"string\") {\r\n      /* 输入空字符串报错 */\r\n      if (typeof url === \"undefined\" || url === \"\" || packagename === \"\") {\r\n        throw new Error(\r\n          \"输入的类型错误,输入的字符串不能为空,url不能为undefined\"\r\n        );\r\n      }\r\n      //   window.GLOBALPACKAGESTORE = window.GLOBALPACKAGESTORE || [];\r\n      //   if (typeof packagename === \"undefined\") {\r\n      //     packagename = sha256(url);\r\n      //   }\r\n      if (typeof packagename === \"undefined\") {\r\n        packagename = new URL(url).href;\r\n      }\r\n      url = new URL(url);\r\n      url = url.href;\r\n\r\n      //   global.IMPORTCJSAMDUMD.PACKAGECONFIGLIST[packagename] = {\r\n      //     name: packagename,\r\n      //     // sha256: sha256(url),\r\n      //     url: url\r\n      //   };\r\n      //   console.log(\r\n      //     \" IMPORTCJSAMDUMD.PACKAGECONFIGLIST\",\r\n      //     global.IMPORTCJSAMDUMD.PACKAGECONFIGLIST\r\n      //   );\r\n      function define(name, deps, callback) {\r\n        define.amd = true;\r\n        define.globalDefQueue = [];\r\n        //   window.globalDefQueue = globalDefQueue;\r\n        var op = Object.prototype;\r\n        var ostring = op.toString;\r\n        var useInteractive = false;\r\n        function isArray(it) {\r\n          return ostring.call(it) === \"[object Array]\";\r\n        }\r\n        function isFunction(it) {\r\n          return ostring.call(it) === \"[object Function]\";\r\n        }\r\n        var node, context;\r\n\r\n        //Allow for anonymous modules\r\n        if (typeof name !== \"string\") {\r\n          //Adjust args appropriately\r\n          callback = deps;\r\n          deps = name;\r\n          name = null;\r\n        }\r\n\r\n        //This module may not have dependencies\r\n        if (!isArray(deps)) {\r\n          callback = deps;\r\n          deps = null;\r\n        }\r\n\r\n        //If no name, and callback is a function, then figure out if it a\r\n        //CommonJS thing with dependencies.\r\n        if (!deps && isFunction(callback)) {\r\n          deps = [];\r\n          //Remove comments from the callback string,\r\n          //look for require calls, and pull them into the dependencies,\r\n          //but only if there are function args.\r\n          if (callback.length) {\r\n            callback\r\n              .toString()\r\n              .replace(commentRegExp, commentReplace)\r\n              .replace(cjsRequireRegExp, function(match, dep) {\r\n                deps.push(dep);\r\n              });\r\n\r\n            //May be a CommonJS thing even without require calls, but still\r\n            //could use exports, and module. Avoid doing exports and module\r\n            //work though if it just needs require.\r\n            //REQUIRES the function to expect the CommonJS variables in the\r\n            //order listed below.\r\n            deps = (callback.length === 1\r\n              ? [\"require\"]\r\n              : [\"require\", \"exports\", \"module\"]\r\n            ).concat(deps);\r\n          }\r\n        }\r\n\r\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\r\n        //work.\r\n        if (useInteractive) {\r\n          node = currentlyAddingScript || getInteractiveScript();\r\n          if (node) {\r\n            if (!name) {\r\n              name = node.getAttribute(\"data-requiremodule\");\r\n            }\r\n            context = contexts[node.getAttribute(\"data-requirecontext\")];\r\n          }\r\n        }\r\n\r\n        //Always save off evaluating the def call until the script onload handler.\r\n        //This allows multiple modules to be in a file without prematurely\r\n        //tracing dependencies, and allows for anonymous module support,\r\n        //where the module name is not known until the script onload event\r\n        //occurs. If no context, use the global queue, and get it processed\r\n        //in the onscript load callback.\r\n        if (context) {\r\n          context.defQueue.push([name, deps, callback]);\r\n          context.defQueueMap[name] = true;\r\n        } else {\r\n          define.globalDefQueue.push([name, deps, callback]);\r\n        }\r\n        console.log(\"检测到amd模块\", define.globalDefQueue[0]);\r\n        if (\r\n          typeof define.globalDefQueue[0][0] === \"string\" &&\r\n          typeof packagename === \"undefined\"\r\n        ) {\r\n          packagename = define.globalDefQueue[0][0];\r\n        }\r\n        var canshu = define.globalDefQueue[0][1].map(e => require(e));\r\n        //   console.log(canshu);\r\n        define.exports = define.globalDefQueue[0][2](...canshu);\r\n      }\r\n\r\n      define.amd = true;\r\n      /* 如果模块仓库中存在所需要的模块则不会重新加载,减少性能消耗 */\r\n\r\n      if (\r\n        typeof global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[packagename] !==\r\n          \"undefined\" &&\r\n        typeof global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[packagename]\r\n          .default !== \"undefined\" &&\r\n        global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[packagename].url === url\r\n      ) {\r\n        console.log(\"模块仓库中已经存在模块,不会重新加载\", packagename);\r\n\r\n        return new Promise(resolve => {\r\n          resolve(\r\n            /* 返回的是模块不是模块的默认输出 */\r\n\r\n            global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[packagename]\r\n          );\r\n        });\r\n      } else {\r\n        // importcjsamdumd.packagename = packagename;\r\n\r\n        return new Promise((resolve, reject) => {\r\n          try {\r\n            (() => {\r\n              //   (async () => {\r\n              var fetchpromise;\r\n              try {\r\n                try {\r\n                  fetchpromise = fetch(url).then(response => {\r\n                    if (!response.ok) {\r\n                      throw new Error(\"fetch failed \" + url);\r\n                    }\r\n\r\n                    return response.text();\r\n                  });\r\n                } catch (e) {\r\n                  console.error(e);\r\n                  reject(e);\r\n                  return;\r\n                }\r\n\r\n                //   .catch(e => {\r\n                //     console.error(e);\r\n                //     reject(e);\r\n                //     return;\r\n                //   })\r\n                try {\r\n                  fetchpromise.then(scripttext => {\r\n                    var exports = {};\r\n                    var module = {\r\n                      exports: {}\r\n                    };\r\n                    define.exports = {};\r\n                    // var globalDefQueue = [];\r\n                    var exportmodule = [{}, {}, {}];\r\n                    try {\r\n                      exportmodule = (function(\r\n                        require,\r\n                        define,\r\n                        module,\r\n                        exports,\r\n                        scripttext\r\n                      ) {\r\n                        //   console.log(\r\n                        //     Function(\r\n                        //         \"require\",\r\n                        //         \"define\",\r\n                        //         \"module\",\r\n                        //         \"exports\",\r\n                        //         scripttext + `; return [exports, module.exports];`\r\n                        //       ).toString()\r\n                        //   );\r\n                        //   eval(scripttext);\r\n                        /* 有的网站安全考虑不能运行eval */\r\n                        return Function(\r\n                          \"require\",\r\n                          \"define\",\r\n                          \"module\",\r\n                          \"exports\",\r\n\r\n                          `\\/\\* ${url} \\*\\/;\r\n                          \\n\r\n                          ${scripttext};\r\n                          \\n\r\n                          \\/\\* ${url} \\*\\/;\r\n                          \r\n                          return [exports, module.exports, define.exports]; `\r\n                          /* 这里必须换行因为如果遇到最后一行是注释的话,这句return也被注释了 */\r\n                          //  +\r\n                          // `;\\n return [exports, module.exports, define.exports]; \\n` +\r\n                          // ` \\/\\* ${url} \\*\\/`\r\n                        )(require, define, module, exports);\r\n                        // for (let __key__ in module.exports ){\r\n                        //     module[__key__]=module.exports[__key__]\r\n                        // }\r\n\r\n                        //   var moduleexport = {};\r\n                        //   console.log(\"exports\", exports, \"module.exports\", module.exports);\r\n                        //   //   console.log()\r\n                        //   if (Object.keys(exports).length) {\r\n                        //     moduleexport.default = exports;\r\n                        //   } else if (Object.keys(module.exports).length) {\r\n                        //     moduleexport.default = module.exports;\r\n                        //   }\r\n\r\n                        //   console.log(\r\n                        //     \"exports\",\r\n                        //     exports,\r\n                        //     \"module.exports\",\r\n                        //     module.exports,\r\n                        //     // \"globalDefQueue[2]\",\r\n                        //     // globalDefQueue[2]\r\n                        //   );\r\n\r\n                        //   return [exports, module.exports];\r\n                      })(require, define, module, exports, scripttext);\r\n                    } catch (e) {\r\n                      console.error(e);\r\n                      reject(e);\r\n                      return;\r\n                    }\r\n\r\n                    // console.log(define.exports);\r\n                    // console.log(exportmodule);\r\n                    // exports = exportmodule[0];\r\n                    // module.exports = exportmodule[1];\r\n                    var moduleexport = {\r\n                      name: undefined,\r\n                      default: undefined,\r\n                      url: undefined\r\n                    };\r\n                    // console.log(\r\n                    //   \"exports\",\r\n                    //   exports,\r\n                    //   \"module.exports\",\r\n                    //   module.exports,\r\n                    // //   \"globalDefQueue[2]\",\r\n                    // //   globalDefQueue[2]\r\n                    // );\r\n                    /* console.log(exportmodule[0], exportmodule[1], define.exports);\r\nconsole.log(\r\n  Object.keys(exportmodule[0]).length,\r\n  Object.keys(exportmodule[1]).length,\r\n  Object.keys(define.exports).length\r\n); */\r\n                    //   if(){\r\n                    //   console.log(typeof exportmodule);\r\n                    //   }\r\n                    if (typeof exportmodule === \"undefined\") {\r\n                      var exportmodule = [{}, {}, {}];\r\n                    }\r\n                    if (typeof define.exports === \"undefined\") {\r\n                      define.exports = {};\r\n                    }\r\n                    console.log(\"模块的输出为\", [\r\n                      exportmodule[0],\r\n                      exportmodule[1],\r\n                      // define.exports\r\n                      exportmodule[2]\r\n                    ]);\r\n                    if (\r\n                      typeof exportmodule[0] !== \"object\" ||\r\n                      Object.keys(exportmodule[0]).length ||\r\n                      JSON.stringify(exportmodule[0]) !== \"{}\"\r\n                    ) {\r\n                      console.log(\"检测到umd模块\", url, packagename);\r\n                      moduleexport.default = exportmodule[0];\r\n                    } else if (\r\n                      typeof exportmodule[1] !== \"object\" ||\r\n                      Object.keys(exportmodule[1]).length ||\r\n                      JSON.stringify(exportmodule[1]) !== \"{}\"\r\n                    ) {\r\n                      console.log(\"检测到cjs模块\", url, packagename);\r\n                      moduleexport.default = exportmodule[1];\r\n                    } else if (\r\n                      typeof exportmodule[2] !== \"object\" ||\r\n                      Object.keys(exportmodule[2]).length ||\r\n                      JSON.stringify(exportmodule[2]) !== \"{}\"\r\n\r\n                      // typeof define.exports !== \"object\" ||\r\n                      // Object.keys(define.exports).length ||\r\n                      // JSON.stringify(define.exports) !== \"{}\"\r\n                    ) {\r\n                      console.log(\"检测到amd模块\", url, packagename);\r\n                      // moduleexport.default = define.exports;\r\n                      moduleexport.default = exportmodule[2];\r\n                    } else {\r\n                      console.warn(\"加载的模块没有输出\", url, packagename);\r\n                      resolve(moduleexport);\r\n                      return;\r\n                    }\r\n\r\n                    if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\r\n                      Object.defineProperty(moduleexport, Symbol.toStringTag, {\r\n                        value: \"Module\"\r\n                      });\r\n                    }\r\n                    // moduleexport.sha256 = sha256(url);\r\n                    if (typeof moduleexport.default !== \"undefined\") {\r\n                      if (typeof packagename !== \"undefined\") {\r\n                        /* 修改模块仓库里面存放模块,而不是模块的默认输出 */\r\n                        moduleexport.name = packagename;\r\n                        //   global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[packagename] =\r\n                        //     moduleexport.default;\r\n\r\n                        global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[\r\n                          packagename\r\n                        ] = moduleexport;\r\n                      } else {\r\n                        /* 如果存在不要重复加载了sha256 */\r\n                        //   moduleexport.name = sha256(url);\r\n                        packagename = url;\r\n                        global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE[\r\n                          packagename\r\n                          // sha256(url)\r\n                        ] = moduleexport;\r\n                        /* 如果没有指定模块的名字则把url转成Sha256作为名字 */\r\n                        //   moduleexport.name = undefined;\r\n                      }\r\n                    }\r\n\r\n                    moduleexport.url = url;\r\n                    if (typeof moduleexport.default !== \"undefined\") {\r\n                      if (typeof moduleexport.name !== \"undefined\") {\r\n                        console.log(\r\n                          \"IMPORTCJSAMDUMD.GLOBALPACKAGESTORE\",\r\n                          global.IMPORTCJSAMDUMD.GLOBALPACKAGESTORE\r\n                        );\r\n                      }\r\n                    } else {\r\n                      console.warn(\"加载的模块没有输出\", url);\r\n                      resolve(moduleexport);\r\n                      return;\r\n                    }\r\n\r\n                    resolve(moduleexport);\r\n                    return;\r\n                  });\r\n                } catch (e) {\r\n                  console.error(e);\r\n                  reject(e);\r\n                  return;\r\n                }\r\n\r\n                //   .catch(e => {\r\n                //     console.error(e);\r\n                //     reject(e);\r\n                //     return;\r\n                //   });\r\n\r\n                /*    var response = await fetch(url);\r\n            if (!response.ok) {\r\n              throw new Error(\"fetch failed \" + url);\r\n            }\r\n            var scripttext = await response.text();\r\n          } catch (e) {\r\n            console.error(e);\r\n            reject(e);\r\n            return;\r\n          }\r\n*/\r\n              } catch (e) {\r\n                console.error(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n            })();\r\n          } catch (e) {\r\n            console.error(e);\r\n            reject(e);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      throw new Error(\"输入的类型错误,输入的类型必须是字符串或者数组\");\r\n    }\r\n  }\r\n})(\r\n  (typeof window !== \"undefined\" ? window : false) ||\r\n    (typeof WorkerGlobalScope !== \"undefined\" ? WorkerGlobalScope : false) ||\r\n    this\r\n);\r\n\r\n// define([\r\n//     'require',\r\n//     'dependency'\r\n// ], function(require, factory) {\r\n//     'use strict';\r\n\r\n// });\r\n/*(function (global, factory) {\r\n        typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react')) :\r\n        typeof define === 'function' && define.amd ? define(['react'], factory) :\r\n        (global.ReactDOM = factory(global.React));\r\n    }(this, (function (React) { 'use strict';\r\n    \r\n    \r\n    \r\n    (function (global, factory) {\r\n      typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jquery'), require('popper.js')) :\r\n      typeof define === 'function' && define.amd ? define(['exports', 'jquery', 'popper.js'], factory) :\r\n      (global = global || self, factory(global.bootstrap = {}, global.jQuery, global.Popper));\r\n    }(this, function (exports, $, Popper) { 'use strict';\r\n    \r\n    \r\n    \r\n    \r\n    (function( factory ) {\r\n        if ( typeof define === \"function\" && define.amd ) {\r\n    \r\n            // AMD. Register as an anonymous module.\r\n            define([ \"jquery\" ], factory );\r\n        } else {\r\n    \r\n            // Browser globals\r\n            factory( jQuery );\r\n        }\r\n    }(function( $ ) {\r\n    \r\n    \r\n    \r\n    */\r\n/*define( \"jquery\", [], function() {\r\n            return jQuery;\r\n        } );*\r\n    \r\n    \r\n    (function (global, factory) {\r\n        typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n        typeof define === 'function' && define.amd ? define(factory) :\r\n        (global.VueRouter = factory());\r\n    }(this, (function () { 'use strict';\r\n    \r\n    \r\n    */\r\n"]}