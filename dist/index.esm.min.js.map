{"version":3,"file":"index.esm.min.js","sources":["../src/cantfindError.ts","../src/assertstring.ts","../src/getmodule.ts","../src/isplainobject.ts","../src/arrayimportall.ts","../src/cachedfetchtext.ts","../src/dynamicimportshim.ts","../src/myrequirefun.ts","../src/formatedurlrequire.ts","../src/formaturl.ts","../src/getbaseurl.ts","../src/isarray.ts","../src/isfunction.ts","../src/define.ts","../src/notemptyobj.ts","../src/esmdefinegetter.ts","../src/coreload.ts","../src/handlecjsmodule.ts","../src/define-default.ts","../src/ismodule.ts","../src/oldimport.ts","../src/newobjjson.ts","../src/importcjsamdumd.ts","../src/isurl.ts"],"sourcesContent":["export class cantfindError extends Error {\r\n  urlorname: string;\r\n  constructor(message: string, urlorname: string) {\r\n    super(message);\r\n    this.urlorname = urlorname;\r\n  }\r\n}\r\n","import { 参数必须为字符串, 字符串不能为空 } from './importcjsamdumd';\r\n\r\nexport function assertstring(s: string) :asserts s is string \r\n{\r\n    if (s === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof s !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n  //   return true;\r\n  }","import { assertstring } from \"./assertstring\";\r\nimport { cantfindError } from \"./cantfindError\";\r\nimport { PACKAGESTORE, 模块仓库中没有找到 } from \"./importcjsamdumd\";\r\n\r\nexport function getmodule(packagename: string) {\r\n  assertstring(packagename);\r\n  //   \"use strict\";\r\n  //   if (packagename === \"\") {\r\n  //     throw new TypeError(字符串不能为空);\r\n  //   }\r\n  //   if (typeof packagename !== \"string\") {\r\n  //     throw new TypeError(参数必须为字符串);\r\n  //   }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    Object.freeze(findpackage);\r\n    return findpackage;\r\n    /*new Proxy(findpackage, {\r\n        set() {\r\n          return false;\r\n        },\r\n        deleteProperty() {\r\n          return false;\r\n        }\r\n      });*/\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n}\r\n","import { PlainObj } from \"./oldimport\";\r\n\r\nexport function isplainobject(o: any): o is PlainObj {\r\n  return (\r\n    typeof o === \"object\" &&\r\n    {}.toString.call(o) === \"[object Object]\" &&\r\n    o instanceof Object\r\n    //&&\r\n    //   o.__proto__ === Object.prototype\r\n  );\r\n}\r\n","export async function 同时发起多个字符串(\r\n  a: Array<string>,\r\n  importcjsamdumd: Function\r\n) {\r\n  return await Promise.all(\r\n    a.map(e => {\r\n      return importcjsamdumd(e);\r\n    })\r\n  );\r\n}\r\nexport async function 同时发起多个entries(\r\n  a: any[][],\r\n  importcjsamdumd: Function\r\n) {\r\n  return await Promise.all(\r\n    a.map(e => {\r\n      return importcjsamdumd(e[0], e[1]);\r\n    })\r\n  );\r\n}\r\n","import { set, get } from './coreload';\r\n\r\nexport default async function(url: string) {\r\n  const cachedtext =get(cachedurltotext, url);\r\n  //   cachedurltotext.get(url);\r\n  if (cachedtext) {\r\n    return cachedtext;\r\n  } else {\r\n    const textsource = await fetch(url).then(async response => {\r\n      if (!response.ok) {\r\n        throw new Error(\"fetch failed \" + url);\r\n      }\r\n      return await response.text();\r\n    });\r\n   set(cachedurltotext, url, textsource);\r\n    // cachedurltotext.set(url, textsource);\r\n    return textsource;\r\n  }\r\n}\r\nconst cachedurltotext: Record<string, string> = {}; // new Map<string, string>();\r\n","/* eslint-disable no-empty */\r\n\"use strict\";\r\n\r\nimport { get, set } from \"./coreload\";\r\nimport { Module } from \"./importcjsamdumd\";\r\nimport { assertstring } from \"./assertstring\";\r\n\r\nexport { createBlob };\r\nfunction createBlob(source: string) {\r\n  return URL.createObjectURL(\r\n    new Blob([source], { type: \"application/javascript\" })\r\n  );\r\n}\r\n// const 参数必须为字符串 = \"Parameter must be a string\";\r\n// const 字符串不能为空 = \"String cannot be empty\";\r\ntype dynamicimport = (url: string) => Promise<Module>;\r\nconst dynamicimportshimfun = (() => {\r\n  \"use strict\";\r\n\r\n  let dynamicimportshim: dynamicimport;\r\n  //   import('querystring')\r\n  try {\r\n    dynamicimportshim = Function(\"u\", \"return import(u)\") as dynamicimport;\r\n  } catch (error) {\r\n    dynamicimportshim = async function(url: string): Promise<Module> {\r\n      assertstring(url);\r\n      //   if (url === \"\") {\r\n      //     throw new TypeError(字符串不能为空);\r\n      //   }\r\n      //   if (typeof url !== \"string\") {\r\n      //     throw new TypeError(参数必须为字符串);\r\n      //   }\r\n      url = new URL(url).href;\r\n\r\n      return await getnewimportpromise(url);\r\n    };\r\n  }\r\n  return dynamicimportshim;\r\n})();\r\nexport default dynamicimportshimfun;\r\nfunction getnewimportpromise(url: string): Promise<Module> {\r\n  const symbolkey = Symbol.for(\"import-\" + url);\r\n  return new Promise((resolve, reject) => {\r\n    const s = document.createElement(\"script\");\r\n    function clearsideeffect() {\r\n      removescript(s);\r\n      removeerrorlisten(errorhandler);\r\n      URL.revokeObjectURL(s.src);\r\n      s.onload = s.onerror = null;\r\n    }\r\n    function removeerrorlisten(f: (evt: ErrorEvent) => void) {\r\n      try {\r\n        window.removeEventListener(\"error\", f);\r\n      } catch (error) {}\r\n    }\r\n    function removescript(e: HTMLScriptElement) {\r\n      e.remove();\r\n      //try {\r\n      //   document.head.removeChild(e);\r\n      //  } catch (error) {}\r\n    }\r\n    function errorhandler(e: ErrorEvent) {\r\n      console.warn(e.error);\r\n      reject(e.error);\r\n      clearsideeffect();\r\n    }\r\n    window.addEventListener(\"error\", errorhandler);\r\n    const topLevelBlobUrl = createBlob(\r\n      `import*as m from'${url}';\\nwindow[Symbol.for('${\"import-\" + url}')]=m`\r\n    );\r\n    s.type = \"module\";\r\n    s.src = topLevelBlobUrl;\r\n    s.async = true;\r\n    s.onload = () => {\r\n      if (\r\n        Reflect.has(window, symbolkey)\r\n        /* symbolkey in */\r\n      ) {\r\n        const moduleoutput = get(window, symbolkey);\r\n        resolve(moduleoutput /* [Symbol.for(\"import-\" + url)] */);\r\n        set(window, symbolkey, undefined);\r\n        clearsideeffect();\r\n      }\r\n    };\r\n    s.onerror = () => {\r\n      reject(new Error(\"import load failed from network\" + url));\r\n      clearsideeffect();\r\n    };\r\n    document.head.appendChild(s);\r\n  });\r\n}\r\n","import { assertstring } from \"./assertstring\";\r\nimport { cantfindError } from \"./cantfindError\";\r\nimport { PACKAGESTORE, 模块仓库中没有找到 } from \"./importcjsamdumd\";\r\n\r\nexport const myrequirefun = function requireinstead(packagename: string) {\r\n  assertstring(packagename);\r\n  //   \"use strict\";\r\n  //   if (packagename === \"\") {\r\n  //     throw new TypeError(字符串不能为空);\r\n  //   }\r\n  //   if (typeof packagename !== \"string\") {\r\n  //     throw new TypeError(参数必须为字符串);\r\n  //   }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    Object.freeze(findpackage);\r\n    return findpackage.default ? findpackage.default : findpackage;\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n};\r\n","import { getbaseurl } from \"./getbaseurl\";\r\nimport { assertstring } from \"./assertstring\";\r\n// import { myrequirefun } from \"./IMPORTCJSAMDUMD\";\r\nimport { 格式化url } from \"./formaturl\";\r\nimport { myrequirefun } from \"./myrequirefun\";\r\n\r\nexport const formatedurlrequire = (urlorname: string, url: string) => {\r\n  assertstring(urlorname);\r\n  // urlorname = String(urlorname);\r\n  /*   if (urlorname === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      } */\r\n\r\n  const baseurl = getbaseurl(url);\r\n  const formatedurl = 格式化url(baseurl, urlorname);\r\n  return myrequirefun(formatedurl);\r\n};\r\n","export function 格式化url(baseurl: string, urlorname: string) {\r\n  if (\r\n    String(urlorname).startsWith(\"./\") ||\r\n    String(urlorname).startsWith(\"../\")\r\n  ) {\r\n    if (\r\n      !(\r\n        String(urlorname).endsWith(\".js\") ||\r\n        urlorname.endsWith(\".mjs\") ||\r\n        urlorname.endsWith(\".json\") ||\r\n        urlorname.endsWith(\".css\") ||\r\n        urlorname.endsWith(\".html\")\r\n      )\r\n    ) {\r\n      urlorname += \".js\";\r\n    }\r\n    urlorname = new URL(baseurl + urlorname).href;\r\n  }\r\n  return urlorname;\r\n}\r\n","export function getbaseurl(url: string) {\r\n  var objurl = new URL(url);\r\n  var a = objurl.pathname.split(\"/\");\r\n  a[a.length - 1] = \"\";\r\n  var path = objurl.origin + a.join(\"/\");\r\n  return path;\r\n}\r\n","export function isArray(a: any): a is Array<any> {\r\n  return (\r\n    // typeof a === \"object\" &&\r\n    Array.isArray(a) && {}.toString.call(a) === \"[object Array]\"\r\n  );\r\n}\r\n","export function isFunction(it: any): it is Function {\r\n  const op = {}; // Object.prototype;\r\n  const ostring = op.toString;\r\n  const tag = ostring.call(it);\r\n  return (\r\n    (\"function\" === typeof it && tag === \"[object Function]\") ||\r\n    tag === \"[object AsyncFunction]\"\r\n  );\r\n}\r\n","import { isArray } from \"./isarray\";\r\nimport { isFunction } from \"./isfunction\";\r\nimport { myrequirefun } from \"./myrequirefun\";\r\n\r\ndefine.exports = {};\r\n\r\ndefine.amd = true;\r\nfunction define(name: any, deps?: any, callback?: any) {\r\n  \"use strict\";\r\n  define.exports = {};\r\n  define.amd = true;\r\n  //   const defineglobalDefQueue = [];\r\n  if (typeof name !== \"string\") {\r\n    callback = deps;\r\n    deps = name;\r\n    name = null;\r\n  }\r\n  if (!isArray(deps)) {\r\n    callback = deps;\r\n    deps = null;\r\n  }\r\n  if (!deps && isFunction(callback)) {\r\n    deps = [];\r\n  }\r\n  const defineglobalDefQueue: [any, string[], Function] = [\r\n    name,\r\n    deps,\r\n    callback\r\n  ];\r\n  const canshu = defineglobalDefQueue[1].map((e: string) => myrequirefun(e));\r\n  define.exports = defineglobalDefQueue[2](...canshu);\r\n}\r\nexport { define };\r\n","export function 非空对象(o: any) {\r\n  return !!(\r\n    typeof o !== \"object\" ||\r\n    Object.keys(o).length ||\r\n    JSON.stringify(o) !== \"{}\"\r\n  );\r\n}\r\n","import { defineProperty, get } from \"./coreload\";\r\nimport { isFunction } from \"./isfunction\";\r\n\r\nexport function esmdefinegetter(\r\n  moduleexport: Record<string, any>,\r\n  exportdefault: Record<string, any> | Function\r\n) {\r\n  if (\r\n    exportdefault &&\r\n    (isFunction(exportdefault) || typeof exportdefault === \"object\")\r\n  ) {\r\n    Object.keys(exportdefault)\r\n      // .filter(t => t !== \"default\")\r\n      .forEach(key => {\r\n        try {\r\n          defineProperty(moduleexport, key, {\r\n            enumerable: true,\r\n            get() {\r\n              return get(exportdefault, key);\r\n            }\r\n          });\r\n        } catch (error) {}\r\n      });\r\n  }\r\n}\r\n","export const { get, set, defineProperty } = Reflect;\r\nimport cachedfetchtext from \"./cachedfetchtext\";\r\n/* eslint-disable no-empty */\r\n// const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nimport dynamicimportshim from \"./dynamicimportshim.js\";\r\nimport { formatedurlrequire } from \"./formatedurlrequire.js\";\r\nimport { 处理非es模块 } from \"./handlecjsmodule.js\";\r\nimport {\r\n  //   assertstring,\r\n  //   define,\r\n  PACKAGESTORE\r\n  //   定义default\r\n} from \"./importcjsamdumd.js\";\r\nimport { define } from \"./define.js\";\r\nimport { esmdefinegetter } from \"./esmdefinegetter\";\r\nimport { 定义default } from \"./define-default\";\r\n// const 字符串不能为空 = \"String cannot be empty\";\r\nexport const 加载的模块没有输出 = \"加载的模块没有输出\";\r\nexport const typesymbol = Symbol(\"type\");\r\nexport const namesymbol = Symbol(\"name\");\r\nexport const urlsymbol = Symbol(\"url\");\r\nexport const sourcesymbol = Symbol(\"source\");\r\nexport default async (url: string, packagename?: string) => {\r\n  return await new Promise(主核心加载模块函数);\r\n  function 主核心加载模块函数(\r\n    resolve: (value?: any) => void,\r\n    reject: (reason?: any) => void\r\n  ) {\r\n    return ((resolve, reject) => {\r\n      return (async () => {\r\n        try {\r\n          return await (async () => {\r\n            let fetchpromisetext: string;\r\n            try {\r\n              try {\r\n                fetchpromisetext = await cachedfetchtext(url);\r\n                /* await fetch(url).then(response => {\r\n                  if (!response.ok) {\r\n                    throw new Error(\"fetch failed \" + url);\r\n                  }\r\n                  return response.text();\r\n                }); */\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n              try {\r\n                return await (async scripttext => {\r\n                  let moduletype: \"cjs\" | \"esm\" | \"json\";\r\n                  const exports_exports = { [Symbol.toStringTag]: \"Module\" };\r\n                  const module = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  define.exports = {};\r\n                  let modulesrcfun: string;\r\n\r\n                  const moduleexport: {\r\n                    default: any;\r\n                    [k: string]: any;\r\n                  } = Object.assign(Object.create(null), {\r\n                    default: undefined\r\n                  });\r\n                  try {\r\n                    (function() //   myrequirefun,\r\n                    //  define,\r\n                    //  module,\r\n                    //   exports,\r\n                    //    scripttext\r\n                    {\r\n                      const 模块加载函数 = new Function(\r\n                        \"require\",\r\n                        \"define\",\r\n                        \"module\",\r\n                        \"exports\",\r\n                        `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\n`\r\n                      );\r\n                      modulesrcfun = 模块加载函数.toString();\r\n\r\n                      return 模块加载函数.call(\r\n                        module.exports,\r\n                        (name: string) => formatedurlrequire(name, url),\r\n                        define,\r\n                        module,\r\n                        exports_exports\r\n                      );\r\n                    })();\r\n                    //   /* myrequirefun,  */ define,\r\n                    //    module,\r\n                    //   exports,\r\n                    //    scripttext\r\n                    const exportmodule = [\r\n                      exports_exports ? exports_exports : {},\r\n                      module.exports ? module.exports : {},\r\n                      define.exports ? define.exports : {}\r\n                    ];\r\n                    const usefulexport = 处理非es模块(\r\n                      /* moduleexport,  */ exportmodule,\r\n                      url,\r\n                      packagename\r\n                    );\r\n                    moduletype = \"cjs\";\r\n\r\n                    if (usefulexport) {\r\n                      定义default(moduleexport, usefulexport);\r\n                      esmdefinegetter(moduleexport, usefulexport);\r\n\r\n                      //\r\n                    }\r\n                  } catch (e) {\r\n                    console.warn(e);\r\n                    try {\r\n                      const moduleexportdefault = JSON.parse(scripttext);\r\n                      console.log(\"检测到json模块 \" + url);\r\n                      modulesrcfun = scripttext;\r\n                      moduletype = \"json\";\r\n                      esmdefinegetter(moduleexport, moduleexportdefault);\r\n                      /*      Object.keys(moduleexportdefault)\r\n                        // .filter(t => t !== \"default\")\r\n                        .forEach(key => {\r\n                          defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return moduleexportdefault[key];\r\n                            }\r\n                          });\r\n                        }); */\r\n                      /* try {\r\n                        Reflect.defineProperty(moduleexport, \"default\", {\r\n                        //   enumerable: false\r\n                        });\r\n                      } catch {} */\r\n                    } catch (error) {\r\n                      console.warn(error);\r\n                      if (e instanceof SyntaxError) {\r\n                        const topLevelBlobUrl = url;\r\n                        modulesrcfun = scripttext;\r\n                        try {\r\n                          const exportdefault = await dynamicimportshim(\r\n                            topLevelBlobUrl\r\n                          );\r\n                          moduletype = \"esm\";\r\n                          esmdefinegetter(moduleexport, exportdefault);\r\n                          /*    ((moduleexport, exportdefault) => {\r\n                            Object.keys(exportdefault)\r\n                              // .filter(t => t !== \"default\")\r\n                              .forEach(key => {\r\n                                defineProperty(moduleexport, key, {\r\n                                  enumerable: true,\r\n                                  get() {\r\n                                    return get(exportdefault, key);\r\n                                  }\r\n                                });\r\n                              });\r\n                          })(moduleexport, exportdefault); */\r\n\r\n                          /*  定义default(\r\n                            moduleexport,\r\n                            exportdefault.default\r\n                              ? exportdefault.default\r\n                              : exportdefault\r\n                          );*/\r\n                        } catch (e) {\r\n                          console.warn(e);\r\n                          reject(e);\r\n                          return;\r\n                        }\r\n                        if (typeof moduleexport.default === \"undefined\") {\r\n                          console.warn(加载的模块没有输出, packagename, url);\r\n                          try {\r\n                            defineProperty(moduleexport, \"default\", {\r\n                              value: undefined,\r\n                              enumerable: false\r\n                            });\r\n                          } catch {}\r\n                          /*  reject(\r\n                            Error(\r\n                              加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                            )\r\n                          );\r\n                          return;*/\r\n                        }\r\n                      } else {\r\n                        console.warn(e);\r\n                        reject(e);\r\n                        return;\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  Object.defineProperties(moduleexport, {\r\n                    [namesymbol]: {\r\n                      value: packagename\r\n                      //   writable: true,\r\n                      //   enumerable: false\r\n                    },\r\n                    [urlsymbol]: {\r\n                      value: url\r\n                      //   enumerable: false\r\n                    },\r\n                    [sourcesymbol]: {\r\n                      value: modulesrcfun\r\n                      //   enumerable: false\r\n                    },\r\n                    [typesymbol]: {\r\n                      value: moduletype\r\n                      //   enumerable: false\r\n                    }\r\n                  });\r\n                  if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\r\n                    defineProperty(moduleexport, Symbol.toStringTag, {\r\n                      value: \"Module\"\r\n                    });\r\n                  }\r\n                  //   if (typeof moduleexport.default !== \"undefined\") {\r\n                  /* json模块没有default */\r\n                  if (typeof packagename !== \"undefined\") {\r\n                    PACKAGESTORE[packagename] = moduleexport;\r\n                  }\r\n                  //   }\r\n                  if (typeof packagename !== \"undefined\") {\r\n                    PACKAGESTORE[url] = PACKAGESTORE[packagename];\r\n                  }\r\n                  if (moduleexport.default) {\r\n                    esmdefinegetter(moduleexport, moduleexport.default);\r\n                  }\r\n                  //   !!moduleexport.default &&\r\n                  // Object.keys(moduleexport.default)\r\n                  //   .filter(t => t !== \"default\")\r\n                  //   .forEach(key => {\r\n                  //     const moduleexportdefault = moduleexport.default;\r\n\r\n                  //     try {\r\n                  //       defineProperty(moduleexport, key, {\r\n                  //         enumerable: true,\r\n                  //         get() {\r\n                  //           return get(moduleexportdefault, key);\r\n                  //         }\r\n                  //       });\r\n                  //     } catch (error) {}\r\n                  //   });\r\n                  if (moduleexport.default === undefined) {\r\n                    try {\r\n                      defineProperty(moduleexport, \"default\", {\r\n                        value: undefined,\r\n                        enumerable: false\r\n                      });\r\n                    } catch (error) {}\r\n                  }\r\n                  Object.freeze(moduleexport);\r\n                  resolve(moduleexport);\r\n                  return;\r\n                })(fetchpromisetext);\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              console.warn(e);\r\n              reject(e);\r\n              return;\r\n            }\r\n          })();\r\n        } catch (e) {\r\n          console.warn(e);\r\n          reject(e);\r\n          return;\r\n        }\r\n      })();\r\n    })(resolve, reject);\r\n  }\r\n};\r\n","// import { define } from \"./IMPORTCJSAMDUMD\";\r\nimport { 加载的模块没有输出 } from \"./coreload\";\r\nimport { define } from \"./define\";\r\nimport { 非空对象 } from \"./notemptyobj\";\r\n\r\nexport function 处理非es模块(\r\n  //   moduleexport: { default: any },\r\n  exportmodule: any[],\r\n  url: string,\r\n  packagename: string | undefined\r\n) {\r\n  /* if (typeof exportmodule === \"undefined\") {\r\n    exportmodule = [{}, {}, {}];\r\n  } */\r\n  if (typeof define.exports === \"undefined\") {\r\n    define.exports = {};\r\n  }\r\n\r\n  if (非空对象(exportmodule[0])) {\r\n    const exportdefault = exportmodule[0];\r\n    return exportdefault;\r\n    // 定义default(moduleexport, exportdefault);\r\n  } else if (非空对象(exportmodule[1])) {\r\n    const exportdefault = exportmodule[1];\r\n    // 定义default(moduleexport, exportdefault);\r\n    return exportdefault;\r\n  } else if (非空对象(exportmodule[2])) {\r\n    const exportdefault = exportmodule[2];\r\n    return exportdefault;\r\n    // 定义default(moduleexport, exportdefault);\r\n  } else {\r\n    console.warn(加载的模块没有输出, url, packagename);\r\n    /*   reject(\r\n          Error(\r\n            加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n          )\r\n        );\r\n        return;*/\r\n  }\r\n}\r\n","import { defineProperty, get } from \"./coreload\";\r\nimport { ismodule } from \"./ismodule\";\r\nimport { isplainobject } from \"./isplainobject\";\r\n\r\nexport function 定义default(\r\n  target: Record<string, any>,\r\n  def: { [x: string]: string; default: any } | Function\r\n) {\r\n  def = get(def, \"default\") ? get(def, \"default\") : def;\r\n  // /*   if (\r\n  //     get(def, Symbol.toStringTag) === /* def[Symbol.toStringTag] */ \"Module\" &&\r\n  //     def.default\r\n  //   ) {\r\n  //     def = def.default;\r\n  //   } */\r\n  if (!ismodule(def) && !isplainobject(def)) {\r\n    /* 如果是个module或者plainobject则,不定义default */\r\n    // try {\r\n    defineProperty(target, \"default\", {\r\n      enumerable: true,\r\n      get() {\r\n        return def;\r\n      }\r\n    });\r\n    //   } catch (error) {}\r\n  }\r\n}\r\n","export function ismodule(a: any): boolean {\r\n  return {}.toString.call(a) === \"[object Module]\";\r\n}\r\n","// import { 同时发起多个entries } from \"./arrayimportall.js\";\r\nimport { 同时发起多个entries, 同时发起多个字符串 } from \"./arrayimportall.js\";\r\nimport { assertstring } from \"./assertstring.js\";\r\nimport coreload, { namesymbol, urlsymbol, get, set } from \"./coreload.js\";\r\nimport { getmodule } from \"./getmodule.js\";\r\nimport {\r\n  //   assertstring,\r\n  //   getmodule,\r\n  //   isArray,\r\n  //   isplainobject,\r\n  PACKAGESTORE\r\n} from \"./importcjsamdumd\";\r\nimport { isArray } from \"./isarray.js\";\r\nimport { isplainobject } from \"./isplainobject.js\";\r\nimport { newobjjson } from \"./newobjjson.js\";\r\nconst 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"The type entered is incorrect, the type entered must be a string or an array or an object\";\r\n// export const 非法字符串 = \"输入的类型错误,输入的字符串不能为空,不能为undefined\";\r\n// export const namesymbol = Symbol.for(\"name\");\r\n// export const urlsymbol = Symbol.for(\"url\");\r\nexport const 传入的参数必须是个object = \"The argument passed in must be an object\";\r\nexport type PlainObj = Record<any, any>;\r\n\r\nexport default /* (() => {\r\n  return */ async function oldimportcjsamdumd(\r\n  url: any,\r\n  packagename?: any\r\n): Promise<any> {\r\n  \"use strict\";\r\n  if (isplainobject(url)) {\r\n    return await (async url => {\r\n      url = newobjjson(url);\r\n      /* 应该是value,key的数组,与  Object.entries相反*/\r\n      const 输入参数array = Object.entries(url).map(([key, value]) => [\r\n        value,\r\n        key\r\n      ]); /*  Object.keys(url).map(key => {\r\n          const packageurl = url[key];\r\n          const packagenm = key;\r\n          return [packageurl, packagenm];\r\n        }); */\r\n      let suoyouimportpromise = [];\r\n      try {\r\n        suoyouimportpromise = await 同时发起多个entries(\r\n          输入参数array,\r\n          oldimportcjsamdumd\r\n        );\r\n      } catch (error) {\r\n        console.warn(error);\r\n        suoyouimportpromise = await 同时发起多个entries(\r\n          输入参数array,\r\n          oldimportcjsamdumd\r\n        );\r\n      } finally {\r\n        suoyouimportpromise = await 同时发起多个entries(\r\n          输入参数array,\r\n          oldimportcjsamdumd\r\n        );\r\n      }\r\n      let objecttoreturn: PlainObj = {};\r\n      suoyouimportpromise.forEach(m => {\r\n        objecttoreturn[m[namesymbol]] = m;\r\n      });\r\n      return objecttoreturn;\r\n    })(url);\r\n  } else if (\r\n    isArray(\r\n      url\r\n    ) /* && typeof url === \"object\" */ /*  ||\r\n    typeof packagename === \"object\" */\r\n  ) {\r\n    return await (async (...args) => {\r\n      let suoyouimportpromise = [];\r\n      const 传入参数arr = args; //Array(...args).flat(1 / 0); //JSON.parse(JSON.stringify(Array(...args).flat()));\r\n      try {\r\n        suoyouimportpromise = await 同时发起多个字符串(\r\n          传入参数arr,\r\n          oldimportcjsamdumd\r\n        );\r\n      } catch (error) {\r\n        console.warn(error);\r\n        suoyouimportpromise = await 同时发起多个字符串(\r\n          传入参数arr,\r\n          oldimportcjsamdumd\r\n        );\r\n      } finally {\r\n        suoyouimportpromise = await 同时发起多个字符串(\r\n          传入参数arr,\r\n          oldimportcjsamdumd\r\n        );\r\n      }\r\n      return suoyouimportpromise;\r\n    })(...url);\r\n  } else if (typeof url === \"string\" || typeof packagename === \"string\") {\r\n    assertstring(url);\r\n    return await (async (url: string, packagename?: string) => {\r\n      /*   if (typeof url === \"undefined\" || packagename === \"\") {\r\n          throw new TypeError(非法字符串);\r\n        } */\r\n      if (typeof packagename === \"undefined\") {\r\n        packagename = new URL(url).href;\r\n      }\r\n      url = new URL(url).href;\r\n      if (\r\n        typeof PACKAGESTORE[packagename] !== \"undefined\" &&\r\n        typeof PACKAGESTORE[packagename].default !== \"undefined\" &&\r\n        get(PACKAGESTORE[packagename], urlsymbol) === url\r\n        //  [urlsymbol] === url\r\n      ) {\r\n        return getmodule(packagename);\r\n      } else if (\r\n        typeof PACKAGESTORE[url] !== \"undefined\" &&\r\n        typeof PACKAGESTORE[url].default !== \"undefined\" &&\r\n        get(PACKAGESTORE[url], urlsymbol) === url\r\n        //   PACKAGESTORE[url][urlsymbol] === url\r\n      ) {\r\n        PACKAGESTORE[packagename] = PACKAGESTORE[url];\r\n        //   PACKAGESTORE[packagename][namesymbol] = packagename;\r\n        set(PACKAGESTORE[packagename], namesymbol, packagename);\r\n        return getmodule(url);\r\n      } else {\r\n        return await coreload(url, packagename);\r\n      }\r\n    })(url, packagename);\r\n  } else {\r\n    // debugger;\r\n    throw new TypeError(输入的类型错误输入的类型必须是字符串或者数组或对象);\r\n  }\r\n}\r\n// })();\r\n","import { PlainObj, 传入的参数必须是个object } from \"./oldimport\";\r\n\r\nexport function newobjjson(obj: PlainObj) {\r\n  if (typeof obj !== \"object\") {\r\n    throw new TypeError(传入的参数必须是个object);\r\n  }\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","\"use strict\";\r\n/* const 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"The type entered is incorrect, the type entered must be a string or an array or an object\";\r\nconst 非法字符串 = \"输入的类型错误,输入的字符串不能为空,url不能为undefined\";\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\"); */\r\nimport { cantfindError } from \"./cantfindError\";\r\nimport { getmodule } from \"./getmodule\";\r\nimport { isplainobject } from \"./isplainobject\";\r\nimport { isurl } from \"./isurl\";\r\nimport oldimportcjsamdumd from \"./oldimport\";\r\nimport { get } from \"./coreload\";\r\n\r\nexport const 模块仓库中没有找到 =\r\n  \"Cannot find module in packagestore, Not found in module repository, \";\r\n\r\n// export const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\n\r\nexport const 参数必须为字符串 = \"Parameter must be a string\";\r\n(\"use strict\");\r\nexport const 字符串不能为空 = \"String cannot be empty\";\r\n\r\n// const importcjsamdumd = (() => {\r\n// (\"use strict\");\r\nexport const 补充加载依赖的模块网址 = \"补充加载依赖的模块网址\";\r\n\r\n// const importcjsamdumd = importcjsamdumd;\r\nexport type Module = Record<any, any>;\r\nexport default function importcjsamdumd(url: string[]): Promise<Module[]>;\r\nexport default function importcjsamdumd(\r\n  url: string,\r\n  packagename?: string\r\n): Promise<Module>;\r\nexport default function importcjsamdumd(\r\n  url: Record<string, string>\r\n): Promise<Record<string, Module>>;\r\nexport default async function importcjsamdumd(\r\n  url: any,\r\n  packagename?: any\r\n): Promise<any> {\r\n  let tryfailedtimes = 0;\r\n  //   const inarguments: [any, any] = [url, packagename];\r\n  //   const importcjsamdumd = importcjsamdumd;\r\n  return await oldimportcjsamdumd(url, packagename).catch(handleerror);\r\n  async function retryimport(url1: any, nam1: any, url2: any, name2: any) {\r\n    try {\r\n      await oldimportcjsamdumd(url1, nam1).catch(handleerror);\r\n      return await oldimportcjsamdumd(url2, name2);\r\n    } catch (error) {\r\n      console.warn(error);\r\n      return await oldimportcjsamdumd(url2, name2).catch(handleerror);\r\n    }\r\n  }\r\n  async function handleerror(e: Error): Promise<any> {\r\n    console.warn(e);\r\n    if (tryfailedtimes > 100) {\r\n      throw new Error(\r\n        \"Try loading, too many failures, give up trying!\" +\r\n          JSON.stringify(url) +\r\n          JSON.stringify(packagename)\r\n      );\r\n    }\r\n    tryfailedtimes++;\r\n\r\n    if (e instanceof cantfindError /* && eurlorname */) {\r\n      const eurlorname = e.urlorname;\r\n      if (isurl(eurlorname)) {\r\n        console.log(补充加载依赖的模块网址, eurlorname);\r\n        return await retryimport(eurlorname, undefined, url, packagename);\r\n        /*  await oldimportcjsamdumd(eurlorname).catch(handleerror);\r\n        return await oldimportcjsamdumd(...inarguments); */\r\n      } else if (isplainobject(url) && Reflect.has(url, eurlorname)) {\r\n        return await retryimport(\r\n          get(url, eurlorname),\r\n          eurlorname,\r\n          url,\r\n          packagename\r\n        );\r\n        // await oldimportcjsamdumd(...inarguments).catch(handleerror);\r\n        // return await oldimportcjsamdumd(...inarguments);\r\n      } else {\r\n        throw e;\r\n      }\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n/* export interface IMPORTCJSAMDUMD {\r\n  (url: any, packagename?: any): Promise<any>;\r\n  PACKAGESTORE: Record<string, PlainObj>;\r\n  REQUIREPACKAGE: (packagename: string) => any;\r\n} */\r\n// /* importcjsamdumd.PACKAGESTORE = {} as Record<\r\n//   string|symbol,\r\n//   PlainObj\r\n// >; /* PACKAGESTORE ||  */\r\n// importcjsamdumd.REQUIREPACKAGE = getmodule; */\r\n//   return importcjsamdumd;\r\n// })();\r\n// const IMPORTcjsamdumd: IMPORTCJSAMDUMD = importcjsamdumd;\r\n\r\nconst PACKAGESTORE: Record<string, Record<string | symbol, any>> = {};\r\nconst REQUIREPACKAGE = getmodule;\r\n// export const { PACKAGESTORE, REQUIREPACKAGE } = importcjsamdumd;\r\nexport { PACKAGESTORE, REQUIREPACKAGE };\r\n","import { assertstring } from \"./assertstring\";\r\n\r\nexport function isurl(url: string) {\r\n  var flag = false;\r\n  try {\r\n    assertstring(url);\r\n    // if (url === \"\") {\r\n    //   throw new TypeError(字符串不能为空);\r\n    // }\r\n    // if (typeof url !== \"string\") {\r\n    //   throw new TypeError(参数必须为字符串);\r\n    // }\r\n    url = new URL(url).href;\r\n    flag = true;\r\n  } catch (error) {\r\n    flag = false;\r\n  }\r\n  return flag;\r\n}\r\n"],"names":["cantfindError","Error","[object Object]","message","urlorname","super","this","assertstring","s","TypeError","字符串不能为空","参数必须为字符串","getmodule","packagename","findpackage","PACKAGESTORE","Object","freeze","模块仓库中没有找到","isplainobject","o","toString","call","async","同时发起多个字符串","a","importcjsamdumd","Promise","all","map","e","同时发起多个entries","cachedurltotext","dynamicimportshimfun","dynamicimportshim","Function","error","url","URL","href","symbolkey","Symbol","for","resolve","reject","document","createElement","clearsideeffect","remove","f","window","removeEventListener","removeerrorlisten","errorhandler","revokeObjectURL","src","onload","onerror","addEventListener","topLevelBlobUrl","source","createObjectURL","Blob","type","createBlob","Reflect","has","moduleoutput","get","set","undefined","head","appendChild","getnewimportpromise","myrequirefun","default","formatedurlrequire","formatedurl","baseurl","String","startsWith","endsWith","格式化url","objurl","pathname","split","length","origin","join","getbaseurl","isArray","Array","isFunction","it","tag","define","name","deps","callback","exports","amd","defineglobalDefQueue","canshu","非空对象","keys","JSON","stringify","esmdefinegetter","moduleexport","exportdefault","forEach","key","defineProperty","enumerable","typesymbol","namesymbol","urlsymbol","sourcesymbol","fetchpromisetext","cachedtext","textsource","fetch","then","response","ok","text","cachedfetchtext","moduletype","exports_exports","toStringTag","module","modulesrcfun","assign","create","模块加载函数","scripttext","usefulexport","exportmodule","处理非es模块","target","def","定义default","moduleexportdefault","parse","SyntaxError","value","defineProperties","输入的类型错误输入的类型必须是字符串或者数组或对象","传入的参数必须是个object","oldimportcjsamdumd","obj","newobjjson","输入参数array","entries","suoyouimportpromise","objecttoreturn","m","args","传入参数arr","coreload","REQUIREPACKAGE","tryfailedtimes","catch","handleerror","retryimport","url1","nam1","url2","name2","eurlorname","flag","isurl"],"mappings":"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"}