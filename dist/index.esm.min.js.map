{"version":3,"file":"index.esm.min.js","sources":["index.esm.js"],"sourcesContent":["/* eslint-disable no-empty */\r\nfunction createBlob(source) {\r\n  return URL.createObjectURL(\r\n    new Blob([source], { type: \"application/javascript\" })\r\n  );\r\n}\r\nlet dynamicimportshimfun = (() => {\r\n  const 参数必须为字符串 = \"参数必须为字符串\";\r\n  const 字符串不能为空 = \"字符串不能为空\";\r\n  let dynamicimportshim;\r\n  try {\r\n    dynamicimportshim = Function(\"u\", \"return import(u)\");\r\n  } catch (error) {\r\n    dynamicimportshim = async function(url) {\r\n      if (url === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      }\r\n      if (typeof url !== \"string\") {\r\n        throw new TypeError(参数必须为字符串);\r\n      }\r\n      url = new URL(url).href;\r\n      function getnewimportpromise() {\r\n        return new Promise((resolve, reject) => {\r\n          const s = document.createElement(\"script\");\r\n          function clearsideeffect() {\r\n            removescript(s);\r\n            removeerrorlisten(errorhandler);\r\n            URL.revokeObjectURL(s.src);\r\n          }\r\n          function removeerrorlisten(f) {\r\n            try {\r\n              window.removeEventListener(\"error\", f);\r\n            } catch (error) {}\r\n          }\r\n          function removescript(e) {\r\n            try {\r\n              document.head.removeChild(e);\r\n            } catch (error) {}\r\n          }\r\n          function errorhandler(e) {\r\n            console.warn(e.error);\r\n            reject(e.error);\r\n            clearsideeffect();\r\n          }\r\n          window.addEventListener(\"error\", errorhandler);\r\n          const topLevelBlobUrl = createBlob(\r\n            `import*as m from'${url}';\\nwindow[Symbol.for('${\"import-\" +\r\n              url}')]=m`\r\n          );\r\n          s.type = \"module\";\r\n          s.src = topLevelBlobUrl;\r\n          s.async = true;\r\n          s.onload = () => {\r\n            resolve(window[Symbol.for(\"import-\" + url)]);\r\n            Reflect.deleteProperty(window, Symbol.for(\"import-\" + url));\r\n            clearsideeffect();\r\n          };\r\n          s.onerror = () => {\r\n            reject(new Error(\"import load failed from network\" + url));\r\n            clearsideeffect();\r\n          };\r\n          document.head.appendChild(s);\r\n        });\r\n      }\r\n      return await getnewimportpromise();\r\n    };\r\n  }\r\n  return dynamicimportshim;\r\n})();\n\n/* eslint-disable no-empty */\r\nconst GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nconst 字符串不能为空 = \"字符串不能为空\";\r\nconst 加载的模块没有输出 = \"加载的模块没有输出\";\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\");\r\nconst sourcesymbol = Symbol.for(\"source\");\r\nvar coreload = (url, packagename) => {\r\n  return new Promise(主核心加载模块函数);\r\n  function 主核心加载模块函数(resolve, reject) {\r\n    return ((resolve, reject) => {\r\n      (async () => {\r\n        try {\r\n          await (async () => {\r\n            let fetchpromisetext;\r\n            try {\r\n              try {\r\n                fetchpromisetext = await fetch(url).then(response => {\r\n                  if (!response.ok) {\r\n                    throw new Error(\"fetch failed \" + url);\r\n                  }\r\n                  return response.text();\r\n                });\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n              try {\r\n                await (async scripttext => {\r\n                  let moduletype;\r\n                  const exports = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  const module = { exports: {} };\r\n                  define.exports = {};\r\n                  var modulesrcfun;\r\n                  const moduleexport = { default: undefined };\r\n                  try {\r\n                    (function(\r\n                      myrequirefun,\r\n                      define,\r\n                      module,\r\n                      exports,\r\n                      scripttext\r\n                    ) {\r\n                      const 模块加载函数 = new Function(\r\n                        \"require\",\r\n                        \"define\",\r\n                        \"module\",\r\n                        \"exports\",\r\n                        `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\n`\r\n                      );\r\n                      modulesrcfun = 模块加载函数.toString();\r\n                      return 模块加载函数.call(\r\n                        module.exports,\r\n                        urlorname => {\r\n                          assertstring(urlorname);\r\n                          urlorname = String(urlorname);\r\n                          if (urlorname === \"\") {\r\n                            throw new TypeError(字符串不能为空);\r\n                          }\r\n                          function getbaseurl(url) {\r\n                            var objurl = new URL(url);\r\n                            var a = objurl.pathname.split(\"/\");\r\n                            a[a.length - 1] = \"\";\r\n                            var path = objurl.origin + a.join(\"/\");\r\n                            return path;\r\n                          }\r\n                          function 格式化url(baseurl, urlorname) {\r\n                            if (\r\n                              String(urlorname).startsWith(\"./\") ||\r\n                              String(urlorname).startsWith(\"../\")\r\n                            ) {\r\n                              if (\r\n                                !(\r\n                                  String(urlorname).endsWith(\".js\") ||\r\n                                  urlorname.endsWith(\".mjs\") ||\r\n                                  urlorname.endsWith(\".json\") ||\r\n                                  urlorname.endsWith(\".css\") ||\r\n                                  urlorname.endsWith(\".html\")\r\n                                )\r\n                              ) {\r\n                                urlorname += \".js\";\r\n                              }\r\n                              urlorname = new URL(baseurl + urlorname).href;\r\n                            }\r\n                            return urlorname;\r\n                          }\r\n                          const baseurl = getbaseurl(url);\r\n                          urlorname = 格式化url(baseurl, urlorname);\r\n                          return myrequirefun(urlorname);\r\n                        },\r\n                        define,\r\n                        module,\r\n                        exports.exports\r\n                      );\r\n                    })(myrequirefun, define, module, exports, scripttext);\r\n                    const exportmodule = [\r\n                      exports.exports ? exports.exports : {},\r\n                      module.exports ? module.exports : {},\r\n                      define.exports ? define.exports : {}\r\n                    ];\r\n                    处理非es模块(moduleexport, exportmodule);\r\n                    moduletype = \"cjs\";\r\n                  } catch (e) {\r\n                    console.warn(e);\r\n                    try {\r\n                      moduleexport.default = JSON.parse(scripttext);\r\n                      console.log(\"检测到json模块 \" + url);\r\n                      modulesrcfun = scripttext;\r\n                      moduletype = \"json\";\r\n                    } catch (error) {\r\n                      console.warn(error);\r\n                      if (e instanceof SyntaxError) {\r\n                        const topLevelBlobUrl = url;\r\n                        modulesrcfun = scripttext;\r\n                        try {\r\n                          const exportdefault = await dynamicimportshimfun(\r\n                            topLevelBlobUrl\r\n                          );\r\n                          moduletype = \"esm\";\r\n                          Object.keys(exportdefault)\r\n                            .filter(t => t !== \"default\")\r\n                            .forEach(key => {\r\n                              Object.defineProperty(moduleexport, key, {\r\n                                enumerable: true,\r\n                                get() {\r\n                                  return exportdefault[key];\r\n                                }\r\n                              });\r\n                            });\r\n                          定义default(\r\n                            moduleexport,\r\n                            exportdefault.default\r\n                              ? exportdefault.default\r\n                              : exportdefault\r\n                          );\r\n                        } catch (e) {\r\n                          console.warn(e);\r\n                          reject(e);\r\n                          return;\r\n                        }\r\n                        if (typeof moduleexport.default === \"undefined\") {\r\n                          console.warn(加载的模块没有输出, packagename, url);\r\n                          reject(\r\n                            Error(\r\n                              加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                            )\r\n                          );\r\n                          return;\r\n                        }\r\n                      } else {\r\n                        console.warn(e);\r\n                        reject(e);\r\n                        return;\r\n                      }\r\n                    }\r\n                  }\r\n                  function 处理非es模块(moduleexport, exportmodule) {\r\n                    if (typeof exportmodule === \"undefined\") {\r\n                      exportmodule = [{}, {}, {}];\r\n                    }\r\n                    if (typeof define.exports === \"undefined\") {\r\n                      define.exports = {};\r\n                    }\r\n                    function 非空对象(o) {\r\n                      return (\r\n                        typeof o !== \"object\" ||\r\n                        Object.keys(o).length ||\r\n                        JSON.stringify(o) !== \"{}\"\r\n                      );\r\n                    }\r\n                    if (非空对象(exportmodule[0])) {\r\n                      const exportdefault = exportmodule[0];\r\n                      定义default(moduleexport, exportdefault);\r\n                    } else if (非空对象(exportmodule[1])) {\r\n                      const exportdefault = exportmodule[1];\r\n                      定义default(moduleexport, exportdefault);\r\n                    } else if (非空对象(exportmodule[2])) {\r\n                      const exportdefault = exportmodule[2];\r\n                      定义default(moduleexport, exportdefault);\r\n                    } else {\r\n                      console.warn(加载的模块没有输出, url, packagename);\r\n                      reject(\r\n                        Error(\r\n                          加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                        )\r\n                      );\r\n                      return;\r\n                    }\r\n                  }\r\n                  Object.defineProperties(moduleexport, {\r\n                    [namesymbol]: {\r\n                      value: packagename,\r\n                      writable: true,\r\n                      enumerable: false\r\n                    },\r\n                    [urlsymbol]: {\r\n                      value: url,\r\n                      enumerable: false\r\n                    },\r\n                    [sourcesymbol]: {\r\n                      value: modulesrcfun,\r\n                      enumerable: false\r\n                    },\r\n                    [Symbol.for(\"type\")]: {\r\n                      value: moduletype,\r\n                      enumerable: false\r\n                    }\r\n                  });\r\n                  if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\r\n                    Object.defineProperty(moduleexport, Symbol.toStringTag, {\r\n                      value: \"Module\"\r\n                    });\r\n                  }\r\n                  if (typeof moduleexport.default !== \"undefined\") {\r\n                    if (typeof packagename !== \"undefined\") {\r\n                      IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][\r\n                        packagename\r\n                      ] = moduleexport;\r\n                    }\r\n                  }\r\n                  IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][url] =\r\n                    IMPORTCJSAMDUMD[GLOBALPACKAGESTORE][packagename];\r\n                  !!moduleexport.default &&\r\n                    Object.keys(moduleexport.default)\r\n                      .filter(t => t !== \"default\")\r\n                      .forEach(key => {\r\n                        try {\r\n                          Object.defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return moduleexport.default[key];\r\n                            }\r\n                          });\r\n                        } catch (error) {}\r\n                      });\r\n                  resolve(moduleexport);\r\n                  return;\r\n                })(fetchpromisetext);\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              console.warn(e);\r\n              reject(e);\r\n              return;\r\n            }\r\n          })();\r\n        } catch (e) {\r\n          console.warn(e);\r\n          reject(e);\r\n          return;\r\n        }\r\n      })();\r\n    })(resolve, reject);\r\n  }\r\n};\n\nclass cantfindError extends Error {\r\n  constructor(message, urlorname) {\r\n    super(message);\r\n    this.urlorname = urlorname;\r\n  }\r\n}\r\nconst 传入的参数必须是个object = \"传入的参数必须是个object\";\r\nconst 模块仓库中没有找到 =\r\n  \"Cannot find module in packagestore, 模块仓库中没有找到, \";\r\nfunction newobjjson(obj) {\r\n  if (typeof obj !== \"object\") {\r\n    throw new TypeError(传入的参数必须是个object);\r\n  }\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\nasync function 同时发起多个(a) {\r\n  return await Promise.all(\r\n    Array.from(a).map(e => {\r\n      return IMPORTCJSAMDUMD(e[0], e[1]);\r\n    })\r\n  );\r\n}\r\nfunction isurl(url) {\r\n  var flag = false;\r\n  try {\r\n    if (url === \"\") {\r\n      throw new TypeError(字符串不能为空$1);\r\n    }\r\n    if (typeof url !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n    url = new URL(url).href;\r\n    flag = true;\r\n  } catch (error) {\r\n    flag = false;\r\n  }\r\n  return flag;\r\n}\r\nfunction isArray(a) {\r\n  return (\r\n    typeof a === \"object\" &&\r\n    Array.isArray(a) &&\r\n    Object.prototype.toString.call(a) === \"[object Array]\"\r\n  );\r\n}\r\nfunction getmodule(packagename) {\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空$1);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][packagename];\r\n  if (findpackage) {\r\n    return new Proxy(findpackage, {\r\n      set() {\r\n        return false;\r\n      },\r\n      deleteProperty() {\r\n        return false;\r\n      }\r\n    });\r\n  } else {\r\n    throw new Error(模块仓库中没有找到 + packagename);\r\n  }\r\n}\r\nconst GLOBALPACKAGESTORE$1 = \"PACKAGESTORE\";\r\nfunction isobject(o) {\r\n  return (\r\n    typeof o === \"object\" &&\r\n    Object.prototype.toString.call(o) === \"[object Object]\" &&\r\n    o.__proto__ === Object.prototype\r\n  );\r\n}\r\nconst 参数必须为字符串 = \"参数必须为字符串\";\r\nconst 字符串不能为空$1 = \"字符串不能为空\";\r\nlet myrequirefun = function requireinstead(packagename) {\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空$1);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][packagename];\r\n  if (findpackage) {\r\n    return findpackage.default;\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n};\r\ndefine.exports = {};\r\nfunction isFunction(it) {\r\n  const op = Object.prototype;\r\n  const ostring = op.toString;\r\n  return \"function\" === typeof it && ostring.call(it) === \"[object Function]\";\r\n}\r\nfunction define(name, deps, callback) {\r\n  define.exports = {};\r\n  define.amd = true;\r\n  const defineglobalDefQueue = [];\r\n  if (typeof name !== \"string\") {\r\n    callback = deps;\r\n    deps = name;\r\n    name = null;\r\n  }\r\n  if (!isArray(deps)) {\r\n    callback = deps;\r\n    deps = null;\r\n  }\r\n  if (!deps && isFunction(callback)) {\r\n    deps = [];\r\n  }\r\n  defineglobalDefQueue.push([name, deps, callback]);\r\n  const canshu = defineglobalDefQueue[0][1].map(e => myrequirefun(e));\r\n  define.exports = defineglobalDefQueue[0][2](...canshu);\r\n}\r\ndefine.amd = true;\r\nfunction assertstring(s) {\r\n  if (s === \"\") {\r\n    throw new TypeError(字符串不能为空$1);\r\n  }\r\n  if (typeof s !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  return true;\r\n}\r\nfunction 定义default(target, def) {\r\n  if (def[Symbol.toStringTag] === \"Module\" && def.default) {\r\n    def = def.default;\r\n  }\r\n  Object.defineProperty(target, \"default\", {\r\n    enumerable: true,\r\n    get() {\r\n      return def;\r\n    }\r\n  });\r\n}\r\nconst IMPORTCJSAMDUMD = (() => {\r\n  const 补充加载依赖的模块网址 = \"补充加载依赖的模块网址\";\r\n  const 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n    \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\n  const 非法字符串 = \"输入的类型错误,输入的字符串不能为空,url不能为undefined\";\r\n  const namesymbol = Symbol.for(\"name\");\r\n  const urlsymbol = Symbol.for(\"url\");\r\n  const IMPORTCJSAMDUMD = importcjsamdumd;\r\n  IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1] =\r\n    IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1] || {};\r\n  async function importcjsamdumd(...inarguments) {\r\n    return await oldimportcjsamdumd(...inarguments).catch(handleerror);\r\n    async function handleerror(e) {\r\n      console.warn(e);\r\n      if (e instanceof cantfindError && e.urlorname) {\r\n        if (isurl(e.urlorname)) {\r\n          console.log(补充加载依赖的模块网址, e.urlorname);\r\n          await importcjsamdumd(e.urlorname);\r\n          return await importcjsamdumd(...inarguments);\r\n        } else {\r\n          if (\r\n            isobject(inarguments[0]) &&\r\n            Reflect.has(inarguments[0], e.urlorname)\r\n          ) {\r\n            await oldimportcjsamdumd(...inarguments);\r\n            return await oldimportcjsamdumd(...inarguments);\r\n          } else {\r\n            throw e;\r\n          }\r\n        }\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n  async function oldimportcjsamdumd(url, packagename) {\r\n    if (isobject(url)) {\r\n      return await (async url => {\r\n        url = newobjjson(url);\r\n        const 输入参数array = Object.keys(url).map(key => {\r\n          const packageurl = url[key];\r\n          const packagenm = key;\r\n          return [packageurl, packagenm];\r\n        });\r\n        let suoyouimportpromise = [];\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个(输入参数array);\r\n        }\r\n        let objecttoreturn = {};\r\n        suoyouimportpromise.forEach(m => {\r\n          objecttoreturn[m[namesymbol]] = m;\r\n        });\r\n        return objecttoreturn;\r\n      })(url);\r\n    } else if (\r\n      (isArray(url) && typeof url === \"object\") ||\r\n      typeof packagename === \"object\"\r\n    ) {\r\n      return await (async (...args) => {\r\n        async function 同时发起多个字符串(a) {\r\n          return await Promise.all(\r\n            Array.from(a).map(e => {\r\n              return IMPORTCJSAMDUMD(e);\r\n            })\r\n          );\r\n        }\r\n        let suoyouimportpromise = [];\r\n        const 传入参数arr = JSON.parse(JSON.stringify(Array(...args).flat()));\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个字符串(传入参数arr);\r\n        }\r\n        return suoyouimportpromise;\r\n      })(...arguments);\r\n    } else if (typeof url === \"string\" || typeof packagename === \"string\") {\r\n      assertstring(url);\r\n      return await (async (url, packagename) => {\r\n        if (typeof url === \"undefined\" || url === \"\" || packagename === \"\") {\r\n          throw new TypeError(非法字符串);\r\n        }\r\n        if (typeof packagename === \"undefined\") {\r\n          packagename = new URL(url).href;\r\n        }\r\n        url = new URL(url).href;\r\n        if (\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][packagename] !==\r\n            \"undefined\" &&\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][packagename].default !==\r\n            \"undefined\" &&\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][packagename][urlsymbol] === url\r\n        ) {\r\n          return getmodule(packagename);\r\n        } else if (\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][url] !== \"undefined\" &&\r\n          typeof IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][url].default !==\r\n            \"undefined\" &&\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][url][urlsymbol] === url\r\n        ) {\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][packagename] =\r\n            IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][url];\r\n          IMPORTCJSAMDUMD[GLOBALPACKAGESTORE$1][packagename][\r\n            namesymbol\r\n          ] = packagename;\r\n          return getmodule(url);\r\n        } else {\r\n          return await coreload(url, packagename);\r\n        }\r\n      })(url, packagename);\r\n    } else {\r\n      throw new TypeError(输入的类型错误输入的类型必须是字符串或者数组或对象);\r\n    }\r\n  }\r\n  IMPORTCJSAMDUMD.REQUIREPACKAGE = getmodule;\r\n  return IMPORTCJSAMDUMD;\r\n})();\n\nexport default IMPORTCJSAMDUMD;\n//# sourceMappingURL=index.esm.js.map\n"],"names":["dynamicimportshimfun","dynamicimportshim","Function","error","async","url","TypeError","URL","href","Promise","resolve","reject","s","document","createElement","clearsideeffect","e","head","removeChild","removescript","f","window","removeEventListener","removeerrorlisten","errorhandler","revokeObjectURL","src","addEventListener","topLevelBlobUrl","source","createObjectURL","Blob","type","createBlob","onload","Symbol","for","Reflect","deleteProperty","onerror","Error","appendChild","GLOBALPACKAGESTORE","字符串不能为空","加载的模块没有输出","namesymbol","urlsymbol","sourcesymbol","coreload","packagename","fetchpromisetext","fetch","then","response","ok","text","moduletype","exports","[object Object]","toStringTag","module","modulesrcfun","define","moduleexport","default","undefined","myrequirefun","scripttext","模块加载函数","toString","call","urlorname","assertstring","String","baseurl","startsWith","endsWith","格式化url","objurl","a","pathname","split","length","origin","join","getbaseurl","exportmodule","非空对象","o","Object","keys","JSON","stringify","exportdefault","定义default","处理非es模块","parse","SyntaxError","filter","t","forEach","key","defineProperty","enumerable","get","defineProperties","value","writable","IMPORTCJSAMDUMD","cantfindError","message","super","this","传入的参数必须是个object","模块仓库中没有找到","同时发起多个","all","Array","from","map","isArray","prototype","getmodule","字符串不能为空$1","参数必须为字符串","findpackage","GLOBALPACKAGESTORE$1","Proxy","set","isobject","__proto__","name","deps","callback","amd","defineglobalDefQueue","it","ostring","isFunction","push","canshu","target","def","输入的类型错误输入的类型必须是字符串或者数组或对象","非法字符串","inarguments","oldimportcjsamdumd","catch","flag","isurl","importcjsamdumd","has","handleerror","obj","newobjjson","输入参数array","suoyouimportpromise","objecttoreturn","m","args","同时发起多个字符串","传入参数arr","flat","arguments","REQUIREPACKAGE"],"mappings":"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"}