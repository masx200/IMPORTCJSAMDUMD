{"version":3,"file":"index.esm.min.js","sources":["../src/cantfindError.ts","../src/isplainobject.ts","../src/assertstring.ts","../src/dynamicimportshim.ts","../src/myrequirefun.ts","../src/formatedurlrequire.ts","../src/formaturl.ts","../src/getbaseurl.ts","../src/define-default.ts","../src/notemptyobj.ts","../src/isarray.ts","../src/define.ts","../src/isfunction.ts","../src/coreload.ts","../src/handlecjsmodule.ts","../src/arrayimportall.ts","../src/getmodule.ts","../src/oldimport.ts","../src/newobjjson.ts","../src/importcjsamdumd.ts","../src/isurl.ts"],"sourcesContent":["export class cantfindError extends Error {\r\n  urlorname: string;\r\n  constructor(message: string, urlorname: string) {\r\n    super(message);\r\n    this.urlorname = urlorname;\r\n  }\r\n}\r\n","import { PlainObj } from \"./oldimport\";\r\n\r\nexport function isplainobject(o: any): o is PlainObj {\r\n  return (\r\n    typeof o === \"object\" && {}.toString.call(o) === \"[object Object]\"\r\n    //&&\r\n    //   o.__proto__ === Object.prototype\r\n  );\r\n}\r\n","import { 参数必须为字符串, 字符串不能为空 } from './importcjsamdumd';\r\n\r\nexport function assertstring(s: string) :asserts s is string \r\n{\r\n    if (s === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof s !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n  //   return true;\r\n  }","/* eslint-disable no-empty */\r\n\"use strict\";\r\nexport { createBlob };\r\nfunction createBlob(source: string) {\r\n  return URL.createObjectURL(\r\n    new Blob([source], { type: \"application/javascript\" })\r\n  );\r\n}\r\nconst dynamicimportshimfun = (() => {\r\n  \"use strict\";\r\n  const 参数必须为字符串 = \"参数必须为字符串\";\r\n  const 字符串不能为空 = \"字符串不能为空\";\r\n  let dynamicimportshim: Function;\r\n  try {\r\n    dynamicimportshim = Function(\"u\", \"return import(u)\");\r\n  } catch (error) {\r\n    dynamicimportshim = async function(url: string) {\r\n      if (url === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      }\r\n      if (typeof url !== \"string\") {\r\n        throw new TypeError(参数必须为字符串);\r\n      }\r\n      url = new URL(url).href;\r\n\r\n      return await getnewimportpromise(url);\r\n    };\r\n  }\r\n  return dynamicimportshim;\r\n})();\r\nexport default dynamicimportshimfun;\r\nfunction getnewimportpromise(url: string) {\r\n  const symbolkey = Symbol.for(\"import-\" + url);\r\n  return new Promise((resolve, reject) => {\r\n    const s = document.createElement(\"script\");\r\n    function clearsideeffect() {\r\n      removescript(s);\r\n      removeerrorlisten(errorhandler);\r\n      URL.revokeObjectURL(s.src);\r\n      s.onload = s.onerror = null;\r\n    }\r\n    function removeerrorlisten(f: (evt: ErrorEvent) => void) {\r\n      try {\r\n        window.removeEventListener(\"error\", f);\r\n      } catch (error) {}\r\n    }\r\n    function removescript(e: HTMLScriptElement) {\r\n      e.remove();\r\n      //try {\r\n      //   document.head.removeChild(e);\r\n      //  } catch (error) {}\r\n    }\r\n    function errorhandler(e: ErrorEvent) {\r\n      console.warn(e.error);\r\n      reject(e.error);\r\n      clearsideeffect();\r\n    }\r\n    window.addEventListener(\"error\", errorhandler);\r\n    const topLevelBlobUrl = createBlob(\r\n      `import*as m from'${url}';\\nwindow[Symbol.for('${\"import-\" + url}')]=m`\r\n    );\r\n    s.type = \"module\";\r\n    s.src = topLevelBlobUrl;\r\n    s.async = true;\r\n    s.onload = () => {\r\n      if (\r\n        Reflect.has(window, symbolkey)\r\n        /* symbolkey in */\r\n      ) {\r\n        const moduleoutput = Reflect.get(window, symbolkey);\r\n        resolve(moduleoutput /* [Symbol.for(\"import-\" + url)] */);\r\n        Reflect.set(window, symbolkey, undefined);\r\n        clearsideeffect();\r\n      }\r\n    };\r\n    s.onerror = () => {\r\n      reject(new Error(\"import load failed from network\" + url));\r\n      clearsideeffect();\r\n    };\r\n    document.head.appendChild(s);\r\n  });\r\n}\r\n","import {\r\n  参数必须为字符串,\r\n  字符串不能为空,\r\n  PACKAGESTORE,\r\n  模块仓库中没有找到\r\n} from \"./importcjsamdumd\";\r\nimport { cantfindError } from \"./cantfindError\";\r\n\r\nexport const myrequirefun = function requireinstead(packagename: string) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    Object.freeze(findpackage);\r\n    return findpackage.default ? findpackage.default : findpackage;\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n};\r\n","import { getbaseurl } from \"./getbaseurl\";\r\nimport { assertstring } from \"./assertstring\";\r\n// import { myrequirefun } from \"./IMPORTCJSAMDUMD\";\r\nimport { 格式化url } from \"./formaturl\";\r\nimport { myrequirefun } from \"./myrequirefun\";\r\n\r\nexport const formatedurlrequire = (urlorname: string, url: string) => {\r\n  assertstring(urlorname);\r\n  // urlorname = String(urlorname);\r\n  /*   if (urlorname === \"\") {\r\n        throw new TypeError(字符串不能为空);\r\n      } */\r\n\r\n  const baseurl = getbaseurl(url);\r\n  const formatedurl = 格式化url(baseurl, urlorname);\r\n  return myrequirefun(formatedurl);\r\n};\r\n","export function 格式化url(baseurl: string, urlorname: string) {\r\n  if (\r\n    String(urlorname).startsWith(\"./\") ||\r\n    String(urlorname).startsWith(\"../\")\r\n  ) {\r\n    if (\r\n      !(\r\n        String(urlorname).endsWith(\".js\") ||\r\n        urlorname.endsWith(\".mjs\") ||\r\n        urlorname.endsWith(\".json\") ||\r\n        urlorname.endsWith(\".css\") ||\r\n        urlorname.endsWith(\".html\")\r\n      )\r\n    ) {\r\n      urlorname += \".js\";\r\n    }\r\n    urlorname = new URL(baseurl + urlorname).href;\r\n  }\r\n  return urlorname;\r\n}\r\n","export function getbaseurl(url: string) {\r\n  var objurl = new URL(url);\r\n  var a = objurl.pathname.split(\"/\");\r\n  a[a.length - 1] = \"\";\r\n  var path = objurl.origin + a.join(\"/\");\r\n  return path;\r\n}\r\n","export function 定义default(\r\n  target: { default: undefined },\r\n  def: { [x: string]: string; default: any }\r\n) {\r\n  if (\r\n    Reflect.get(def, Symbol.toStringTag) ===\r\n      /* def[Symbol.toStringTag] */ \"Module\" &&\r\n    def.default\r\n  ) {\r\n    def = def.default;\r\n  }\r\n  Object.defineProperty(target, \"default\", {\r\n    enumerable: true,\r\n    get() {\r\n      return def;\r\n    }\r\n  });\r\n}\r\n","export function 非空对象(o: any) {\r\n  return !!(\r\n    typeof o !== \"object\" ||\r\n    Object.keys(o).length ||\r\n    JSON.stringify(o) !== \"{}\"\r\n  );\r\n}\r\n","export function isArray(a: any): a is Array<any> {\r\n  return (\r\n    // typeof a === \"object\" &&\r\n    Array.isArray(a) && {}.toString.call(a) === \"[object Array]\"\r\n  );\r\n}\r\n","import { isArray } from \"./isarray\";\r\nimport { isFunction } from \"./isfunction\";\r\nimport { myrequirefun } from \"./myrequirefun\";\r\n\r\ndefine.exports = {};\r\n\r\ndefine.amd = true;\r\nfunction define(name: any, deps?: any, callback?: any) {\r\n  \"use strict\";\r\n  define.exports = {};\r\n  define.amd = true;\r\n  //   const defineglobalDefQueue = [];\r\n  if (typeof name !== \"string\") {\r\n    callback = deps;\r\n    deps = name;\r\n    name = null;\r\n  }\r\n  if (!isArray(deps)) {\r\n    callback = deps;\r\n    deps = null;\r\n  }\r\n  if (!deps && isFunction(callback)) {\r\n    deps = [];\r\n  }\r\n  const defineglobalDefQueue: [any, string[], Function] = [\r\n    name,\r\n    deps,\r\n    callback\r\n  ];\r\n  const canshu = defineglobalDefQueue[1].map((e: string) => myrequirefun(e));\r\n  define.exports = defineglobalDefQueue[2](...canshu);\r\n}\r\nexport { define };\r\n","export function isFunction(it: any): it is Function {\r\n  const op = {}; // Object.prototype;\r\n  const ostring = op.toString;\r\n  return \"function\" === typeof it && ostring.call(it) === \"[object Function]\";\r\n}\r\n","/* eslint-disable no-empty */\r\n// const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\nimport dynamicimportshim from \"./dynamicimportshim.js\";\r\nimport { formatedurlrequire } from \"./formatedurlrequire.js\";\r\nimport { 处理非es模块 } from \"./handlecjsmodule.js\";\r\nimport {\r\n  //   assertstring,\r\n  //   define,\r\n  PACKAGESTORE\r\n  //   定义default\r\n} from \"./importcjsamdumd.js\";\r\nimport { define } from \"./define.js\";\r\n// const 字符串不能为空 = \"字符串不能为空\";\r\nexport const 加载的模块没有输出 = \"加载的模块没有输出\";\r\nexport const typesymbol = Symbol.for(\"type\");\r\nexport const namesymbol = Symbol.for(\"name\");\r\nexport const urlsymbol = Symbol.for(\"url\");\r\nexport const sourcesymbol = Symbol.for(\"source\");\r\nexport default async (url: string, packagename?: string) => {\r\n  return await new Promise(主核心加载模块函数);\r\n  function 主核心加载模块函数(\r\n    resolve: (value?: any) => void,\r\n    reject: (reason?: any) => void\r\n  ) {\r\n    return ((resolve, reject) => {\r\n      (async () => {\r\n        try {\r\n          await (async () => {\r\n            let fetchpromisetext;\r\n            try {\r\n              try {\r\n                fetchpromisetext = await fetch(url).then(response => {\r\n                  if (!response.ok) {\r\n                    throw new Error(\"fetch failed \" + url);\r\n                  }\r\n                  return response.text();\r\n                });\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n              try {\r\n                await (async scripttext => {\r\n                  let moduletype;\r\n                  const exports = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  const module = {\r\n                    exports: { [Symbol.toStringTag]: \"Module\" }\r\n                  };\r\n                  define.exports = {};\r\n                  var modulesrcfun;\r\n                  const moduleexport: { default: any; [k: string]: any } = {\r\n                    default: undefined\r\n                  };\r\n                  try {\r\n                    (function() //   myrequirefun,\r\n                    //  define,\r\n                    //  module,\r\n                    //   exports,\r\n                    //    scripttext\r\n                    {\r\n                      const 模块加载函数 = new Function(\r\n                        \"require\",\r\n                        \"define\",\r\n                        \"module\",\r\n                        \"exports\",\r\n                        `\"use strict\";\\n/* ${url} */;\\n${scripttext};\\n/* ${url} */;\\n`\r\n                      );\r\n                      modulesrcfun = 模块加载函数.toString();\r\n\r\n                      return 模块加载函数.call(\r\n                        module.exports,\r\n                        (name: string) => formatedurlrequire(name, url),\r\n                        define,\r\n                        module,\r\n                        exports.exports\r\n                      );\r\n                    })();\r\n                    //   /* myrequirefun,  */ define,\r\n                    //    module,\r\n                    //   exports,\r\n                    //    scripttext\r\n                    const exportmodule = [\r\n                      exports.exports ? exports.exports : {},\r\n                      module.exports ? module.exports : {},\r\n                      define.exports ? define.exports : {}\r\n                    ];\r\n                    处理非es模块(moduleexport, exportmodule, url, packagename);\r\n                    moduletype = \"cjs\";\r\n                  } catch (e) {\r\n                    console.warn(e);\r\n                    try {\r\n                      const moduleexportdefault = JSON.parse(scripttext);\r\n                      console.log(\"检测到json模块 \" + url);\r\n                      modulesrcfun = scripttext;\r\n                      moduletype = \"json\";\r\n\r\n                      Object.keys(moduleexportdefault)\r\n                        // .filter(t => t !== \"default\")\r\n                        .forEach(key => {\r\n                          Object.defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return moduleexportdefault[key];\r\n                            }\r\n                          });\r\n                        });\r\n                      try {\r\n                        Reflect.defineProperty(moduleexport, \"default\", {\r\n                          enumerable: false\r\n                        });\r\n                      } catch {}\r\n                    } catch (error) {\r\n                      console.warn(error);\r\n                      if (e instanceof SyntaxError) {\r\n                        const topLevelBlobUrl = url;\r\n                        modulesrcfun = scripttext;\r\n                        try {\r\n                          const exportdefault = await dynamicimportshim(\r\n                            topLevelBlobUrl\r\n                          );\r\n                          moduletype = \"esm\";\r\n                          Object.keys(exportdefault)\r\n                            // .filter(t => t !== \"default\")\r\n                            .forEach(key => {\r\n                              Object.defineProperty(moduleexport, key, {\r\n                                enumerable: true,\r\n                                get() {\r\n                                  return exportdefault[key];\r\n                                }\r\n                              });\r\n                            });\r\n                          /*  定义default(\r\n                            moduleexport,\r\n                            exportdefault.default\r\n                              ? exportdefault.default\r\n                              : exportdefault\r\n                          );*/\r\n                        } catch (e) {\r\n                          console.warn(e);\r\n                          reject(e);\r\n                          return;\r\n                        }\r\n                        if (typeof moduleexport.default === \"undefined\") {\r\n                          console.warn(加载的模块没有输出, packagename, url);\r\n                          try {\r\n                            Reflect.defineProperty(moduleexport, \"default\", {\r\n                              enumerable: false\r\n                            });\r\n                          } catch {}\r\n                          /*  reject(\r\n                            Error(\r\n                              加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n                            )\r\n                          );\r\n                          return;*/\r\n                        }\r\n                      } else {\r\n                        console.warn(e);\r\n                        reject(e);\r\n                        return;\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  Object.defineProperties(moduleexport, {\r\n                    [namesymbol]: {\r\n                      value: packagename,\r\n                      writable: true,\r\n                      enumerable: false\r\n                    },\r\n                    [urlsymbol]: {\r\n                      value: url,\r\n                      enumerable: false\r\n                    },\r\n                    [sourcesymbol]: {\r\n                      value: modulesrcfun,\r\n                      enumerable: false\r\n                    },\r\n                    [typesymbol]: {\r\n                      value: moduletype,\r\n                      enumerable: false\r\n                    }\r\n                  });\r\n                  if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\r\n                    Object.defineProperty(moduleexport, Symbol.toStringTag, {\r\n                      value: \"Module\"\r\n                    });\r\n                  }\r\n                  if (typeof moduleexport.default !== \"undefined\") {\r\n                    if (typeof packagename !== \"undefined\") {\r\n                      PACKAGESTORE[packagename] = moduleexport;\r\n                    }\r\n                  }\r\n                  if (typeof packagename !== \"undefined\") {\r\n                    PACKAGESTORE[url] = PACKAGESTORE[packagename];\r\n                  }\r\n                  !!moduleexport.default &&\r\n                    Object.keys(moduleexport.default)\r\n                      .filter(t => t !== \"default\")\r\n                      .forEach(key => {\r\n                        const moduleexportdefault = moduleexport.default;\r\n                        try {\r\n                          Object.defineProperty(moduleexport, key, {\r\n                            enumerable: true,\r\n                            get() {\r\n                              return Reflect.get(moduleexportdefault, key);\r\n                            }\r\n                          });\r\n                        } catch (error) {}\r\n                      });\r\n                  Object.freeze(moduleexport);\r\n                  resolve(moduleexport);\r\n                  return;\r\n                })(fetchpromisetext);\r\n              } catch (e) {\r\n                console.warn(e);\r\n                reject(e);\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              console.warn(e);\r\n              reject(e);\r\n              return;\r\n            }\r\n          })();\r\n        } catch (e) {\r\n          console.warn(e);\r\n          reject(e);\r\n          return;\r\n        }\r\n      })();\r\n    })(resolve, reject);\r\n  }\r\n};\r\n","// import { define } from \"./IMPORTCJSAMDUMD\";\r\nimport { 定义default } from \"./define-default\";\r\nimport { 非空对象 } from \"./notemptyobj\";\r\nimport { 加载的模块没有输出 } from \"./coreload\";\r\nimport { define } from \"./define\";\r\n\r\nexport function 处理非es模块(\r\n  moduleexport: { default: any },\r\n  exportmodule: any[],\r\n  url: string,\r\n  packagename: string | undefined\r\n) {\r\n  if (typeof exportmodule === \"undefined\") {\r\n    exportmodule = [{}, {}, {}];\r\n  }\r\n  if (typeof define.exports === \"undefined\") {\r\n    define.exports = {};\r\n  }\r\n\r\n  if (非空对象(exportmodule[0])) {\r\n    const exportdefault = exportmodule[0];\r\n    定义default(moduleexport, exportdefault);\r\n  } else if (非空对象(exportmodule[1])) {\r\n    const exportdefault = exportmodule[1];\r\n    定义default(moduleexport, exportdefault);\r\n  } else if (非空对象(exportmodule[2])) {\r\n    const exportdefault = exportmodule[2];\r\n    定义default(moduleexport, exportdefault);\r\n  } else {\r\n    console.warn(加载的模块没有输出, url, packagename);\r\n    /*   reject(\r\n          Error(\r\n            加载的模块没有输出 + \" \" + packagename + \" \" + url\r\n          )\r\n        );\r\n        return;*/\r\n  }\r\n}\r\n","export async function 同时发起多个字符串(\r\n  a: Array<string>,\r\n  importcjsamdumd: Function\r\n) {\r\n  return await Promise.all(\r\n    Array(...a).map(e => {\r\n      return importcjsamdumd(e);\r\n    })\r\n  );\r\n}\r\nexport async function 同时发起多个entries(\r\n  a: any[][],\r\n  importcjsamdumd: Function\r\n) {\r\n  return await Promise.all(\r\n    Array(...a).map(e => {\r\n      return importcjsamdumd(e[0], e[1]);\r\n    })\r\n  );\r\n}\r\n","import {\r\n  参数必须为字符串,\r\n  字符串不能为空,\r\n  PACKAGESTORE,\r\n  模块仓库中没有找到\r\n} from \"./importcjsamdumd\";\r\nimport { cantfindError } from \"./cantfindError\";\r\n\r\nexport function getmodule(packagename: string) {\r\n  \"use strict\";\r\n  if (packagename === \"\") {\r\n    throw new TypeError(字符串不能为空);\r\n  }\r\n  if (typeof packagename !== \"string\") {\r\n    throw new TypeError(参数必须为字符串);\r\n  }\r\n  const findpackage = PACKAGESTORE[packagename];\r\n  if (findpackage) {\r\n    Object.freeze(findpackage);\r\n    return findpackage;\r\n    /*new Proxy(findpackage, {\r\n        set() {\r\n          return false;\r\n        },\r\n        deleteProperty() {\r\n          return false;\r\n        }\r\n      });*/\r\n  } else {\r\n    throw new cantfindError(模块仓库中没有找到 + packagename, packagename);\r\n  }\r\n}\r\n","// import { 同时发起多个entries } from \"./arrayimportall.js\";\r\nimport { assertstring } from \"./assertstring.js\";\r\nimport coreload, { namesymbol, urlsymbol } from \"./coreload.js\";\r\nimport importcjsamdumd, {\r\n  //   assertstring,\r\n  //   getmodule,\r\n  //   isArray,\r\n  //   isplainobject,\r\n  PACKAGESTORE\r\n} from \"./importcjsamdumd\";\r\nimport { isplainobject } from \"./isplainobject.js\";\r\nimport { newobjjson } from \"./newobjjson.js\";\r\nimport { 同时发起多个entries, 同时发起多个字符串 } from \"./arrayimportall.js\";\r\nimport { isArray } from \"./isarray.js\";\r\nimport { getmodule } from \"./getmodule.js\";\r\nconst 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\n// export const 非法字符串 = \"输入的类型错误,输入的字符串不能为空,不能为undefined\";\r\n// export const namesymbol = Symbol.for(\"name\");\r\n// export const urlsymbol = Symbol.for(\"url\");\r\nexport const 传入的参数必须是个object = \"传入的参数必须是个object\";\r\nexport type PlainObj = Record<any, any>;\r\n\r\nexport default (() => {\r\n  return async function oldimportcjsamdumd(\r\n    url: any,\r\n    packagename?: any\r\n  ): Promise<any> {\r\n    \"use strict\";\r\n    if (isplainobject(url)) {\r\n      return await (async url => {\r\n        url = newobjjson(url);\r\n        const 输入参数array = Object.entries(\r\n          url\r\n        ); /*  Object.keys(url).map(key => {\r\n          const packageurl = url[key];\r\n          const packagenm = key;\r\n          return [packageurl, packagenm];\r\n        }); */\r\n        let suoyouimportpromise = [];\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个entries(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个entries(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个entries(\r\n            输入参数array,\r\n            importcjsamdumd\r\n          );\r\n        }\r\n        let objecttoreturn: PlainObj = {};\r\n        suoyouimportpromise.forEach(m => {\r\n          objecttoreturn[m[namesymbol]] = m;\r\n        });\r\n        return objecttoreturn;\r\n      })(url);\r\n    } else if (\r\n      (isArray(url) && typeof url === \"object\") ||\r\n      typeof packagename === \"object\"\r\n    ) {\r\n      return await (async (...args) => {\r\n        let suoyouimportpromise = [];\r\n        const 传入参数arr = Array(...args).flat(); //JSON.parse(JSON.stringify(Array(...args).flat()));\r\n        try {\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        } catch (error) {\r\n          console.warn(error);\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        } finally {\r\n          suoyouimportpromise = await 同时发起多个字符串(\r\n            传入参数arr,\r\n            importcjsamdumd\r\n          );\r\n        }\r\n        return suoyouimportpromise;\r\n      })(...[url, packagename].flat());\r\n    } else if (typeof url === \"string\" || typeof packagename === \"string\") {\r\n      assertstring(url);\r\n      return await (async (url: string, packagename?: string) => {\r\n        /*   if (typeof url === \"undefined\" || packagename === \"\") {\r\n          throw new TypeError(非法字符串);\r\n        } */\r\n        if (typeof packagename === \"undefined\") {\r\n          packagename = new URL(url).href;\r\n        }\r\n        url = new URL(url).href;\r\n        if (\r\n          typeof PACKAGESTORE[packagename] !== \"undefined\" &&\r\n          typeof PACKAGESTORE[packagename].default !== \"undefined\" &&\r\n          Reflect.get(PACKAGESTORE[packagename], urlsymbol) === url\r\n          //  [urlsymbol] === url\r\n        ) {\r\n          return getmodule(packagename);\r\n        } else if (\r\n          typeof PACKAGESTORE[url] !== \"undefined\" &&\r\n          typeof PACKAGESTORE[url].default !== \"undefined\" &&\r\n          Reflect.get(PACKAGESTORE[url], urlsymbol) === url\r\n          //   PACKAGESTORE[url][urlsymbol] === url\r\n        ) {\r\n          PACKAGESTORE[packagename] = PACKAGESTORE[url];\r\n          //   PACKAGESTORE[packagename][namesymbol] = packagename;\r\n          Reflect.set(PACKAGESTORE[packagename], namesymbol, packagename);\r\n          return getmodule(url);\r\n        } else {\r\n          return await coreload(url, packagename);\r\n        }\r\n      })(url, packagename);\r\n    } else {\r\n      throw new TypeError(输入的类型错误输入的类型必须是字符串或者数组或对象);\r\n    }\r\n  };\r\n})();\r\n","import { PlainObj, 传入的参数必须是个object } from \"./oldimport\";\r\n\r\nexport function newobjjson(obj: PlainObj) {\r\n  if (typeof obj !== \"object\") {\r\n    throw new TypeError(传入的参数必须是个object);\r\n  }\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","/* const 输入的类型错误输入的类型必须是字符串或者数组或对象 =\r\n  \"输入的类型错误,输入的类型必须是字符串或者数组或对象\";\r\nconst 非法字符串 = \"输入的类型错误,输入的字符串不能为空,url不能为undefined\";\r\nconst namesymbol = Symbol.for(\"name\");\r\nconst urlsymbol = Symbol.for(\"url\"); */\r\nimport { cantfindError } from \"./cantfindError\";\r\nimport { isplainobject } from \"./isplainobject\";\r\nimport oldimportcjsamdumd from \"./oldimport\";\r\nimport { getmodule } from \"./getmodule\";\r\nimport { isurl } from \"./isurl\";\r\n\r\nexport const 模块仓库中没有找到 =\r\n  \"Cannot find module in packagestore, 模块仓库中没有找到, \";\r\n\r\n// export const GLOBALPACKAGESTORE = \"PACKAGESTORE\";\r\n\r\nexport const 参数必须为字符串 = \"参数必须为字符串\";\r\n(\"use strict\");\r\nexport const 字符串不能为空 = \"字符串不能为空\";\r\n\r\n// const importcjsamdumd = (() => {\r\n(\"use strict\");\r\nexport const 补充加载依赖的模块网址 = \"补充加载依赖的模块网址\";\r\n\r\n// const importcjsamdumd = importcjsamdumd;\r\n\r\nasync function importcjsamdumd(url: any, packagename?: any): Promise<any> {\r\n  const inarguments: [any, any] = [url, packagename];\r\n  //   const importcjsamdumd = importcjsamdumd;\r\n  return await oldimportcjsamdumd(...inarguments).catch(handleerror);\r\n  async function handleerror(e: Error): Promise<any> {\r\n    console.warn(e);\r\n    if (e instanceof cantfindError && e.urlorname) {\r\n      if (isurl(e.urlorname)) {\r\n        console.log(补充加载依赖的模块网址, e.urlorname);\r\n        await importcjsamdumd(e.urlorname);\r\n        return await importcjsamdumd(...inarguments);\r\n      } else if (\r\n        isplainobject(inarguments[0]) &&\r\n        Reflect.has(inarguments[0], e.urlorname)\r\n      ) {\r\n        await oldimportcjsamdumd(...inarguments);\r\n        return await oldimportcjsamdumd(...inarguments);\r\n      } else {\r\n        throw e;\r\n      }\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n/* export interface IMPORTCJSAMDUMD {\r\n  (url: any, packagename?: any): Promise<any>;\r\n  PACKAGESTORE: Record<string, PlainObj>;\r\n  REQUIREPACKAGE: (packagename: string) => any;\r\n} */\r\n// /* importcjsamdumd.PACKAGESTORE = {} as Record<\r\n//   string|symbol,\r\n//   PlainObj\r\n// >; /* PACKAGESTORE ||  */\r\n// importcjsamdumd.REQUIREPACKAGE = getmodule; */\r\n//   return importcjsamdumd;\r\n// })();\r\n// const IMPORTcjsamdumd: IMPORTCJSAMDUMD = importcjsamdumd;\r\n\r\nexport default importcjsamdumd;\r\nconst PACKAGESTORE: Record<string, Record<string | symbol, any>> = {};\r\nconst REQUIREPACKAGE = getmodule;\r\n// export const { PACKAGESTORE, REQUIREPACKAGE } = importcjsamdumd;\r\nexport { PACKAGESTORE, REQUIREPACKAGE };\r\n","import { 参数必须为字符串, 字符串不能为空 } from \"./importcjsamdumd\";\r\n\r\nexport function isurl(url: string) {\r\n  var flag = false;\r\n  try {\r\n    if (url === \"\") {\r\n      throw new TypeError(字符串不能为空);\r\n    }\r\n    if (typeof url !== \"string\") {\r\n      throw new TypeError(参数必须为字符串);\r\n    }\r\n    url = new URL(url).href;\r\n    flag = true;\r\n  } catch (error) {\r\n    flag = false;\r\n  }\r\n  return flag;\r\n}\r\n"],"names":["cantfindError","Error","[object Object]","message","urlorname","super","this","isplainobject","o","toString","call","assertstring","s","TypeError","字符串不能为空","参数必须为字符串","dynamicimportshimfun","dynamicimportshim","Function","error","async","url","URL","href","symbolkey","Symbol","for","Promise","resolve","reject","document","createElement","clearsideeffect","remove","f","window","removeEventListener","removeerrorlisten","errorhandler","revokeObjectURL","src","onload","onerror","e","addEventListener","topLevelBlobUrl","source","createObjectURL","Blob","type","createBlob","Reflect","has","moduleoutput","get","set","undefined","head","appendChild","getnewimportpromise","myrequirefun","packagename","findpackage","PACKAGESTORE","Object","freeze","default","模块仓库中没有找到","formatedurlrequire","formatedurl","baseurl","String","startsWith","endsWith","格式化url","objurl","a","pathname","split","length","origin","join","getbaseurl","定义default","target","def","toStringTag","defineProperty","enumerable","非空对象","keys","JSON","stringify","isArray","Array","define","name","deps","callback","it","exports","amd","defineglobalDefQueue","canshu","map","typesymbol","namesymbol","urlsymbol","sourcesymbol","fetchpromisetext","fetch","then","response","ok","text","moduletype","module","modulesrcfun","moduleexport","模块加载函数","scripttext","exportmodule","处理非es模块","moduleexportdefault","parse","forEach","key","SyntaxError","exportdefault","defineProperties","value","writable","filter","t","同时发起多个字符串","importcjsamdumd","all","同时发起多个entries","getmodule","传入的参数必须是个object","obj","newobjjson","输入参数array","entries","suoyouimportpromise","objecttoreturn","m","args","传入参数arr","flat","coreload","inarguments","oldimportcjsamdumd","catch","flag","isurl","REQUIREPACKAGE"],"mappings":"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"}