{
    "scripts": {
        "build": "rollup -c"
    },
    "name": "importcjsamdumd",
    "version": "2.1.9",
    "description": "动态异步加载\" commonjs \"和 \"umd \"和 \"amd\"和\"ES\" 模块四合一,更新！可以使用相对路径加载同类型的模块！可以在commonjs模块中使用相对路径加载commonjs模块了！可以在ES模块中使用相对路径加载ES模块了！动态异步加载 commonjs 和 umd 和 amd 模块 ,包装 cjs 和 amd 和 umd 模块为异步加载 promise 方法,使用 fetch 方法来获取指定的模块包源代码 ， 可以把模块放入模块仓库中，  并且解决了包之间的依赖关系，如果依赖包当中的 require 函数需要，则在模块仓库中引入需要的模块包  定义了模块包的 define 方法，require 方法，module.exports 对象和 exports 对象  Dynamically asynchronously load commonjs and umd and amd modules, wrap cjs and amd and umd modules to load the promise method asynchronously, use the fetch method to get the specified module package source code, and put the module into the module repository.",
    "main": "./dist/index.esm.min.js",
    "repository": "https://github.com/masx200/IMPORTCJSAMDUMD.git",
    "author": "masx200 <34191203+masx200@users.noreply.github.com>",
    "license": "MIT",
    "module": "./dist/index.esm.min.js",
    "devDependencies": {
        "estraverse": "^4.2.0",
        "esutils": "^2.0.3",
        "rollup": "^1.18.0",
        "rollup-plugin-commonjs": "^10.0.2",
        "rollup-plugin-node-resolve": "^5.2.0",
        "rollup-plugin-terser": "^5.1.1",
        "terser": "^4.1.2",
        "rollup-plugin-json": "^4.0.0"
    },
    "dependencies": {}
}