{
    "type": "module",
    "version": "2.6.2",
    "module": "./dist/index.min.js",
    "main": "./dist/index.min.js",
    "types": "./dist/index.d.ts",
    "publishConfig": {
        "registry": "https://registry.npmjs.org/"
    },
    "scripts": {
        "prettier": "prettier **/*.js  *.json *.md **/*.ts --write ",
        "build": "rollup -c  rollup.config.js",
        "test": "live-server "
    },
    "name": "@masx200/importcjsamdumd",
    "description": "动态异步加载\" commonjs \"和 \"umd \"和 \"amd\"和\"ES\" 模块四合一,更新！可以使用相对路径加载同类型的模块！可以在commonjs模块中使用相对路径加载commonjs模块了！可以在ES模块中使用相对路径加载ES模块了！动态异步加载 commonjs 和 umd 和 amd 模块 ,包装 cjs 和 amd 和 umd 模块为异步加载 promise 方法,使用 fetch 方法来获取指定的模块包源代码 ， 可以把模块放入模块仓库中，  并且解决了包之间的依赖关系，如果依赖包当中的 require 函数需要，则在模块仓库中引入需要的模块包  定义了模块包的 define 方法，require 方法，module.exports 对象和 exports 对象  ",
    "repository": "https://github.com/masx200/importcjsamdumd.git",
    "author": "masx200 <34191203+masx200@users.noreply.github.com>",
    "license": "MIT",
    "devDependencies": {
        "@babel/core": "^7.8.4",
        "@babel/plugin-proposal-optional-catch-binding": "^7.8.3",
        "@babel/preset-env": "^7.8.4",
        "@rollup/plugin-commonjs": "^11.0.2",
        "@rollup/plugin-json": "^4.0.2",
        "@rollup/plugin-node-resolve": "^7.1.1",
        "@types/node": "^13.7.1",
        "acorn": "7.1.1",
        "live-server": "^1.2.1",
        "minimist": "1.2.5",
        "prettier": "^1.19.1",
        "rollup": "2.2.0",
        "rollup-plugin-babel": "^4.3.3",
        "rollup-plugin-sourcemaps": "^0.5.0",
        "rollup-plugin-terser": "^5.2.0",
        "rollup-plugin-ts": "^1.2.14",
        "serialize-javascript": "^3.0.0",
        "terser": "^4.6.3",
        "typescript": "^3.8.3"
    },
    "dependencies": {}
}
